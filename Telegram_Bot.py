import telebot
from telebot import types
import time
import random as rn

from telegram._poll import Poll
import matplotlib.pyplot as plt
import sqlite3

bot = telebot.TeleBot("token")
n = 0
k = 0
# –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–ª—è —Ç–µ—Å—Ç–æ–≤
num_no_machine = ""
num_no_tepl = ""
num_no_el = ""
num_no_kvants = ""
# –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–∞
people_short_otzv_1 = 0
people_short_otzv_2 = 0
people_short_otzv_3 = 0
people_short_otzv_4 = 0
podr_otz = []

####################################################################################
##      –ö–û–ú–ê–ù–î–´ –ê–î–ú–ò–ù–ê:                                                           ##
##                                                                                ##
##      1) /statistik - –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –≥–∏—Å—Ç–æ–≥—Ä–∞–º–º—ã –∫–æ—Ä–æ—Ç–∫–∏—Ö –æ—Ç–∑—ã–≤–æ–≤                   ##
##      2) /read - —á—Ç–µ–Ω–∏–µ –ø–æ–¥—Ä–æ–±–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤                                       ##
##      3) /delete_data - —É–¥–∞–ª–µ–Ω–∏–µ –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π                       ##
##      4) /delete_all_no_num - —É–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –±–∞–∑—ã –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Ç–µ—Å—Ç–æ–≤ ##
##      5) /delete_admin_no_num                                                   ##
##      6) /delete_podr_otz - —É–¥–∞–ª–µ–Ω–∏–µ –í–°–ï–• –ø–æ–¥—Ä–æ–±–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤ –∏–∑ –±–∞–∑—ã             ##
##      7) /delete_admin_short_otz - —É–¥–∞–ª–µ–Ω–∏–µ –∫–æ—Ä–æ—Ç–∫–æ–≥–æ –æ—Ç–∑—ã–≤–∞ –∏–∑ –±–∞–∑—ã            ##
####################################################################################

try:
    @bot.message_handler(commands=['start'])
    def send_welcome(message):
        q = open("hello_sticker.webp", "rb")
        bot.send_sticker(message.chat.id, q)

        # —Å–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ—á–µ–∫
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)

        item1 = types.KeyboardButton("‚öôÔ∏è–ú–µ—Ö–∞–Ω–∏—á–µ—Å–∫–∏–µ —è–≤–ª–µ–Ω–∏—è‚öôÔ∏è")
        item2 = types.KeyboardButton("üå°–¢–µ–ø–ª–æ–≤—ã–µ —è–≤–ª–µ–Ω–∏—èüå°")
        item3 = types.KeyboardButton("‚ö°Ô∏è–≠–ª–µ–∫—Ç—Ä–æ–º–∞–≥–Ω–∏—Ç–Ω—ã–µ —è–≤–ª–µ–Ω–∏—è‚ö°Ô∏è")
        item4 = types.KeyboardButton("‚ò¢Ô∏è–ö–≤–∞–Ω—Ç–æ–≤—ã–µ —è–≤–ª–µ–Ω–∏—è‚ò¢Ô∏è")
        item5 = types.KeyboardButton("üìú–°–ø—Ä–∞–≤–æ—á–Ω—ã–π –º–∞—Ç–µ—Ä–∏–∞–ªüìú")
        item6 = types.KeyboardButton("üìù–¢–µ—Å—Ç—ãüìù")
        item7 = types.KeyboardButton("üóÇ–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤üóÇ")
        markup.add(item1, item2, item3, item4, item5, item6, item7)
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–µ—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π –≤–∞—Å —Ä–∞–∑–¥–µ–ª —Ñ–∏–∑–∏–∫–∏ =)", reply_markup=markup)


        # —Å–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–µ—Å—Ç–æ–≤
        connect = sqlite3.connect('data_telegram.db')
        cursor = connect.cursor()
        cursor.execute("""CREATE TABLE IF NOT EXISTS telegram_users(
            id INTEGER,
            n INTEGER,
            k INTEGER
        )""")
        connect.commit()

        # —Å–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∫–æ—Ä–æ—Ç–∫–∏—Ö –æ—Ç–≤–µ—Ç–æ–≤ –æ–ø—Ä–æ—Å–∞
        cursor.execute("""CREATE TABLE IF NOT EXISTS short_otz(
                                id INTEGER,
                                people_short_otzv_1 INTEGER,
                                people_short_otzv_2 INTEGER,
                                people_short_otzv_3 INTEGER,
                                people_short_otzv_4 INTEGER
                            )""")
        connect.commit()

        # —Å–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–µ—Å—Ç–æ–≤ - —É–ª—É—á—à–µ–Ω–∏–µ
        cursor.execute("""CREATE TABLE IF NOT EXISTS tests_no_num(
                                            id INTEGER,
                                            num_no_machine TEXT,
                                            num_no_tepl TEXT,
                                            num_no_el TEXT,
                                            num_no_kvants TEXT
                                        )""")
        connect.commit()


        people_id = message.chat.id
        cursor.execute(f"SELECT id FROM telegram_users WHERE id = {people_id}")
        data1 = cursor.fetchone()
        global n, k
        global num_no_machine, num_no_tepl, num_no_el, num_no_kvants
        if data1 is None:
            # –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
            users = [message.chat.id, n, k]
            cursor.execute("INSERT INTO telegram_users VALUES(?,?,?);", users)
            connect.commit()

        cursor.execute(f"SELECT id FROM short_otz WHERE id = {people_id}")
        data2 = cursor.fetchone()
        if data2 is None:
            data_short_otz = [message.chat.id, people_short_otzv_1, people_short_otzv_2, people_short_otzv_3, people_short_otzv_4]
            cursor.execute("INSERT INTO short_otz VALUES(?,?,?,?,?);", data_short_otz)
            connect.commit()

        cursor.execute(f"SELECT id FROM tests_no_num WHERE id = {people_id}")
        data3 = cursor.fetchone()
        if data3 is None:
            data_tests_no_num = [message.chat.id, num_no_machine, num_no_tepl, num_no_el, num_no_kvants]
            cursor.execute("INSERT INTO tests_no_num VALUES(?,?,?,?,?);", data_tests_no_num)
            connect.commit()


    # –æ—á–∏—Å—Ç–∫–∞ –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö: –∞–¥–º–∏–Ω
    @bot.message_handler(commands=['delete_data'])
    def delete_data(message):
        if message.chat.id == 847195722:
            connect = sqlite3.connect('data_telegram.db')
            cursor = connect.cursor()
            cursor.execute(f"DELETE FROM telegram_users WHERE id")
            connect.commit()
            bot.send_message(message.chat.id, "–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ –±–∞–∑—ã —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã!")
        else:
            bot.send_message(message.chat.id, "–í—ã –Ω–µ –∞–¥–º–∏–Ω!")

    @bot.message_handler(commands=['delete_all_no_num'])
    def delete_num_no_all(message):
        if message.chat.id == 847195722:
            connect = sqlite3.connect('data_telegram.db')
            cursor = connect.cursor()
            cursor.execute(f"DELETE FROM tests_no_num WHERE id")
            connect.commit()
            bot.send_message(message.chat.id, "–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ –±–∞–∑—ã —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã!")
        else:
            bot.send_message(message.chat.id, "–í—ã –Ω–µ –∞–¥–º–∏–Ω!")

    @bot.message_handler(commands=['delete_admin_no_num'])
    def delete_admin_no_num(message):
        if message.chat.id == 847195722:
            admin = message.chat.id
            connect = sqlite3.connect('data_telegram.db')
            cursor = connect.cursor()
            cursor.execute(f"DELETE FROM tests_no_num WHERE id = {admin}")
            connect.commit()
            bot.send_message(message.chat.id, "–î–∞–Ω–Ω—ã–µ –∞–¥–º–∏–Ω–∞ –∏–∑ –±–∞–∑—ã —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã!")
        else:
            bot.send_message(message.chat.id, "–í—ã –Ω–µ –∞–¥–º–∏–Ω!")

    @bot.message_handler(commands=['delete_podr_otz'])
    def delete_podr_otz(message):
        if message.chat.id == 847195722:
            connect = sqlite3.connect('data_telegram.db')
            cursor = connect.cursor()
            cursor.execute(f"DELETE FROM podr_otz")
            connect.commit()
            bot.send_message(message.chat.id, "–î–∞–Ω–Ω—ã–µ –∏–∑ –±–∞–∑—ã —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã!")
        else:
            bot.send_message(message.chat.id, "–í—ã –Ω–µ –∞–¥–º–∏–Ω!")

    @bot.message_handler(commands=['delete_admin_short_otz'])
    def delete_short_otz(message):
        if message.chat.id == 847195722:
            admin = message.chat.id
            connect = sqlite3.connect('data_telegram.db')
            cursor = connect.cursor()
            cursor.execute(f"DELETE FROM short_otz WHERE id={admin}")
            connect.commit()
            bot.send_message(message.chat.id, "–î–∞–Ω–Ω—ã–µ –∞–¥–º–∏–Ω–∞ –∏–∑ –±–∞–∑—ã —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã!")
        else:
            bot.send_message(message.chat.id, "–í—ã –Ω–µ –∞–¥–º–∏–Ω!")

    def machine(message):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        item1 = types.KeyboardButton("–ö–∏–Ω–µ–º–∞—Ç–∏–∫–∞")
        item2 = types.KeyboardButton("–î–∏–Ω–∞–º–∏–∫–∞")
        item3 = types.KeyboardButton("–ú–µ—Ö–∞–Ω–∏—á–µ—Å–∫–∞—è —ç–Ω–µ—Ä–≥–∏—è")
        item4 = types.KeyboardButton("‚¨ÖÔ∏è–í—ã—Ö–æ–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(item1, item2, item3, item4)
        bot.reply_to(message, "–ö–∏–Ω–µ–º–∞—Ç–∏–∫–∞ –∏–ª–∏ –î–∏–Ω–∞–º–∏–∫–∞?", reply_markup=markup)


    def first_zakon_nutona(message):
        bot.send_message(message.chat.id,
                         "–°—É—â–µ—Å—Ç–≤—É—é—Ç —Å–∏—Å—Ç–µ–º—ã –æ—Ç—Å—á—ë—Ç–∞, –Ω–∞–∑—ã–≤–∞–µ–º—ã–µ –∏–Ω–µ—Ä—Ü–∏–∞–ª—å–Ω—ã–º–∏, –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –∫–æ—Ç–æ—Ä—ã—Ö —Ç–µ–ª–æ –¥–≤–∏–∂–µ—Ç—Å—è –ø—Ä—è–º–æ–ª–∏–Ω–µ–π–Ω–æ –∏ —Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ, –µ—Å–ª–∏ –Ω–∞ –Ω–µ–≥–æ –Ω–µ –¥–µ–π—Å—Ç–≤—É—é—Ç –¥—Ä—É–≥–∏–µ –¥–µ–ª–∞. ")


    def second_zakon_nutona(message):
        bot.send_message(message.chat.id,
                         "–£—Å–∫–æ—Ä–µ–Ω–∏–µ —Ç–µ–ª–∞ –ø—Ä—è–º–æ –ø—Ä–æ–ø–æ—Ä—Ü–∏–æ–Ω–∞–ª—å–Ω–æ —Å–∏–ª–µ, –¥–µ–π—Å—Ç–≤—É—é—â–µ–π –Ω–∞ –Ω–µ–≥–æ, –∏ –æ–±—Ä–∞—Ç–Ω–æ –ø—Ä–æ–ø–æ—Ä—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –µ–≥–æ –º–∞—Å—Å–µ: a = F/m")
        z2 = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/img_1.png", "rb")
        bot.send_photo(message.chat.id, z2)


    def third_zakon_nutona(message):
        bot.reply_to(message,
                     "–°–∏–ª—ã —Å –∫–æ—Ç–æ—Ä—ã–º–∏ —Ç–µ–ª–∞ –¥–µ–π—Å—Ç–≤—É—é—Ç –¥—Ä—É–≥ –Ω–∞ –¥—Ä—É–≥–∞, —Ä–∞–≤–Ω—ã –ø–æ –º–æ–¥—É–ª—é –∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω—ã –ø–æ –æ–¥–Ω–æ–π –ø—Ä—è–º–æ–π –≤ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã: F(1—Ç–µ–ª–∞) = -F(2—Ç–µ–ª–∞)")
        z3 = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/img_2.png", "rb")
        bot.send_photo(message.chat.id, z3)


    def force_in_wild(message):
        bot.reply_to(message,
                     """
    üìç–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ: –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å —Å–∏–ª—å–Ω–æ–≥–æ –∏ —Å–ª–∞–±–æ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–π –∏–∑–º–µ—Ä—è–µ—Ç—Å—è –≤ –µ–¥–∏–Ω–∏—Ü–∞—Ö —ç–Ω–µ—Ä–≥–∏–∏ (–≤ —ç–ª–µ–∫—Ç—Ä–æ–Ω-–≤–æ–ª—å—Ç–∞—Ö), –∞ –Ω–µ –≤ –µ–¥–∏–Ω–∏—Ü–∞—Ö —Å–∏–ª—ã, –∏ –ø–æ—Ç–æ–º—É –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∫ –Ω–∏–º —Ç–µ—Ä–º–∏–Ω–∞ '—Å–∏–ª–∞' –æ–±—ä—è—Å–Ω—è–µ—Ç—Å—è –º–Ω–æ–≥–æ–≤–µ–∫–æ–≤–æ–π —Ç—Ä–∞–¥–∏—Ü–∏–µ–π –≤—Å–µ —è–≤–ª–µ–Ω–∏—è –≤ –æ–∫—Ä—É–∂–∞—é—â–µ–º –º–∏—Ä–µ –æ–±—ä—è—Å–Ω—è—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–Ω—ã—Ö –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —è–≤–ª–µ–Ω–∏—è '—Å–∏–ª'."
    üìç–í –º–µ—Ö–∞–Ω–∏–∫–µ –æ–±—ã—á–Ω–æ –∏–º–µ—é—Ç –¥–µ–ª–æ —Å —Ç—Ä–µ–º—è –≤–∏–¥–∞–º–∏ —Å–∏–ª - —Å–∏–ª–∞–º–∏ —Ç—è–≥–æ—Ç–µ–Ω–∏—è, —Å–∏–ª–∞–º–∏ —É–ø—Ä—É–≥–æ—Å—Ç–∏ –∏ —Å–∏–ª–∞–º–∏ —Ç—Ä–µ–Ω–∏—è.
                     """)
        v = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/img_11.png", "rb")
        bot.send_photo(message.chat.id, v)


    def deformation_and_force_uprugosti(message):
        bot.reply_to(message, "–î–µ—Ñ–æ—Ä–º–∞—Ü–∏—è - –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã –∏–ª–∏ –æ–±—ä—ë–º–∞ —Ç–µ–ª–∞.")
        v = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/img_12.png", "rb")
        v1 = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/img_13.png", "rb")
        bot.send_photo(message.chat.id, v)
        bot.send_photo(message.chat.id, v1)


    def zakon_Guka(message):
        v = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/img_14.png", "rb")
        bot.send_photo(message.chat.id, v)


    def zakon_world_mg(message):
        bot.send_message(message.chat.id, "–ó–∞–∫–æ–Ω –≤—Å–µ–º–∏—Ä–Ω–æ–≥–æ —Ç—è–≥–æ—Ç–µ–Ω–∏—è –±—ã–ª —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ù—å—é—Ç–æ–Ω–æ–º, –∏ –æ–Ω —É—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç, —á—Ç–æ —Ç–µ–ª–∞ –ø—Ä–∏—Ç—è–≥–∏–≤–∞—é—Ç—Å—è –¥—Ä—É–≥ –∫ –¥—Ä—É–≥—É —Å —Å–∏–ª–æ–π, –º–æ–¥—É–ª—å –∫–æ—Ç–æ—Ä–æ–π\
        –ø—Ä—è–º–æ –ø—Ä–æ–ø–æ—Ä—Ü–∏–æ–Ω–∞–ª–µ–Ω –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—é –∏—Ö –º–∞—Å—Å –∏ –æ–±—Ä–∞—Ç–Ω–æ –ø—Ä–æ–ø–æ—Ä—Ü–∏–æ–Ω–∞–ª–µ–Ω –∫–≤–∞–¥—Ä–∞—Ç—É —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è –º–µ–∂–¥—É –Ω–∏–º–∏.")
        mg = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/–∑–∞–∫–æ–Ω –≤—Å–µ–º–∏—Ä–Ω–æ–≥–æ —Ç—è–≥–æ—Ç–µ–Ω–∏—è.jpg", "rb")
        bot.send_photo(message.chat.id, mg)


    def mv(message):
        bot.send_message(message.chat.id,
                         "–í–µ–ª–∏—á–∏–Ω—É, —Ä–∞–≤–Ω—É—é –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—é –º–∞—Å—Å—ã —Ç–µ–ª–∞ –∏ –µ–≥–æ —Å–∫–æ—Ä–æ—Å—Ç–∏, –Ω–∞–∑—ã–≤–∞—é—Ç –∏–º–ø—É–ª—å—Å–æ–º —Ç–µ–ª–∞.")
        mvv = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/–∏–º–ø—É–ª—å—Å —Ç–µ–ª–∞.jpg", "rb")
        bot.send_photo(message.chat.id, mvv)


    def zakon_save_mv(message):
        bot.send_message(message.chat.id,
                         "–ì–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∞—è —Å—É–º–º–∞ –∏–º–ø—É–ª—å—Å–æ–≤ —Ç–µ–ª, –≤—Ö–æ–¥—è—â–∏—Ö –≤ –∑–∞–º–∫–Ω—É—Ç—É—é —Å–∏—Å—Ç–µ–º—É, –æ—Å—Ç–∞—ë—Ç—Å—è –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–π –ø—Ä–∏ –ª—é–±—ã—Ö –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è—Ö —Ç–µ–ª —ç—Ç–æ–π —Å–∏—Å—Ç–µ–º—ã –º–µ–∂–¥—É —Å–æ–±–æ–π.")
        zmv = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/–∑–∞–∫–æ–Ω —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–º–ø—É–ª—å—Å–∞ —Ç–µ–ª–∞.jpg", "rb")
        bot.send_photo(message.chat.id, zmv)


    def mechine_A_N(message):
        bot.send_message(message.chat.id,
                         """
1) –ú–µ—Ö–∞–Ω–∏—á–µ—Å–∫–∞—è —Ä–∞–±–æ—Ç–∞ - —ç—Ç–æ —Ñ–∏–∑–∏—á–µ—Å–∫–∞—è –≤–µ–ª–∏—á–∏–Ω–∞, —Ä–∞–≤–Ω–∞—è –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—é –≤–µ–∫—Ç–æ—Ä–∞ —Å–∏–ª—ã, –¥–µ–π—Å—Ç–≤—É—é—â–µ–π –Ω–∞ —Ç–µ–ª–æ, –∏ –≤–µ–∫—Ç–æ—Ä–∞ –µ–≥–æ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è.
2) –ï—Å–ª–∏ —Å–∏–ª–∞, –¥–µ–π—Å—Ç–≤—É—é—â–∞—è –Ω–∞ —Ç–µ–ª–æ, —Å–æ—Å—Ç–æ—è–≤–ª—è–µ—Ç –Ω–µ–∫–æ—Ç–æ—Ä—ã–π —É–≥–æ–ª (–∞–ª—å—Ñ–∞) —Å –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ–º, —Ç–æ —Ä–∞–±–æ—Ç–∞ –ø–æ—Å—Ç–æ—è–Ω–Ω–æ–π —Å–∏–ª—ã —Ä–∞–≤–Ω–∞ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—é\
–º–æ–¥—É–ª–µ–π –≤–µ–∫—Ç–æ—Ä–æ–≤ —Å–∏–ª—ã –∏ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è –∏ –∫–æ—Å–∏–Ω—É—Å–∞ —É–≥–ª–∞ –º–µ–∂–¥—É —ç—Ç–∏–º–∏ –≤–µ–∫—Ç–æ—Ä–∞–º–∏.
3) –ú–æ—â–Ω–æ—Å—Ç—å—é –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è —Ñ–∏–∑–∏—á–µ—Å–∫–∞—è –≤–µ–ª–∏—á–∏–Ω–∞, —Ä–∞–≤–Ω–∞—è –æ—Ç–Ω–æ—à–µ–Ω–∏—é —Ä–∞–±–æ—Ç—ã –∫ –ø—Ä–æ–º–µ–∂—É—Ç–∫—É –≤—Ä–µ–º–µ–Ω–∏, –∑–∞ –∫–æ—Ç–æ—Ä—ã–π –æ–Ω–∞ —Å–æ–≤–µ—Ä—à–µ–Ω–∞. –ú–æ—â–Ω–æ—Å—Ç—å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏–∑—É–µ—Ç –±—ã—Å—Ç—Ä–æ—Ç—É —Å–æ–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã.
                         """)
        ma = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/—Ä–∞–±–æ—Ç–∞.jpeg", "rb")
        bot.send_photo(message.chat.id, ma)
        mn = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/–º–æ—â–Ω–æ—Å—Ç—å.jpg", "rb")
        bot.send_photo(message.chat.id, mn)


    def KPD(message):
        bot.send_message(message.chat.id,
                         "–ö–ü–î - —ç—Ç–æ —Å–∫–∞–ª—è—Ä–Ω–∞—è —Ñ–∏–∑–∏—á–µ—Å–∫–∞—è –≤–µ–ª–∏—á–∏–Ω–∞, —á–∏—Å–ª–µ–Ω–Ω–æ —Ä–∞–≤–Ω–∞—è –æ—Ç–Ω–æ—à–µ–Ω–∏—é –ø–æ–ª–µ–∑–Ω–æ–π —Ä–∞–±–æ—Ç—ã –∫ –∑–∞—Ç—Ä–∞—á–µ–Ω–Ω–æ–π –≤ —Å–∏—Å—Ç–µ–º–µ.")
        kpd = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/–∫–ø–¥.jpeg", "rb")
        bot.send_photo(message.chat.id, kpd)


    def pressure(message):
        bot.send_message(message.chat.id,
                         "–î–∞–≤–ª–µ–Ω–∏–µ - —ç—Ç–æ —Ñ–∏–∑–∏—á–µ—Å–∫–∞—è –≤–µ–ª–∏—á–∏–Ω–∞, —Ä–∞–≤–Ω–∞—è –æ—Ç–Ω–æ—à–µ–Ω–∏—é —Å–∏–ª—ã –¥–∞–≤–ª–µ–Ω–∏—è F –∫ –ø–ª–æ—â–∞–¥–∏ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏ S.")
        prs = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/–¥–∞–≤–ª–µ–Ω–∏–µ.jpg", "rb")
        bot.send_photo(message.chat.id, prs)
        prs_water = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/–¥–∞–≤–ª–µ–Ω–∏–µ_–∂–∏–¥–∫–æ—Å—Ç—å.jpg", "rb")
        bot.send_photo(message.chat.id, prs_water)


    def pascal(message):
        bot.send_message(message.chat.id,
                         "–î–∞–≤–ª–µ–Ω–∏–µ, –ø—Ä–æ–∏–∑–≤–æ–¥–∏–º–æ–µ –Ω–∞ –∂–∏–¥–∫–æ—Å—Ç—å –∏–ª–∏ –≥–∞–∑, –ø–µ—Ä–µ–¥–∞—ë—Ç—Å—è –ø–æ –≤—Å–µ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –∫–∞–∂–¥—É—é —Ç–æ—á–∫—É –∂–∏–¥–∫–æ—Å—Ç–∏ –∏–ª–∏ –≥–∞–∑–∞.")
        pascal1 = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/–ø–∞—Å–∫–∞–ª—å1.jpg", "rb")
        bot.send_photo(message.chat.id, pascal1)
        pascal2 = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/–ø–∞—Å–∫–∞–ª—å 2.jpeg", "rb")
        bot.send_photo(message.chat.id, pascal2)


    def archimed(message):
        bot.send_message(message.chat.id, "–°–∏–ª–∞ –ê—Ä—Ö–∏–º–µ–¥–∞ - —ç—Ç–æ —Å–∏–ª–∞, —Å—Ç—Ä–µ–º—è—â–µ–µ—Å—è –≤—ã—Ç—è–Ω—É—Ç—å —Ç–µ–ª–æ –∏–∑ –≤–æ–¥—ã.")
        ar = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/–∑–∞–∫–æ–Ω –∞—Ä—Ö–∏–º–µ–¥–∞.jpg", "rb")
        bot.send_photo(message.chat.id, ar)


    def kolebania_and_volns(message):
        markup = types.InlineKeyboardMarkup(row_width=3)
        item0 = types.InlineKeyboardButton(text="–ü–æ–¥—Ä–æ–¥–Ω–µ–µ",
                                           url="https://fizi4ka.ru/egje-2018-po-fizike/mehanicheskie-kolebanija-i-volny-2.html")
        markup.add(item0)
        bot.reply_to(message, "–ü–µ—Ä–µ–π–¥–∏ –ø–æ —Å—Å—ã–ª–∫–µ, –µ—Å–ª–∏ —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ.", reply_markup=markup)
        k_l = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/–∫–æ–ª–µ–±–∞–∏—è –∏ –≤–æ–ª–Ω—ã.gif", "rb")
        bot.send_photo(message.chat.id, k_l)


    def dinamika(message):
        bot.reply_to(message, "–†–∞–∑–¥–µ–ª –º–µ—Ö–∞–Ω–∏–∫–∏, –∏–∑—É—á–∞—é—â–∏–π –ø—Ä–∏—á–∏–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è –º–µ—Ö–∞–Ω–∏—á–µ—Å–∫–æ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è.")
        d = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/img_5.png", 'rb')
        bot.send_photo(message.chat.id, d)
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        item1 = types.KeyboardButton("–ü–µ—Ä–≤—ã–π –∑–∞–∫–æ–Ω –ù—å—é—Ç–æ–Ω–∞")
        item2 = types.KeyboardButton("–í—Ç–æ—Ä–æ–π –∑–∞–∫–æ–Ω –ù—å—é—Ç–æ–Ω–∞")
        item3 = types.KeyboardButton("–¢—Ä–µ—Ç–∏–π –∑–∞–∫–æ–Ω –ù—å—é—Ç–æ–Ω–∞")
        item4 = types.KeyboardButton("–°–∏–ª—ã –≤ –ø—Ä–∏—Ä–æ–¥–µ")
        item5 = types.KeyboardButton("–î–µ—Ñ–æ—Ä–º–∞—Ü–∏—è –∏ —Å–∏–ª–∞ —É–ø—Ä—É–≥–æ—Å—Ç–∏")
        item6 = types.KeyboardButton("–ó–∞–∫–æ–Ω –ì—É–∫–∞")
        item7 = types.KeyboardButton("–ó–∞–∫–æ–Ω –≤—Å–µ–º–∏—Ä–Ω–æ–≥–æ —Ç—è–≥–æ—Ç–µ–Ω–∏—è")
        item8 = types.KeyboardButton("–ò–º–ø—É–ª—å—Å —Ç–µ–ª–∞")
        item9 = types.KeyboardButton("–ó–∞–∫–æ–Ω —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–º–ø—É–ª—å—Å–∞")
        item10 = types.KeyboardButton("–ú–µ—Ö–∞–Ω–∏—á–µ—Å–∫–∞—è —Ä–∞–±–æ—Ç–∞ –∏ –º–æ—â–Ω–æ—Å—Ç—å")
        item11 = types.KeyboardButton("–ö–ü–î")
        item12 = types.KeyboardButton("–î–∞–≤–ª–µ–Ω–∏–µ")
        item13 = types.KeyboardButton("–ó–∞–∫–æ–Ω –ü–∞—Å–∫–∞–ª—è")
        item14 = types.KeyboardButton("–ó–∞–∫–æ–Ω –ê—Ä—Ö–∏–º–µ–¥–∞")
        item15 = types.KeyboardButton("–ú–µ—Ö–∞–Ω–∏—á–µ—Å–∫–∏–µ –∫–æ–ª–µ–±–∞–Ω–∏—è –∏ –≤–æ–ª–Ω—ã")
        item0 = types.KeyboardButton("‚¨ÖÔ∏è–í—ã—Ö–æ–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(item1, item2, item3, item4, item5, item6, item7, item8, item9, item10, item11, item12, item13,
                   item14, item15, item0)
        bot.reply_to(message, "–¢–µ–º—ã:", reply_markup=markup)


    def energy(message):
        bot.reply_to(message,
                     "–≠–Ω–µ—Ä–≥–∏—è - —ç—Ç–æ —Ñ–∏–∑–∏—á–µ—Å–∫–∞—è –≤–µ–ª–∏—á–∏–Ω–∞, –∫–æ—Ç–æ—Ä–∞—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–µ–∑—É–µ—Ç —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å —Ç–µ–ª–∞ (–∏–ª–∏ —Å–∏—Å—Ç–µ–º—ã —Ç–µ–ª) —Å–æ–≤–µ—Ä–∞—Ç—å —Ä–∞–±–æ—Ç—É.")
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        item1 = types.KeyboardButton("–ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è —ç–Ω–µ—Ä–≥–∏—è")
        item2 = types.KeyboardButton("–ö–∏–Ω–µ—Ç–∏—á–µ—Å–∫–∞—è —ç–Ω–µ—Ä–≥–∏—è")
        item3 = types.KeyboardButton("–¢–µ–æ—Ä–µ–º–∞ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–π —ç–Ω–µ—Ä–≥–∏–∏")
        item4 = types.KeyboardButton("–¢–µ–æ—Ä–µ–º–∞ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∫–∏–Ω–µ—Ç–∏—á–µ—Å–∫–æ–π —ç–Ω–µ—Ä–≥–∏–∏")
        item5 = types.KeyboardButton("–ó–∞–∫–æ–Ω —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –º–µ—Ö–∞–Ω–∏—á–µ—Å–∫–æ–π —ç–Ω–µ—Ä–≥–∏–∏")
        item0 = types.KeyboardButton("‚¨ÖÔ∏è–í—ã—Ö–æ–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(item1, item2, item3, item4, item5, item0)
        bot.reply_to(message, "–¢–µ–º—ã:", reply_markup=markup)


    def poten_energy(message):
        bot.reply_to(message,
                     "–ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è —ç–Ω–µ—Ä–≥–∏—è - —ç—Ç–æ —ç–Ω–µ—Ä–≥–∏—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Ç–µ–ª, –æ–±—É—Å–ª–æ–≤–ª–µ–Ω–Ω–∞—è –∏—Ö –≤–∑–∞–∏–º–Ω—ã–º —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ–º –∏–ª–∏ –≤–∑–∞–∏–º–Ω—ã–º —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ–º —á–∞—Å—Ç–µ–π —Ç–µ–ª–∞.")
        e = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/slide-17.jpg", "rb")
        e1 = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/—É–ø—Ä-–¥–µ—Ñ-–ø–æ—Ç–µ–Ω-—ç–Ω—Ä–≥.jpeg", "rb")
        bot.send_photo(message.chat.id, e)
        bot.send_photo(message.chat.id, e1)


    def kinet_energy(message):
        bot.reply_to(message, "–ö–∏–Ω–µ—Ç–∏—á–µ—Å–∫–∞—è —ç–Ω–µ—Ä–≥–∏—è - —ç—Ç–æ —ç–Ω–µ—Ä–≥–∏—è, –∫–æ—Ç–æ—Ä–æ–π –æ–±–ª–∞–¥–∞–µ—Ç –¥–≤–∏–∂—É—â–µ–µ—Å—è —Ç–µ–ª–æ.")
        e = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/—Ñ–æ—Ä–º—É–ª–∞.jpg", "rb")
        bot.send_photo(message.chat.id, e)


    def teorema_poten_energy(message):
        e = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/–ø–æ—Ç–µ–Ω-—ç–Ω–µ—Ä–≥–∏.jpg", "rb")
        bot.send_photo(message.chat.id, e)


    def teorema_kinet_energy(message):
        e = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/—Ç–µ–æ—Ä–µ–º–∞_–∫–∏–Ω–µ—Ç_—ç–Ω–µ—Ä–≥–∏–∏.png", "rb")
        bot.send_photo(message.chat.id, e)


    def zakon_save_energy(message):
        bot.send_message(message.chat.id, "–í –∑–∞–º–∫–Ω—É—Ç–æ–π —Å–∏—Å—Ç–µ–º–µ —Å –∫–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω—ã–º–∏ —Å–∏–ª–∞–º–∏ –ø–æ–ª–Ω–∞—è —ç–Ω–µ—Ä–≥–∏—è —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è.")
        bot.send_message(message.chat.id,
                         "–ö–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω—ã–µ —Å–∏–ª—ã - —ç—Ç–æ —Å–∏–ª—ã, –∞–±–æ—Ç–∞ –∫–æ—Ç–æ—Ä—ã—Ö –ø–æ –∑–∞–º–∫–Ω–æ—Ç–æ–º—É –∫–æ–Ω—Ç—É—Ä—É —Ä–∞–≤–Ω–∞ –Ω—É–ª—é; –Ω–∞–ø—Ä–∏–º–µ—Ä, —Å–∏–ª–∞ —Ç—è–∂–µ—Å—Ç–∏, —Å–∏–ª–∞ —É–ø—Ä—É–≥–æ—Å—Ç–∏.")
        e = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/–∑–∞–∫–æ–Ω—Å–æ—Ö—Ä–∞–Ω–µ–∏—è—ç–Ω–µ—Ä–≥–∏–∏.jpeg", "rb")
        bot.send_photo(message.chat.id, e)


    def exit_to_menu(message):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        item1 = types.KeyboardButton("‚öôÔ∏è–ú–µ—Ö–∞–Ω–∏—á–µ—Å–∫–∏–µ —è–≤–ª–µ–Ω–∏—è‚öôÔ∏è")
        item2 = types.KeyboardButton("üå°–¢–µ–ø–ª–æ–≤—ã–µ —è–≤–ª–µ–Ω–∏—èüå°")
        item3 = types.KeyboardButton("‚ö°Ô∏è–≠–ª–µ–∫—Ç—Ä–æ–º–∞–≥–Ω–∏—Ç–Ω—ã–µ —è–≤–ª–µ–Ω–∏—è‚ö°Ô∏è")
        item4 = types.KeyboardButton("‚ò¢Ô∏è–ö–≤–∞–Ω—Ç–æ–≤—ã–µ —è–≤–ª–µ–Ω–∏—è‚ò¢Ô∏è")
        item5 = types.KeyboardButton("üìú–°–ø—Ä–∞–≤–æ—á–Ω—ã–π –º–∞—Ç–µ—Ä–∏–∞–ªüìú")
        item6 = types.KeyboardButton("üìù–¢–µ—Å—Ç—ãüìù")
        item7 = types.KeyboardButton("üóÇ–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤üóÇ")
        markup.add(item1, item2, item3, item4, item5, item6, item7)
        bot.reply_to(message, "–†–∞–∑–¥–µ–ª—ã:", reply_markup=markup)


    def kinematka(message):
        bot.reply_to(message,
                     "–†–∞–∑–¥–µ–ª –º–µ—Ö–∞–Ω–∏–∫–∏, –∏–∑—É—á–∞—é—â–∏–π —Å–ø–æ—Å–æ–±—ã –æ–ø–∏—Å–∞–Ω–∏—è –¥–≤–∏–∂–µ–Ω–∏–π –∏ —Å–≤—è–∑—å –º–µ–∂–¥—É –≤–µ–ª–∏—á–∏–Ω–∞–º–∏, —Ö–∞—Ä–∞–∫—Ç–µ—Ä–µ–∑—É—é—â–∏–º–∏ —ç—Ç–∏ –¥–≤–∏–∂–µ–Ω–∏—è.")
        k = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/img_3.png", 'rb')
        bot.send_photo(message.chat.id, k)
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        item1 = types.KeyboardButton("–†–∞–≤–Ω–æ–º–µ—Ä–Ω–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ")
        item2 = types.KeyboardButton("–†–∞–≤–Ω–æ—É—Å–∫–æ—Ä–µ–Ω–Ω–æ–µ/–†–∞–≤–Ω–æ–∑–∞–º–µ–¥–ª–µ–Ω–Ω–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ")
        item3 = types.KeyboardButton("–ü–æ—Å—Ç—É–ø–∞—Ç–µ–ª—å–Ω–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ")
        item4 = types.KeyboardButton("–í—Ä–∞—â–∞—Ç–µ–ª—å–Ω–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ")
        item5 = types.KeyboardButton("–î–≤–∏–∂–µ–Ω–∏–µ —Å –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–º —É—Å–∫–æ—Ä–µ–Ω–∏–µ–º —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –ø–∞–¥–µ–Ω–∏—è")
        item6 = types.KeyboardButton("–ú–≥–Ω–æ–≤–µ–Ω–Ω–∞—è –∏ —Å—Ä–µ–¥–Ω—è—è —Å–∫–æ—Ä–æ—Å—Ç–∏")
        item7 = types.KeyboardButton("–°–ª–æ–∂–µ–Ω–∏–µ —Å–∫–æ—Ä–æ—Å—Ç–µ–π")
        item8 = types.KeyboardButton("–£—Å–∫–æ—Ä–µ–Ω–∏–µ")
        item0 = types.KeyboardButton("‚¨ÖÔ∏è–í—ã—Ö–æ–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(item1, item2, item3, item4, item5, item6, item7, item8, item0)
        bot.reply_to(message, "–¢–µ–º—ã:", reply_markup=markup)


    def ravnomernoe_dvj(message):
        bot.reply_to(message,
                     "–î–≤–∏–∂–µ–Ω–∏–µ —Ç–æ—á–∫–∏ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è —Ä–∞–≤–Ω–æ–º–µ—Ä–Ω—ã–º, –µ—Å–ª–∏ –æ–Ω–∞ –∑–∞ –ª—é–±—ã–µ —Ä–∞–≤–Ω—ã–µ –ø—Ä–æ–º–µ–∂—É—Ç–∫–∏ –≤—Ä–µ–º–µ–Ω–∏ –ø—Ä–æ—Ö–æ–¥–∏—Ç –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ –ø—É—Ç–∏.")
        p1 = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/img_4.png", "rb")
        bot.send_photo(message.chat.id, p1)


    def ravn_uscor_and_zamedl_dvj(message):
        bot.reply_to(message,
                     "–î–≤–∏–∂–µ–Ω–∏–µ –≤–¥–æ–ª—å –ø—Ä—è–º–æ–π —Å –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–º —É—Å–∫–æ—Ä–µ–Ω–∏–µ–º, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–º –º–æ–¥—É–ª—å —Å–∫–æ—Ä–æ—Å—Ç–∏ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è, –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä—è–º–æ–ª–∏–Ω–µ–π–Ω—ã–º —Ä–∞–≤–Ω–æ—É—Å–∫–æ—Ä–µ–Ω–Ω—ã–º –¥–≤–∏–∂–µ–Ω–∏–µ–º, –∞ –ø—Ä—è–º–æ–ª–∏–Ω–µ–π–Ω–æ–µ  –¥–≤–∏–∂–µ–Ω–∏–µ —Å –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–º —É—Å–∫–æ—Ä–µ–Ω–∏–µ–º, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–º –º–æ–¥—É–ª—å —Å–∫–æ—Ä–æ—Å—Ç–∏ —É–º–µ–Ω—å—à–∞–µ—Ç—Å—è, –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è —Ä–∞–≤–Ω–æ–∑–∞–º–µ–¥–ª–µ–Ω–Ω—ã–º.")
        p2 = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/img_4.png", "rb")
        bot.send_photo(message.chat.id, p2)


    def postupatelnoe_dvj(message):
        bot.reply_to(message,
                     "–ü–æ—Å—Ç—É–ø–∞—Ç–µ–ª—å–Ω—ã–º –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è —Ç–∞–∫–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ –∞–±—Å–æ–ª—é—Ç–Ω–æ —Ç–≤—ë—Ä–¥–æ–≥–æ —Ç–µ–ª–∞, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–º –ª—é–±–æ–π –æ—Ç—Ä–µ–∑–æ–∫, —Å–æ–µ–¥–∏–Ω—è—é—â–∏–π –ª—é–±—ã–µ –¥–≤–µ —Ç–æ—á–∫–∏ —Ç–µ–ª–∞, –æ—Å—Ç–∞—ë—Ç—Å—è –ø–∞—Ä–∞–ª–ª–µ–π–Ω—ã–º —Å–∞–º–æ–º—É —Å–µ–±–µ.")
        a_scor = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/img_6.png", "rb")
        bot.send_photo(message.chat.id, a_scor)


    def rotational_motion(message):
        bot.reply_to(message,
                     "–í—Ä–∞—â–∞—Ç–µ–ª—å–Ω—ã–º –¥–≤–∏–∂–µ–Ω–∏–µ–º –∞–±—Å–æ–ª—é—Ç–Ω–æ —Ç–≤—ë—Ä–¥–æ–≥–æ —Ç–µ–ª–∞ –≤–æ–∫—Ä—É–≥ –Ω–µ–ø–æ–¥–≤–∏–∂–Ω–æ–π –æ—Å–∏ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è —Ç–∞–∫–æ–µ –µ–≥–æ –¥–≤–∏–∂–µ–Ω–∏–µ, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–º –≤—Å–µ —Ç–æ—á–∫–∏ —Ç–µ–ª–∞ –æ–ø–∏—Å—ã–≤–∞—é—Ç –æ–∫—Ä—É–∂–Ω–æ—Å—Ç–∏, —Ü–µ–Ω—Ç—Ä—ã –∫–æ—Ç–æ—Ä—ã—Ö –Ω–∞—Ö–æ–¥—è—Ç—Å—è –Ω–∞ –æ–¥–Ω–æ–π –ø—Ä—è–º–æ–π, –Ω–∞–∑—ã–≤–∞–µ–º–æ–π –æ—Å—å—é –≤—Ä–∞—â–µ–Ω–∏—è, –ø—Ä–∏ —ç—Ç–æ–º –ø–ª–æ—Å–∫–æ—Å—Ç–∏, –∫–æ—Ç–æ—Ä—ã–º –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∞—Ç —ç—Ç–∏ –æ–∫—Ä—É–∂–Ω–æ—Å—Ç–∏, –ø–µ—Ä–ø–µ–Ω–¥–∏–∫—É–ª—è—Ä–Ω—ã –æ—Å–∏ –≤—Ä–∞—â–µ–Ω–∏—è.")
        v = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/img.png", "rb")
        bot.send_photo(message.chat.id, v)


    def svobodnoe_padenie(message):
        bot.reply_to(message,
                     "–ó–∞–∫–æ–Ω –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–≤–∏–∂–µ–Ω–∏–π: –≤—Å—è–∫–æ–µ —Å–ª–æ–∂–Ω–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ –º–æ–∂–Ω–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å –∫–∞–∫ —Å—É–º–º—É –¥–≤–∏–∂–µ–Ω–∏–π –ø–æ –¥–≤—É–º –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º.")
        v = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/img_7.png", "rb")
        bot.send_photo(message.chat.id, v)


    def slojenie_scorostey(message):
        bot.reply_to(message,
                     "–ó–∞–∫–æ–Ω —Å–ª–æ–∂–µ–Ω–∏—è —Å–∫–æ—Ä–æ—Å—Ç–µ–π: –µ—Å–ª–∏ —Ç–µ–ª–æ –¥–≤–∏–∂–µ—Ç—Å—è –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –Ω–µ–∫–æ—Ç–æ—Ä–æ–π —Å–∏—Å—Ç–µ–º—ã –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –ö1 —Å–æ —Å–∫–æ—Ä–æ—Å—Ç—å—é v –∏ —Å–∞–º–∞ —Å–∏—Å—Ç–µ–º–∞ –ö1 –¥–≤–∏–∂–µ—Ç—Å—è –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –¥—Ä—É–≥–æ–π —Å–∏—Å—Ç–µ–º—ã –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –ö2 —Å–æ —Å–∫–æ—Ä–æ—Å—Ç—å—é v1, —Ç–æ —Å–∫–æ—Ä–æ—Å—Ç—å —Ç–µ–ª–∞ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –≤—Ç–æ—Ä–æ–π —Å–∏—Å—Ç–µ–º—ã —Ä–∞–≤–Ω–∞ –≥–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–æ–π —Å—É–º–º–µ —Å–∫–æ—Ä–æ—Å—Ç–µ–π v1 –∏ v.")
        v = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/img_9.png", "rb")
        bot.send_photo(message.chat.id, v)


    def mgn_and_sr_scorosti(message):
        v = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/img_8.png", "rb")
        bot.send_photo(message.chat.id, v)


    def a(message):
        bot.reply_to(message, "–§–∏–∑–∏—á–µ—Å–∫–∞—è –≤–µ–ª–∏—á–∏–Ω–∞, —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏–∑—É—é—â–∞—è –±—ã—Å—Ç—Ä–æ—Ç—É –∏–∑–º–µ–Ω–∏—è —Å–∫–æ—Ä–æ—Å—Ç–∏.")
        v = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/img_10.png", "rb")
        bot.send_photo(message.chat.id, v)


    # —Ç–µ–ø–ª–æ–≤—ã–µ —è–≤–ª–µ–Ω–∏—è
    def teplo(message):
        bot.send_message(message.chat.id, "–¢–µ–ø–ª–æ–≤—ã–µ —è–≤–ª–µ–Ω–∏—è - —ç—Ç–æ —Ñ–∏–∑–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã, –ø—Ä–æ—Ç–µ–∫–∞—é—â–∏–µ –≤ —Ç–µ–ª–∞—Ö –ø—Ä–∏ –∏—Ö –Ω–∞–≥—Ä–µ–≤–∞–Ω–∏–∏ –∏–ª–∏ –æ—Ö–ª–∞–∂–¥–µ–Ω–∏–∏. –ö —Ç–∞–∫–∏–º —è–≤–ª–µ–Ω–∏—è–º –æ—Ç–Ω–æ—Å—è—Ç—Å—è, –Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–∞–≥—Ä–µ–≤–∞–Ω–∏—è –∏ –æ—Ö–ª–∞–∂–¥–µ–Ω–∏—è —Ç–µ–ª, –ø—Ä–µ–≤—Ä–∞—â–µ–Ω–∏—è –≤–µ—â–µ—Å—Ç–≤–∞ –∏–∑ —Ç–≤—ë—Ä–¥–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è\
–≤ –∂–∏–¥–∫–æ–µ –∏ –≥–∞–∑–æ–æ–±—Ä–∞–∑–Ω–æ–µ.")
        t = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/—Ç–µ–ø–ª–æ–≤—ã–µ —è–≤–ª–µ–Ω–∏—è.jpg", "rb")
        bot.send_photo(message.chat.id, t)
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        item1 = types.KeyboardButton("–°—Ç—Ä–æ–µ–Ω–∏–µ –≤–µ—â–µ—Å—Ç–≤–∞")
        item2 = types.KeyboardButton("–¢–µ–ø–ª–æ–≤–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ –∞—Ç–æ–º–æ–≤ –∏ –º–æ–ª–µ–∫—É–ª")
        item3 = types.KeyboardButton("–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è —ç–Ω–µ—Ä–≥–∏—è")
        item4 = types.KeyboardButton("–í–∏–¥—ã —Ç–µ–ø–ª–æ–ø–µ—Ä–µ–¥–∞—á–∏")
        item5 = types.KeyboardButton("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–µ–ø–ª–æ—Ç—ã")
        item6 = types.KeyboardButton("–¢–µ–ø–ª–æ–≤—ã–µ –¥–≤–∏–≥–∞—Ç–µ–ª–∏")
        item7 = types.KeyboardButton("–ò—Å–ø–∞—Ä–µ–Ω–∏–µ –∏ –∫–æ–Ω–¥–µ–Ω—Å–∞—Ü–∏—è")
        item8 = types.KeyboardButton("–ü–ª–∞–≤–ª–µ–Ω–∏–µ –∏ –∫—Ä–∏—Å—Ç–∞–ª–ª–∏–∑–∞—Ü–∏—è")
        item0 = types.KeyboardButton("‚¨ÖÔ∏è–í—ã—Ö–æ–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(item1, item2, item3, item4, item5, item6, item7, item8, item0)
        bot.reply_to(message, "–¢–µ–º—ã:", reply_markup=markup)


    def stroenie_substance(message):
        bot.send_message(message.chat.id,
                         """
üìç–ü–æ–ª–æ–∂–µ–Ω–∏–µ 1. 
–í—Å–µ –≤–µ—â–µ—Ç—Å–≤–∞ —Å–æ—Å—Ç–æ—è—Ç –∏–∑ —á–∞—Å—Ç–∏—Ü, –º–µ–∂–¥—É –∫–æ—Ç–æ—Ä—ã–º–∏ –µ—Å—Ç—å –ø—Ä–æ–º–µ–∂—É—Ç–∫–∏.
üìç–ü–æ–ª–æ–∂–µ–Ω–∏–µ 2.
–ú–æ–ª–µ–∫—É–ª—ã –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ–º –±–µ—Å–ø–æ—Ä—è–¥–æ—á–Ω–æ–º (—Ö–∞–æ—Ç–∏—á–µ—Å–∫–æ–º) –¥–≤–∏–∂–µ–Ω–∏–∏.
üìç–ü–æ–ª–æ–∂–µ–Ω–∏–µ 3.
–ú–æ–ª–µ–∫—É–ª—ã –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤—É—é—Ç –º–µ–∂–¥—É —Å–æ–±–æ–π, –º–µ–∂–¥—É –Ω–∏–º–∏ –¥–µ–π—Å—Ç–≤—É—é—Ç —Å–∏–ª—ã –∏ –ø—Ä–∏—Ç—è–∂–Ω–∏—è –∏ –æ—Ç—Ç–∞–ª–∫–∏–≤–∞–Ω–∏—è.

üìç–ê—Ç–æ–º - –Ω–∞–∏–º–µ–Ω—å—à–∞—è —á–∞—Å—Ç–∏—Ü–∞ –≤–µ—â–µ—Å—Ç–≤–∞, –Ω–µ –¥–µ–ª—è—â–∞—è—Å—è –ø—Ä–∏ —Ö–∏–º–∏—á–µ—Å–∫–∏—Ö —Ä–µ–∞–∫—Ü–∏—è—Ö.
üìç–ú–æ–ª–µ–∫—É–ª–∞ - –Ω–∞–∏–º–µ–Ω—å—à–∞—è —á–∞—Å—Ç–∏—Ü–∞ –≤–µ—â–µ—Å—Ç–≤–∞, –∫–æ—Ç–æ—Ä–∞—è —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –µ–≥–æ —Ö–∏–º–∏—á–µ—Å–∫–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞.
                         """)
        s = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/—Å—Ç—Ä–æ–µ–Ω–∏–µ –≤–µ—â–µ—Å—Ç–≤–∞.png", "rb")
        bot.send_photo(message.chat.id, s)


    def tepl_dv_atoms_and_mol(message):
        markup = types.InlineKeyboardMarkup(row_width=1)
        item1 = types.InlineKeyboardButton(text="–ë—Ä–æ—É–Ω–æ–≤—Å–∫–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ", callback_data="–±—Ä–æ—É–Ω")
        item2 = types.InlineKeyboardButton(text="–î–∏—Ñ—Ñ—É–∑–∏—è", callback_data="–¥–∏—Ñ—Ñ—É–∑–∏—è")
        item3 = types.InlineKeyboardButton(text="–¢–µ–ø–ª–æ–≤–æ–µ —Ä–∞–≤–Ω–æ–≤–µ—Å–∏–µ", callback_data="—Ç–µ–ø–ª–æ–≤–æ–µ_—Ä–∞–≤–Ω–æ–≤–µ—Å–∏–µ")
        markup.add(item1, item2, item3)
        bot.send_message(message.chat.id, "–¢–µ–ø–ª–æ–≤–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ - —ç—Ç–æ –Ω–µ–ø—Ä–µ—Ä—ã–≤–Ω–æ–µ —Ö–∞–æ—Ç–∏—á–µ—Å–∫–æ–≥–æ –¥–≤–∏–∂–µ–Ω–∏–µ –∞—Ç–æ–º–æ–≤ –∏ –º–æ–ª–µ–∫—É–ª.",
                         reply_markup=markup)
        bot.send_message(message.chat.id,
                         "–°–≤—è–∑—å —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã —Å–æ —Å–∫–æ—Ä–æ—Å—Ç—å—é —Ö–∞–æ—Ç–∏—á–µ—Å–∫–æ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è —á–∞—Å—Ç–∏—Ü –∑–∞–∫–ª—é—á–∞–µ—Ç—Å—è –≤ —Ç–æ–º, —á—Ç–æ —á–µ–º –±–æ–ª—å—à–µ —Å–∫–æ—Ä–æ—Å—Ç—å —á–∞—Å—Ç–∏—Ü, —Ç–µ–º –≤—ã—à–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞, –∏ –Ω–∞–æ–±–æ—Ä–æ—Ç.")


    def vn_energy(message):
        bot.send_message(message.chat.id,
                         """
1) –í–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π —ç–Ω–µ—Ä–∏–µ–π —Ç–µ–ª–∞ –Ω–∞–∑—ã–≤–∞—é—Ç —Å—É–º–º—É –∫–∏–Ω–µ—Ç–∏—á–µ—Å–∫–æ–π —ç–Ω–µ—Ä–≥–∏–∏ –¥–≤–∏–∂–µ–Ω–∏—è –µ–≥–æ –º–æ–ª–µ–∫—É–ª –∏ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–π —ç–Ω–µ—Ä–≥–∏–∏ –∏—Ö –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è.
2) –ï—Å–ª–∏ —Ç–µ–ª–æ —Å–∞–º–æ —Å–æ–≤–µ—Ä—à–∞–µ—Ç —Ä–∞–±–æ—Ç—É, —Ç–æ –µ–≥–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è —ç–Ω–µ—Ä–≥–∏—è —É–º–µ–Ω—å—à–∞–µ—Ç—Å—è, –∞ –µ—Å–ª–∏ –Ω–∞–¥ –Ω–∏–º —Å–æ–≤–µ—Ä—à–∞—é—Ç —Ä–∞–±–æ—Ç—É, —Ç–æ –µ–≥–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è —ç–Ω–µ—Ä–≥–∏—è —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç—Å—è.
                         """)


    def teploperedachi(message):
        markup = types.InlineKeyboardMarkup(row_width=1)
        item1 = types.InlineKeyboardButton(text="–¢–µ–ø–ª–æ–ø—Ä–æ–≤–æ–¥–Ω–æ—Å—Ç—å", callback_data="—Ç–µ–ø–ª–æ–ø—Ä–æ–≤–æ–¥–Ω–æ—Å—Ç—å")
        item2 = types.InlineKeyboardButton(text="–ö–æ–Ω–≤–µ–∫—Ü–∏—è", callback_data="–∫–æ–Ω–≤–µ–∫—Ü–∏—è")
        item3 = types.InlineKeyboardButton(text="–ò–∑–ª—É—á–µ–Ω–∏–µ", callback_data="–∏–∑–ª—É—á–µ–Ω–∏–µ")
        markup.add(item1, item2, item3)
        t0 = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/—Ç–µ–ø–ª–æ–ø–µ—Ä–µ–¥–∞—á–∞_–≤–∏–¥—ã.webp", "rb")
        bot.send_photo(message.chat.id, t0)
        bot.send_message(message.chat.id, "–í–∏–¥—ã —Ç–µ–ø–ª–æ–ø–µ—Ä–µ–¥–∞—á–∏:", reply_markup=markup)


    @bot.callback_query_handler(func=lambda call: True)
    def check_callback_data(call):
        if call.data == "—Ç–µ–ø–ª–æ–ø—Ä–æ–≤–æ–¥–Ω–æ—Å—Ç—å":
            bot.reply_to(call.message, text="–ü—Ä–æ—Ü–µ—Å—Å –ø–µ—Ä–µ–¥–∞—á–∏ —ç–Ω–µ—Ä–≥–∏–∏ –æ—Ç –æ–¥–Ω–æ–≥–æ —Ç–µ–ª–∞ –∫ –¥—Ä—É–≥–æ–º—É –∏–ª–∏ –æ—Ç –æ–¥–Ω–æ–π —á–∞—Å—Ç–∏ —Ç–µ–ª–∞ –∫ –¥—Ä—É–≥–æ–π –±–ª–∞–≥–æ–¥–∞—Ä—è\
—Ç–µ–ø–ª–æ–≤–æ–º—É –¥–≤–∏–∂–µ–Ω–∏—é —á–∞—Å—Ç–∏—Ü –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è —Ç–µ–ø–ª–æ–ø—Ä–æ–≤–æ–¥–Ω–æ—Å—Ç—å—é.")
            t1 = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/—Ç–µ–ø–ª–æ–ø—Ä–æ–≤–æ–¥–Ω–æ—Å—Ç—å.jpg", "rb")
            bot.send_photo(call.message.chat.id, t1)

        elif call.data == "‚úÖ":
            try:
                connect = sqlite3.connect('data_telegram.db')
                cursor = connect.cursor()
                people_user_id = call.message.chat.id
                cursor.execute(f"""SELECT k FROM telegram_users WHERE id = {people_user_id}""")
                k_data = cursor.fetchone()
                k = int(k_data[0]) + 1
                cursor.execute(f"""Update telegram_users set k = {k} where id = {people_user_id}""")
                connect.commit()
                test_after_true_answer(call.message)
            except:
                pass


        elif call.data == "—Ç–µ—Å—Ç—ã":
            tests(call.message)

        elif call.data == "–∫–æ–Ω–≤–µ–∫—Ü–∏—è":
            bot.reply_to(call.message,
                         text="–ö–æ–Ω–≤–µ–∫—Ü–∏—è - —ç—Ç–æ –≤–∏–¥ —Ç–µ–ø–ª–æ–ø–µ—Ä–µ–¥–∞—á–∏, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–º —ç–Ω–µ—Ä–≥–∏—è –ø–µ—Ä–µ–¥–∞—ë—Ç—Å—è —Å–ª–æ—è–º–∏ –∂–∏–¥–∫–æ—Å—Ç–∏ –∏–ª–∏ –≥–∞–∑–∞.")
            t2 = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/–∫–æ–Ω–≤–µ–∫—Ü–∏—è.jpeg", "rb")
            bot.send_photo(call.message.chat.id, t2)

        elif call.data == "–∏–∑–ª—É—á–µ–Ω–∏–µ":
            bot.reply_to(call.message, text="–ò–∑–ª—É—á–µ–Ω–∏–µ - —ç—Ç–æ –≤–∏–¥ —Ç–µ–ø–ª–æ–ø–µ—Ä–µ–¥–∞—á–∏, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–º –∏—Å–ø—É—Å–∫–∞–Ω–∏–µ –∏ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ —ç–Ω–µ—Ä–≥–∏–∏ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç\
            –ø—Ä–∏ –ø–æ–º–æ—â–∏ —ç–ª–µ–∫—Ç—Ä–æ–º–∞–≥–Ω–∏—Ç–Ω—ã—Ö –≤–æ–ª–Ω –∏ —ç–ª–µ–º–µ–Ω—Ç–∞—Ä–Ω—ã—Ö —á–∞—Å—Ç–∏—Ü.")
            t3 = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/–∏–∑–ª—É—á–µ–Ω–∏–µ.jpg", "rb")
            bot.send_photo(call.message.chat.id, t3)

        elif call.data == "–±—Ä–æ—É–Ω":
            b = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/–±—Ä–æ—É–Ω.jpg", "rb")
            bot.send_photo(call.message.chat.id, b)

        elif call.data == "–¥–∏—Ñ—Ñ—É–∑–∏—è":
            bot.reply_to(call.message,
                         text="–î–∏—Ñ—Ñ—É–∑–∏–µ–π –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è —è–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è –º–æ–ª–µ–∫—É–ª –æ–¥–Ω–æ–≥–æ –≤–µ—â–µ—Å—Ç–≤–∞ –≤ –ø—Ä–æ–º–µ–∂—É—Ç–∫–∏ –º–µ–∂–¥—É –º–æ–ª–µ–∫—É–ª–∞–º–∏ –¥—Ä—É–≥–æ–≥–æ –≤–µ—â–µ—Å—Ç–≤–∞.")
            d = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/–¥–∏—Ñ—Ñ—É–∑–∏—è.jpeg", "rb")
            bot.send_photo(call.message.chat.id, d)

        elif call.data == "—Ç–µ–ø–ª–æ–≤–æ–µ_—Ä–∞–≤–Ω–æ–≤–µ—Å–∏–µ":
            t = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/—Ç–µ–ø–ª–æ–≤–æ–µ —Ä–∞–≤–Ω–æ–≤–µ—Å–∏–µ.jpg", "rb")
            bot.send_photo(call.message.chat.id, t)

        elif call.data == "—Å–∏–ª–∞ —Ç–æ–∫–∞":
            bot.reply_to(call.message, text="–°–∏–ª–æ–π —Ç–æ–∫–∞ –Ω–∞–∑—ã–≤–∞—é—Ç —Ñ–∏–∑–∏—á–µ—Å–∫—É—é –≤–µ–ª–∏—á–∏–Ω—É, —Ä–∞–≤–Ω—É—é –æ—Ç–Ω–æ—à–µ–Ω–∏—é –∑–∞—Ä—è–¥–∞ q, –ø—Ä–æ—Ö–æ–¥—è—â–µ–≥–æ\
—á–µ—Ä–µ–∑ –ø–æ–ø–µ—Ä–µ—á–Ω–æ–µ —Å–µ—á–µ–Ω–∏–µ –ø—Ä–æ–≤–æ–¥–Ω–∏–∫–∞ –∑–∞ –ø—Ä–æ–º–µ–∂—É—Ç–æ–∫ –≤—Ä–µ–º–µ–Ω–∏ t, –∫ —ç—Ç–æ–º—É –ø—Ä–æ–º–µ–∂—É—Ç–∫—É –≤—Ä–µ–º–µ–Ω–∏.")
            i = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/—Å–∏–ª–∞ —Ç–æ–∫–∞.jpeg", "rb")
            bot.send_photo(call.message.chat.id, i)

        elif call.data == "–Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ":
            bot.reply_to(call.message, text="–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–æ–π –∏—Å—Ç–æ—á–Ω–∏–∫–∞ —Ç–æ–∫–∞ —Å–ª—É–∂–∏—Ç –≤–µ–ª–∏—á–∏–Ω–∞, –Ω–∞–∑—ã–≤–∞–µ–º–∞—è –Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ–º.\
–ù–∞–ø—Ä—è–∂–µ–Ω–∏–µ–º U –Ω–∞–∑—ã–≤–∞—é—Ç —Ñ–∏–∑–∏—á–µ—Å–∫—É—é –≤–µ–ª–∏—á–∏–Ω—É, —Ä–∞–≤–Ω—É—é –æ—Ç–Ω–æ—à–µ–Ω–∏—é —Ä–∞–±–æ—Ç—ã (A) —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–ª—è –ø–æ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—é\
—ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–æ–≥–æ –∑–∞—Ä—è–¥–∞ –∫ –∑–∞—Ä—è–¥—É (q).")
            u = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/–Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ.jpg", "rb")
            bot.send_photo(call.message.chat.id, u)

        elif call.data == "—Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ":
            bot.reply_to(call.message, text="–°–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ–º –ø—Ä–æ–≤–æ–¥–Ω–∏–∫–∞ (R) –Ω–∞–∑—ã–≤–∞—é—Ç —Ñ–∏–∑–∏—á–µ—Å–∫—É—é –≤–µ–ª–∏—á–∏–Ω—É, —Ä–∞–≤–Ω—É—é –æ—Ç–Ω–æ—à–µ–Ω–∏—é –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è (U)\
–Ω–∞ –∫–æ–Ω—Ü–∞—Ö –ø—Ä–æ–≤–æ–¥–Ω–∏–∫–∞ –∫ —Å–∏–ª–µ —Ç–æ–∫–∞ (I) –≤ –Ω—ë–º.")
            r1 = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/—Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ2.jpg", "rb")
            bot.send_photo(call.message.chat.id, r1)
            r2 = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/—Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ1.jpg", "rb")
            bot.send_photo(call.message.chat.id, r2)

        elif call.data == "–±—É—Ä–∞–≤—á–∏–∫":
            bot.reply_to(call.message, text="–ü—Ä–∞–≤–∏–ª–æ –±—É—Ä–∞–≤—á–∏–∫–∞: –µ—Å–ª–∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ—Å—Ç—É–ø–∞—Ç–µ–ª—å–Ω–æ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è –±—É—Ä–∞–≤—á–∏–∫–∞ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º —Ç–æ–∫–∞ –≤ –ø—Ä–æ–≤–æ–¥–Ω–∏–∫–µ,\
—Ç–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Ä–∞—â–µ–Ω–∏—è —Ä—É—á–∫–∏ –±—É—Ä–∞–≤—á–∏–∫–∞ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –Ω–æ–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –ª–∏–Ω–∏–π –º–∞–≥–Ω–∏—Ç–Ω–æ–π –∏–Ω–¥—É–∫—Ü–∏–∏.")
            b = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/–±—É—Ä–∞–≤—á–∏–∫.jpg", "rb")
            bot.send_photo(call.message.chat.id, b)

        elif call.data == "–ø—Ä–∞–≤–∞—è —Ä—É–∫–∞":
            bot.send_message(call.message.chat.id, "–ü—Ä–∞–≤–∏–ª–æ –ø—Ä–∞–≤–æ–π —Ä—É–∫–∏:")
            p = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/–ø—Ä–∞–≤–ª–æ –ø—Ä–∞–≤–æ–π —Ä—É–∫–∏.jpg", "rb")
            bot.send_photo(call.message.chat.id, p)

        elif call.data == "–ª–µ–≤–∞—è —Ä—É–∫–∞":
            bot.reply_to(call.message, text=
            """
–ü—Ä–∞–≤–∏–ª–æ –ª–µ–≤–æ–π —Ä—É–∫–∏ —Ñ–æ—Ä–º—É–ª–∏—Ä—É–µ—Ç—Å—è —Ç–∞–∫: —á–µ—Ç—ã—Ä–µ –ø–∞–ª—å—Ü–∞ –Ω–∞ –ª–µ–≤–æ–π —Ä—É–∫–µ —Ä–∞—Å–ø–æ–ª–∞–≥–∞—é—Ç—Å—è –≤ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–∏, –∫—É–¥–∞ –¥–≤–∏–∂—É—Ç—Å—è –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ –∏–ª–∏ 
–æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ —á–∞—Å—Ç–∏—Ü—ã —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–æ–≥–æ —Ç–æ–∫–∞. –ò–Ω–¥—É–∫—Ü–∏–æ–Ω–Ω—ã–µ –ª–∏–Ω–∏–∏, –∫–∞–∫ –∏ –≤ –¥—Ä—É–≥–∏—Ö —Å–ª—É—á–∞—è—Ö, –¥–æ–ª–∂–Ω—ã –ø–µ—Ä–ø–µ–Ω–¥–∏–∫—É–ª—è—Ä–Ω–æ —Ä–∞—Å–ø–æ–ª–∞–≥–∞—Ç—å—Å—è –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –ª–∞–¥–æ–Ω–∏ –∏ 
–≤—Ö–æ–¥–∏—Ç—å –≤ –Ω–µ–µ. –ë–æ–ª—å—à–æ–π –æ—Ç—Ç–æ–ø—ã—Ä–µ–Ω–Ω—ã–π –ø–∞–ª–µ—Ü —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∏–ª—ã –ê–º–ø–µ—Ä–∞ –∏–ª–∏ –õ–æ—Ä–µ–Ω—Ü–∞.
""")
            lr = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/–ø—Ä–∞–≤–∏–ª–æ –ª–µ–≤–æ–π —Ä—É–∫–∏.jpg", "rb")
            bot.send_photo(call.message.chat.id, lr)

        elif call.data == "–∞–º–ø–µ—Ä":
            bot.reply_to(call.message, text=
            """
‚ö°Ô∏è–ù–∞ –ø—Ä–æ–≤–æ–¥–Ω–∏–∫ —Å —Ç–æ–∫–æ–º, –ø–æ–º–µ—â—ë–Ω–Ω—ã–π –≤ –º–∞–≥–Ω–∏—Ç–Ω–æ–µ –ø–æ–ª–µ, –¥–µ–π—Å—Ç–≤—É–µ—Ç —Å–∏–ª–∞, –∫–æ—Ç–æ—Ä—É—é –Ω–∞–∑—ã–≤–∞—é—Ç —Å–∏–ª–æ–π –ê–º–ø–µ—Ä–∞.
‚ö°Ô∏è–§–æ—Ä–º—É–ª–∞ —Å–∏–ª—ã –ê–º–ø–µ—Ä–∞ –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ä–∞—Å–∫—Ä—ã—Ç—å —Å–º—ã—Å–ª –ø–æ–Ω—Ç–∏—è –≤–µ–∫—Ç–æ—Ä–∞ –º–∞–≥–Ω–∏—Ç–Ω–æ–π –∏–Ω–¥—É–∫—Ü–∏–∏: 
–ú–∞–≥–Ω–∏—Ç–Ω–æ–π –∏–¥—É–∫—Ü–∏–µ–π –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è —Ñ–∏–∑–∏—á–µ—Å–∫–∞—è –≤–µ–ª–∏—á–∏–Ω–∞, —Ä–∞–≤–Ω–∞—è –æ—Ç–Ω–æ—à–µ–Ω–∏—é —Å–∏–ª—ã, –¥–µ–π—Å—Ç–≤—É—é—â–µ–π –Ω–∞ –ø—Ä–æ–≤–æ–¥–Ω–∏–∫ —Å —Ç–æ–∫–æ–º –≤ –º–∞–≥–Ω–∏—Ç–Ω–æ–º –ø–æ–ª–µ,\
–∫ —Å–∏–ª–µ —Ç–æ–∫–∞ –∏ –¥–ª–∏–Ω–µ –ø—Ä–æ–≤–æ–¥–Ω–∏–∫–∞, –Ω–∞—Ö–æ–¥—è—â–µ–π—Å—è –≤ –º–∞–≥–Ω–∏—Ç–Ω–æ–º –ø–æ–ª–µ.
‚ö°Ô∏è–ó–∞ –µ–¥–∏–Ω–∏—Ü—É –º–∞–≥–Ω–∏—Ç–Ω–æ–π –∏–Ω–¥—É–∫—Ü–∏–∏ –ø—Ä–∏–Ω–∏–º–∞—é—Ç –º–∞–≥–Ω–∏—Ç–Ω—É—é –∏–Ω–¥—É–∫—Ü–∏—é —Ç–∞–∫–æ–≥–æ –ø–æ–ª—è, –≤ –∫–æ—Ç–æ—Ä–æ–º –Ω–∞ –ø—Ä–æ–≤–æ–¥–Ω–∏–∫ –¥–ª–∏–Ω–æ–π 1 –º –¥–µ–π—Å—Ç–≤—É–µ—Ç —Å–∏–ª–∞ 1 –ù –ø—Ä–∏ —Å–∏–ª–µ —Ç–æ–∫–∞ –≤ –ø—Ä–æ–≤–æ–¥–Ω–∏–∫–µ 1 –ê.
            """)
            amper = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/–∞–º–ø–µ—Ä.jpg", "rb")
            bot.send_photo(call.message.chat.id, amper)

        elif call.data == "–ª–æ—Ä–µ–Ω—Ü":
            bot.reply_to(call.message,
                         text="–°–∏–ª–∞, —Å –∫–æ—Ç–æ—Ä–æ–π —ç–ª–µ–∫—Ç—Ä–æ–º–∞–≥–Ω–∏—Ç—Ä–æ–µ –ø–æ–ª–µ –¥–µ–π—Å—Ç–≤—É–µ—Ç –Ω–∞ —Ç–æ—á–µ—á–Ω—É—é –∑–∞—Ä—è–∂–µ–Ω–Ω—É—é —á–∞—Å—Ç–∏—Ü—É.")
            l = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/–ª–æ—Ä–µ–Ω—Ü.jpg", "rb")
            bot.send_photo(call.message.chat.id, l)

        elif call.data == "–º–∞–≥–Ω–∏—Ç—ã":
            bot.reply_to(call.message,
                         text="–¢–µ–ª–∞, –¥–ª–∏—Ç–µ–ª—å–Ω–æ–µ –≤—Ä–µ–º—è —Å–æ—Ö—Ä–∞–Ω—è—é—â–∏–µ –º–∞–≥–Ω—Ç–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞, –∏–ª–∏ –Ω–∞–º–∞–≥–Ω–∏—á–µ–Ω–Ω–æ—Å—Ç—å, –Ω–∞–∑—ã–≤–∞—é—Ç –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–º–∏ –º–∞–≥–Ω–∏—Ç–∞–º–∏.")


    def coll_teplots(message):
        bot.send_message(message.chat.id,
                         """
üìç–ò–∑–º–µ–Ω–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä–µ–Ω–µ–π —ç–Ω–µ—Ä–≥–∏–∏ —Ç–µ–ª–∞ –ø—Ä–∏ —Ç–µ–ø–ª–æ–ø–µ—Ä–µ–¥–∞—á–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–µ–∑—É–µ—Ç—Å—è –≤–µ–ª–∏—á–∏–Ω–æ–π, –Ω–∞–∑—ã–≤–∞–µ–º–æ–π –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —Ç–µ–ø–ª–æ—Ç—ã.
üìç–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–µ–ø–ª–æ—Ç—ã, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–ª—è –Ω–∞–≥—Ä–µ–≤–∞–Ω–∏—è —Ç–µ–ª–∞, –æ—Ç —Ä–æ–¥–∞ –≤–µ—â–µ—Å—Ç–≤–∞ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–µ–∑—É–µ—Ç—Å—è —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –≤–µ–ª–∏—á–∏–Ω–æ–π, –Ω–∞–∑—ã–≤–∞–µ–º–æ–π —É–¥–µ–ª—å–Ω–æ–π —Ç–µ–ø–ª–æ—ë–º–∫–æ—Å—Ç—å—é –≤–µ—â–µ—Å—Ç–≤–∞.    
üìç–§–∏–∑–∏—á–µ—Å–∫–∞—è –≤–µ–ª–∏—á–∏–Ω–∞, —Ä–∞–≤–Ω–∞—è –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —Ç–µ–ø–ª–æ—Ç—ã, –∫–æ—Ç–æ—Ä–æ–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–æ–±—â–∏—Ç—å 1 –∫–≥ –≤–µ—â–µ—Å—Ç–≤–∞ –¥–ª—è –Ω–∞–≥—Ä–µ–≤–∞–Ω–∏—è –µ–≥–æ –Ω–∞ 1¬∞–° (–∏–ª–∏ –Ω–∞ 1 –ö), –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è —É–¥–µ–ª—å–Ω–æ–π —Ç–µ–ø–ª–æ—ë–º–∫–æ—Å—Ç—å—é –≤–µ—â–µ—Å—Ç–≤–∞.
                         """)
        c = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/–Ω–∞–≥—Ä–µ–≤.jpg", "rb")
        bot.send_photo(message.chat.id, c)


    def tepl_dvigatel(message):
        bot.send_message(message.chat.id,
                         "–£—Å—Ç—Ä–æ–π—Å—Ç–≤–∞, —Å–æ–≤–µ—Ä—à–∞—é—â–∏–µ –º–µ—Ö–∞–Ω–∏—á–µ—Å–∫—É—é —Ä–∞–±–æ—Ç—É –∑–∞ —Å—á—ë—Ç –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π —ç–Ω–µ—Ä–≥–∏–∏ —Ç–æ–ø–ª–∏–≤–∞, –Ω–∞–∑—ã–≤–∞—é—Ç—Å—è —Ç–µ–ø–ª–æ–≤—ã–º–∏ –¥–≤–∏–≥–∞—Ç–µ–ª—è–º–∏.")
        dv = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/—Ç–µ–ø–ª–æ–≤—ã–µ –º–∞—à–∏–Ω—ã.jpg", "rb")
        bot.send_photo(message.chat.id, dv)


    def evaporation_condensation(message):
        bot.send_message(message.chat.id,
                         """
üéØ–Ø–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–≤—Ä–∞—â–µ–Ω–∏—è –≤–µ—â–µ—Å—Ç–≤–∞ –∏–∑ –∂–∏–¥–∫–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤ –≥–∞–∑–æ–æ–±—Ä–∞–∑–Ω–æ–µ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –ø–∞—Ä–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ–º.
üéØ–ò—Å–ø–∞—Ä–µ–Ω–∏–µ–º –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–æ—Ü–µ—Å—Å –ø—Ä–µ–≤—Ä–∞—â–µ–Ω–∏—è –≤–µ—â–µ—Å—Ç–≤–∞ –∏–∑ –∂–∏–¥–∫–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤ –≥–∞–∑–æ–æ–±—Ä–∞–∑–Ω–æ–µ, –ø—Ä–æ–∏—Å—Ö–æ–¥—è—â–∏–π —Å –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏ –∂–∏–¥–∫–æ—Å—Ç–∏ –ø—Ä–∏ –ª—é–±–æ–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–µ.
üéØ–ü—Ä–æ—Ü–µ—Å—Å –ø—Ä–µ–≤—Ä–∞—â–µ–Ω–∏—è –≤–µ—â–µ—Å—Ç–≤–∞ –∏–∑ –≥–∞–∑–æ–æ–±—Ä–∞–∑–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤ –∂–∏–¥–∫–æ–µ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –∫–æ–Ω–¥–µ–Ω—Å–∞—Ü–∏–µ–π.
üéØ–ü–∞—Ä, –æ–±—Ä–∞–∑—É—é—â–∏–π—Å—è –Ω–∞–¥ –∂–∏–¥–∫–æ—Å—Ç—å—é, –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –Ω–µ–Ω–∞—Å—ã—â–µ–Ω–Ω—ã–º.
üéØ–ï—Å–ª–∏ –∂–∏–¥–∫–æ—Å—Ç—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∑–∞–∫—Ä—ã—Ç–æ–º —Å–æ—Å—É–¥–µ, —Ç–æ –≤ –Ω–∞—á–∞–ª–µ —á–∏—Å–ª–æ –º–æ–ª–µ–∫—É–ª, –≤—ã–ª–µ—Ç–∞—é—â–∏—Ö –∏–∑ –∂–∏–¥–∫–æ—Å—Ç–∏, –±—É–¥–µ—Ç –±–æ–ª—å—à–µ, —á–µ–º —á–∏—Å–ª–æ –º–æ–ª–µ–∫—É–ª,\
–≤–æ–∑–≤—Ä–∞—â–∞—é—â–∏—Ö—Å—è –≤ –Ω–µ—ë, –Ω–æ —Å —Ç–µ—á–µ–Ω–∏–µ–º –≤—Ä–µ–º–µ–Ω–∏ –ø–ª–æ—Ç–Ω–æ—Å—Ç—å –ø–∞—Ä–∞ –Ω–∞–¥ –∂–∏–¥–∫–æ—Å—Ç—å—é –≤–æ–∑—Ä–∞—Å—Ç—ë—Ç –Ω–∞—Å—Ç–æ–ª—å–∫–æ, —á—Ç–æ —á–∏—Å–ª–æ –º–æ–ª–µ–∫—É–ª, –ø–æ–∫–∏–¥–∞—é—â–∏—Ö –∂–∏–¥–∫–æ—Å—Ç—å,\
—Å—Ç–∞–Ω–µ—Ç —Ä–∞–≤–Ω—ã–º —á–∏—Å–ª—É –º–æ–ª–µ–∫—É–ª, –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∏—Ö—Å—è –≤ –Ω–µ—ë. –í —ç—Ç–æ–º —Å–ª—É—á–∞–µ –Ω–∞—Å—Ç—É–ø–∞–µ—Ç –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ —Ä–∞–≤–Ω–æ–≤–µ—Å–∏–µ –∂–∏–¥–∫–æ—Å—Ç–∏ —Å –µ—ë –ø–∞—Ä–æ–º.
üéØ–ü–∞—Ä, –Ω–∞—Ö–æ–¥—è—â–∏–π—Å—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ —Ä–∞–≤–Ω–æ–≤–µ—Å–∏—è —Å–æ —Å–≤–æ–µ–π –∂–∏–¥–∫–æ—Å—Ç—å—é, –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –Ω–∞—Å—ã—â–µ–Ω–Ω—ã–º –ø–∞—Ä–æ–º.
üéØ–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–π –≤–æ–¥—è–Ω–æ–π –ø–∞—Ä, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π—Å—è –≤ –≤–æ–∑–¥—É—Ö–µ, —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –Ω–∞—Å—è—â–µ–Ω–Ω—ã–º, –Ω–∞–∑—ã–≤–∞—é—Ç —Ç–æ—á–∫–æ–π —Ä–æ—Å—ã.
üéØ–î–ª—è –∏–∑–º–µ—Ä–µ–Ω–∏—è –≤–ª–∞–∂–Ω–æ—Å—Ç–∏ –≤–æ–∑–¥—É—Ö–∞ –∏—Å–ø–æ–ª—å–∑—É—é—Ç –ø—Ä–∏–±–æ—Ä, –Ω–∞–∑—ã–≤–∞–µ–º—ã–π –ø–∏—Ö—Ä–æ–º–µ—Ç—Ä–æ–º.
üéØ–ö–∏–ø–µ–Ω–∏–µ - —ç—Ç–æ –ø—Ä–æ—Ü–µ—Å—Å –ø–∞—Ä–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è, –ø—Ä–æ–∏—Å—Ö–æ–¥—è—â–∏–π –≤–æ –≤—Å—ë–º –æ–±—ä—ë–º–µ –∂–∏–¥–∫–æ—Å—Ç–∏ –ø—Ä–∏ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–π —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–µ. –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–π –∂–∏–¥–∫–æ—Å—Ç—å –∫–∏–ø–∏—Ç, –Ω–∞–∑—ã–≤–∞—é—Ç —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–æ–π –∫–∏–ø–µ–Ω–∏—è.
üéØ–î–ª—è –ø—Ä–µ–≤—Ä–∞—â–µ–Ω–∏—è —Ä–∞–∑–Ω—ã—Ö –≤–µ—â–µ—Å—Ç–≤ –∏–∑ –∂–∏–¥–∫–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤ –≥–∞–∑–æ–æ–±—Ä–∞–∑–Ω–æ–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è —Ä–∞–∑–Ω–∞—è —ç–Ω–µ—Ä–≥–∏—è, —ç—Ç–∞ —ç–Ω–µ—Ä–≥–∏—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–µ–∑—É–µ—Ç—Å—è –≤–µ–ª–∏—á–∏–Ω–æ–π,\
–Ω–∞–∑—ã–≤–∞–µ–º–æ–π —É–¥–µ–ª—å–Ω–æ–π —Ç–µ–ø–ª–æ—Ç–æ–π –ø–∞—Ä–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è.
üéØ –£–¥–µ–ª—å–Ω–æ–π —Ç–µ–ø–ª–æ—Ç–æ–π –ø–∞—Ä–æ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è (L) –Ω–∞–∑—ã–≤–∞—é—Ç –≤–µ–ª–∏—á–∏–Ω—É, —Ä–∞–≤–Ω—É—é –æ—Ç–Ω–æ—à–µ–Ω–∏—é –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–µ–ø–ª–æ—Ç—ã, –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ —Å–æ–æ–±—â–∏—Ç—å –≤–µ—â–µ—Å—Ç–≤—É –º–∞—Å—Å–æ–π 1 –∫–≥,\
–¥–ª—è –ø—Ä–µ–≤—Ä–∞—â–µ–Ω–∏—è –µ–≥–æ –∏–∑ –∂–∏–¥–∫–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤ –≥–∞–∑–æ–æ–±—Ä–∞–∑–Ω–æ–µ –ø—Ä–∏ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–µ –∫–∏–ø–µ–Ω–∏—è.
                         """)
        e1 = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/–∏—Å–ø–∞—Ä–µ–Ω–∏–µ –∏ –∫–æ–Ω–¥–µ–Ω—Å–∞—Ü–∏—è.jpeg", "rb")
        e2 = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/–∏—Å–ø–∞—Ä–µ–Ω–∏–µ –∏ –∫–æ–Ω–¥–µ–Ω—Å–∞—Ü–∏—è 2.jpeg", "rb")
        bot.send_photo(message.chat.id, e1)
        bot.send_photo(message.chat.id, e2)


    def melting_crystallization(message):
        bot.send_message(message.chat.id,
                         """
üöÄ–ü–ª–∞–≤–ª–µ–Ω–∏–µ–º –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–æ—Ü–µ—Å—Å –ø—Ä–µ–≤—Ä–∞—â–µ–Ω–∏—è –≤–µ—â–µ—Å—Ç–≤–∞ –∏–∑ —Ç–≤—ë—Ä–¥–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤ –∂–∏–¥–∫–æ–µ.
üöÄ–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–π –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø–ª–∞–≤–ª–µ–Ω–∏–µ –≤–µ—â–µ—Å—Ç–≤–∞, –Ω–∞–∑—ã–≤–∞—é—Ç —Ç–µ–º–ø–ø–µ—Ä–∞—Ç—É—Ä–æ–π –ø–ª–∞–≤–ª–µ–Ω–∏—è.
üöÄ–ü—Ä–æ—Ü–µ—Å—Å –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤–µ—â–µ—Å—Ç–≤–∞ –∏–∑ –∂–∏–¥–∫–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤ —Ç–≤—ë—Ä–¥–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞–∑—ã–≤–∞—é—Ç –∫—Ä–∏—Å—Ç–∞–ª–ª–∏–∑–∞—Ü–∏–µ–π.
üöÄ–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–π –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∫—Ä–∏—Å—Ç–∞–ª–ª–∏–∑–∞—Ü–∏—è –≤–µ—â–µ—Å—Ç–≤–∞, –Ω–∞–∑—ã–≤–∞—é—Ç —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–æ–π –∫—Ä–∏—Å—Ç–∞–ª–ª–∏–∑–∞—Ü–∏–∏.
üöÄ–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–µ–ø–ª–æ—Ç—ã, –∫–æ—Ç–æ—Ä–æ–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–æ–±—â–∏—Ç—å 1 –∫–≥ –∫—Ä–∏—Å—Ç–∞–ª–ª–∏—á–µ—Å–∫–æ–≥–æ –≤–µ—â–µ—Å—Ç–≤–∞, —á—Ç–æ–±—ã –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å –µ–≥–æ –≤ –∂–∏–¥–∫–æ—Å—Ç—å –ø—Ä–∏ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–µ –ø–ª–∞–≤–ª–µ–Ω–∏—è,\
–Ω–∞–∑—ã–≤–∞—é—Ç —É–¥–µ–ª—å–Ω–æ–π —Ç–µ–ª–æ—Ç–æ–π –ø–ª–∞–≤–ª–µ–Ω–∏—è.
                         """)
        m1 = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/–ø–ª–∞–≤–ª–µ–Ω–∏–µ –∏ –∫—Ä–∏—Å—Ç–∞–ª–ª–∏–∑–∞—Ü–∏—è 1.jpeg", "rb")
        m2 = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/–ø–ª–∞–≤–ª–µ–Ω–∏–µ –∏ –∫—Ä–∏—Å—Ç–∞–ª–ª–∏–∑–∞—Ü–∏—è 2.jpeg", "rb")
        bot.send_photo(message.chat.id, m1)
        bot.send_photo(message.chat.id, m2)


    # —ç–ª–µ–∫—Ç—Ä–æ–º–∞–≥–Ω–∏—Ç–Ω—ã–µ —è–≤–ª–µ–Ω–∏—è
    def electromagnitizm(message):
        markup = types.ReplyKeyboardMarkup(row_width=1)
        item1 = types.KeyboardButton("–≠–ª–µ–∫—Ç—Ä–∏–∑–∞—Ü–∏—è —Ç–µ–ª")
        item2 = types.KeyboardButton("–≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–æ–µ –ø–æ–ª–µ")
        item3 = types.KeyboardButton("–ü–æ—Å—Ç–æ—è–Ω–Ω—ã–π —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏–π —Ç–æ–∫")
        item4 = types.KeyboardButton("–ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–µ –∏ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –ø—Ä–æ–≤–æ–¥–Ω–∏–∫–æ–≤")
        item5 = types.KeyboardButton("–†–∞–±–æ—Ç–∞ –∏ –º–æ—â–Ω–æ—Å—Ç—å —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–æ–≥–æ —Ç–æ–∫–∞")
        item6 = types.KeyboardButton("–ó–∞–∫–æ–Ω –î–∂–æ—É–ª—è-–õ–µ–Ω—Ü–∞")
        item7 = types.KeyboardButton("–û–ø—ã—Ç –≠—Ä—Å—Ç–µ–¥–∞. –ú–∞–≥–Ω–∏—Ç–Ω–æ–µ –ø–æ–ª–µ —Ç–æ–∫–∞")
        item8 = types.KeyboardButton("–≠–ª–µ–∫—Ç—Ä–æ–º–∞–≥–Ω–∏—Ç–Ω–∞—è –∏–Ω–¥—É–∫—Ü–∏—è")
        item9 = types.KeyboardButton("üí°–°–≤–µ—Ç–æ–≤—ã–µ —è–≤–ª–µ–Ω–∏—èüí°")
        item0 = types.KeyboardButton("‚¨ÖÔ∏è–í—ã—Ö–æ–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(item1, item2, item3, item4, item5, item6, item7, item8, item9, item0)
        bot.send_message(message.chat.id, "–¢–µ–º—ã:", reply_markup=markup)


    def el_tel(message):
        bot.send_message(message.chat.id,
                         """
‚ö°Ô∏è–¢–µ–ª–∞, –∫–æ—Ç–æ—Ä—ã–µ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ —Ç—Ä–µ–Ω–∏—è –ø—Ä–∏–æ–±—Ä–µ—Ç–∞—é—Ç —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –ø—Ä–∏—Ç—è–≥–∏–≤–∞—Ç—å –¥—Ä—É–≥–∏–µ —Ç–µ–ª–∞, –Ω–∞–∑—ã–≤–∞—é—Ç –Ω–∞—ç–ª–µ–∫—Ç—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–º–∏ –∏–ª–∏ –∑–∞—Ä—è–∂–µ–Ω–Ω—ã–º–∏,\
–∞ —è–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–æ–±—Ä–µ—Ç–Ω–∏—è —Ç–µ–ª–∞–º–∏ —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–æ–≥–æ –∑–∞—Ä—è–¥–∞ –Ω–∞–∑—ã–≤–∞—é—Ç —ç–ª–µ–∫—Ç—Ä–∏–∑–∞—Ü–∏–µ–π.
‚ö°Ô∏è–û–¥–Ω–æ–∏–º—ë–Ω–Ω—ã–µ –∑–∞—Ä—è–¥—ã, —Ç.–µ –∑–∞—Ä—è–¥—ã –æ–¥–Ω–æ–≥–æ –∑–Ω–∞–∫–∞, –æ—Ç—Ç–∞–ª–∫–∏–≤–∞—é—Ç—Å—è –¥—Ä—É–≥ –æ—Ç –¥—Ä—É–≥–∞, –∞ —Ä–∞–∑–Ω–æ–∏–º—ë–Ω–Ω—ã–µ –ø—Ä–∏—Ç—è–≥–∏–≤–∞—é—Ç—Å—è –¥—Ä—É–≥ –∫ –¥—Ä—É–≥—É.
‚ö°Ô∏è[q] = 1 –ö–ª (–∑–∞—Ä—è–¥, –∞ –∑–∞ –µ–¥–∏–Ω–∏—Ü—É –∑–∞—Ä—è–¥–∞ –ø—Ä–∏–Ω—è—Ç 1 –∫—É–ª–æ–Ω)
                         """)
        el = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/–∑–∞–∫–æ–Ω —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–æ–≥–æ –∑–∞—Ä—è–¥–∞.jpeg", "rb")
        bot.send_photo(message.chat.id, el)


    def el_pole(message):
        bot.send_message(message.chat.id,
                         """
‚ö°Ô∏è–°–æ–≥–ª–∞—Å–Ω–æ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—é –∞–Ω–≥–ª–∏–π—Å–∫–∏—Ö —É—á—ë–Ω—ã—ã—Ö –ú. –§–∞—Ä–∞–¥–µ—è –∏ –î. –ú–∞–∫—Å–≤–µ–ª–ª–∞, –≤ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ, –≤ –∫–æ—Ç–æ—Ä–æ–º –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –∑–∞—Ä—è–∂–µ–Ω–Ω–æ —Ç–µ–ª–æ,\
—Å—É—â–µ—Å—Ç–≤—É–µ—Ç —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–æ–µ –ø–æ–ª–µ. –ü–æ—Å—Ä–µ–¥—Å—Ç–≤–æ–º —ç—Ç–æ–≥–æ –ø–æ–ª—è –æ–¥–Ω–æ –∑–∞—Ä—è–∂–µ–Ω–Ω–æ–µ —Ç–µ–ª–æ –¥–µ–π—Å—Ç–≤—É–µ—Ç –Ω–∞ –¥—Ä—É–≥–æ–µ.
‚ö°Ô∏è–°–∏–ª—É, —Å –∫–æ—Ç–æ—Ä–æ–π –ø–æ–ª–µ –¥–µ–π—Å—Ç–≤—É–µ—Ç –Ω–∞ –≤–Ω–µ—Å—ë–Ω–Ω—ã–π –≤ –Ω–µ–≥–æ —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏–π –∑–∞—Ä—è–¥, –Ω–∞–∑—ã–≤–∞—é—Ç —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–æ–π —Å–∏–ª–æ–π. 
                         """)
        el = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/–ø—Ä–æ–≤–æ–¥–∞.jpg", "rb")
        bot.send_photo(message.chat.id, el)


    def poston_tok(message):
        markup = types.InlineKeyboardMarkup(row_width=1)
        item1 = types.InlineKeyboardButton(text="–°–∏–ª–∞ —Ç–æ–∫–∞", callback_data="—Å–∏–ª–∞ —Ç–æ–∫–∞")
        item2 = types.InlineKeyboardButton(text="–ù–∞–ø—Ä—è–∂–µ–Ω–∏–µ", callback_data="–Ω–∞–ø—Ä—è–∂–µ–Ω–∏–µ")
        item3 = types.InlineKeyboardButton(text="–≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–æ–µ —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ", callback_data="—Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ")
        markup.add(item1, item2, item3)
        bot.send_message(message.chat.id, "–≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏–º —Ç–æ–∫–æ–º –Ω–∞–∑—ã–≤–∞—é—Ç —É–ø–æ—Ä—è–¥–æ—á–µ–Ω–Ω–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ –∑–∞—Ä—è–∂–µ–Ω–Ω—ã—Ö —á–∞—Å—Ç–∏—Ü.",
                         reply_markup=markup)


    def zakon_oma(message):
        bot.send_message(message.chat.id, "–ó–∞–∫–æ–Ω –û–º–∞: —Å–∏–ª–∞ —Ç–æ–∫–∞ –Ω–∞ —É—á–∞—Å—Ç–∫–µ —Ü–µ–ø–∏ –ø—Ä—è–º–æ –ø—Ä–æ–ø–æ—Ä—Ü–∏–æ–Ω–∞–ª—å–Ω–∞ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—é –Ω–∞ –∫–æ–Ω—Ü–∞—Ö —ç—Ç–æ–≥–æ —É—á–∞—Å—Ç–∫–∞\
–∏ –æ–±—Ä–∞—Ç–Ω–æ –ø—Ä–æ–ø–æ—Ä—Ü–∏–æ–Ω–∞–ª—å–Ω–∞ –µ–≥–æ —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏—é.")
        z_o = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/–∑–∞–∫–æ–Ω –æ–º–∞.jpeg", "rb")
        bot.send_photo(message.chat.id, z_o)


    def connection(message):
        c = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ.jpg", "rb")
        bot.send_photo(message.chat.id, c)


    def A_and_N_el_toka(message):
        bot.send_message(message.chat.id,
                         """
‚ö°Ô∏è–†–∞–±–æ—Ç–∞ —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–æ–≥–æ —Ç–æ–∫–∞ –Ω–∞ —É—á–∞—Å—Ç–∫–µ —Ü–µ–ø–∏ —Ä–∞–≤–Ω–∞ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—é –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è –Ω–∞ —ç—Ç–æ–º —É—á–∞—Å—Ç–∫–µ, —Å–∏–ª—ã —Ç–æ–∫–∞ –∏ –≤—Ä–µ–º–µ–Ω–∏, –≤ —Ç–µ—á–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–≥–æ —Å–æ–≤–µ—Ä—à–∞–µ—Ç—Å—è —Ä–∞–±–æ—Ç–∞.
‚ö°Ô∏è–ï–¥–∏–Ω–∏—Ü–µ–π —Ä–∞–±–æ—Ç—ã —è–≤–ª—è–µ—Ç—Å—è –¥–∂–æ—É–ª—å (1 –î–∂)
‚ö°Ô∏è–ú–æ—â–Ω–æ—Å—Ç—å —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–æ–≥–æ —Ç–æ–∫–∞ —Ä–∞–≤–Ω–∞ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—é –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è –∏ —Å–∏–ª—ã —Ç–æ–∫–∞ –≤ —Ü–µ–ø–∏
‚ö°Ô∏è–ï–¥–∏–Ω–∏—Ü–µ–π –º–æ—â–Ω–æ—Å—Ç–∏ —è–≤–ª—è–µ—Ç—Å—è –≤–∞—Ç—Ç (1 –í—Ç)
                         """)
        q = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/—Ä–∞–±–æ—Ç–∞ –∏ –º–æ—â–Ω–æ—Å—Ç—å.png", "rb")
        bot.send_photo(message.chat.id, q)


    def zakon_Djol_lenz(message):
        bot.send_message(message.chat.id, "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–µ–ø–ª–æ—Ç—ã, –≤—ã–¥–µ–ª—è—é—â–µ–µ—Å—è –ø—Ä–∏ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–∏ —Ç–æ–∫–∞ –ø–æ –ø—Ä–æ–≤–æ–¥–Ω–∏–∫—É,\
—Ä–∞–≤–Ω–æ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—é –∫–≤–∞–¥—Ä–∞—Ç–∞ —Å–∏–ª—ã —Ç–æ–∫–∞, —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏—è –ø—Ä–æ–≤–æ–¥–Ω–∏–∫–∞ –∏ –≤—Ä–µ–º–µ–Ω–∏.")
        q = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/–¥–∂–æ—É–ª—å-–ª–µ–Ω—Ü.jpg", "rb")
        bot.send_photo(message.chat.id, q)


    def opt_ersteda(message):
        markup = types.InlineKeyboardMarkup(row_width=1)
        item1 = types.InlineKeyboardButton(text="–ü—Ä–∞–≤–∏–ª–æ –±—É—Ä–∞–≤—á–∏–∫–∞", callback_data="–±—É—Ä–∞–≤—á–∏–∫")
        item2 = types.InlineKeyboardButton(text="–°–∏–ª–∞ –ê–º–ø–µ—Ä–∞", callback_data="–∞–º–ø–µ—Ä")
        item3 = types.InlineKeyboardButton(text="–°–∏–ª–∞ –õ–æ—Ä–µ–Ω—Ü–∞", callback_data="–ª–æ—Ä–µ–Ω—Ü")
        item4 = types.InlineKeyboardButton(text="–ü—Ä–∞–≤–∏–ª–æ –ª–µ–≤–æ–π —Ä—É–∫–∏", callback_data="–ª–µ–≤–∞—è —Ä—É–∫–∞")
        item5 = types.InlineKeyboardButton(text="–ü—Ä–∞–≤–∏–ª–æ –ø—Ä–∞–≤–æ–π —Ä—É–∫–∏", callback_data="–ø—Ä–∞–≤–∞—è —Ä—É–∫–∞")
        item6 = types.InlineKeyboardButton(text="–ú–∞–≥–Ω–∏—Ç—ã", callback_data="–º–∞–≥–Ω–∏—Ç—ã")
        markup.add(item1, item2, item3, item4, item5, item6)
        ersted = types.InlineKeyboardMarkup(row_width=1)
        item0 = types.InlineKeyboardButton(text="–í–∏–¥–µ–æ –æ–ø—ã—Ç–∞ –≠—Ä—Å—Ç–µ–¥–∞",
                                           url="https://yandex.ru/video/preview/3838845277258400825")
        ersted.add(item0)
        bot.send_message(message.chat.id,
                         """
1)–û–ø—ã—Ç –≠—Ä—Å—Ç–µ–¥–∞ –ø–æ–∫–∞–∑–∞–ª —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –≤–∑–∞–∏–º–æ—Å–≤—è–∑–∏ –º–µ–∂–¥—É —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏–º–∏ –∏ –º–∞–≥–Ω–∏—Ç–Ω—ã–º–∏ —è–≤–ª–µ–Ω–∏—è–º–∏.
2)–°–∏–ª–æ–≤–æ–π —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–æ–π –º–∞–≥–Ω–∏—Ç–Ω–æ–≥–æ –ø–æ–ª—è —è–≤–ª—è–µ—Ç—Å—è –≤–µ–ª–∏—á–∏–Ω–∞, –Ω–∞–∑—ã–≤–∞–µ–º–∞—è –º–∞–≥–Ω–∏—Ç–Ω–æ–π –∏–Ω–¥—É–∫—Ü–∏–µ–π.                    
                         """, reply_markup=ersted)
        opt = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/–æ–ø—ã—Ç —ç—Ä—Å—Ç–µ–¥–∞.jpg", "rb")
        bot.send_photo(message.chat.id, opt)
        bot.send_message(message.chat.id, "–ü–æ–¥—Ç–µ–º—ã:", reply_markup=markup)


    def el_induction(message):
        faradey = types.InlineKeyboardMarkup(row_width=1)
        item0 = types.InlineKeyboardButton(text="–í–∏–¥–µ–æ –æ–ø—ã—Ç–∞ –§–∞—Ä–∞–¥–µ—è",
                                           url="https://yandex.ru/video/preview/1109460983505475854")
        faradey.add(item0)
        bot.send_message(message.chat.id,
                         """
‚ö°Ô∏è–Ø–≤–ª–µ–Ω–∏–µ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è —Ç–æ–∫–∞ –≤ –∑–∞–º–∫–Ω—É—Ç–æ–º –ø—Ä–æ–≤–æ–¥–Ω–∏–∫–µ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –º–∞–≥–Ω–∏—Ç–Ω–æ–≥–æ –ø–æ–ª—è, –ø—Ä–æ–Ω–∏–∑—ã–≤–∞—é—â–µ–≥–æ –∫–æ–Ω—Ç—É—Ä –ø—Ä–æ–≤–æ–¥–Ω–∏–∫–∞, –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è —ç–ª–µ–∫—Ç—Ä–æ–º–∞–≥–Ω–∏—Ç–Ω–æ–π –∏–Ω–¥—É–∫—Ü–∏–π.
‚ö°Ô∏è–¢–æ–∫, –≤–æ–∑–Ω–∏–∫–∞—é—â–∏–π –≤ —ç—Ç–æ–º —Å–ª—É—á–∞–µ –≤ —Ü–µ–ø–∏, –Ω–∞–∑—ã–≤–∞—é—Ç –∏–Ω–¥—É–∫—Ü–∏–æ–Ω–Ω—ã–º —Ç–æ–∫–æ–º.
‚ö°Ô∏è–ï—Å–ª–∏ –≤ —Å–∞–º–æ–º –ø—Ä–æ–≤–æ–¥–Ω–∏–∫–µ –∏–∑–º–µ–Ω—è–µ—Ç—Å—è —Å–∏–ª–∞ —Ç–æ–∫–∞, —Ç–æ –≤–æ–∫—Ä—É–≥ –ø—Ä–æ–≤–æ–¥–Ω–∏–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–µ –º–∞–≥–Ω–∏—Ç–Ω–æ–µ –ø–æ–ª–µ. –≠—Ç–æ –ø–æ–ª–µ –ø–æ—Ä–æ–∂–¥–∞–µ—Ç –≤ –ø—Ä–æ–≤–æ–¥–Ω–∏–∫–µ –∏–Ω–¥—É–∫—Ü–∏–æ–Ω–Ω—ã–π —Ç–æ–∫,\
–∫–æ—Ç–æ—Ä—ã–π –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è —Ç–æ–∫–æ–º —Å–∞–º–æ–∏–Ω–¥—É–∫—Ü–∏–∏, –∞ —è–≤–ª–µ–Ω–∏–µ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è —Ç–∞–∫–æ–≥–æ —Ç–æ–∫–∞ - —è–≤–ª–µ–Ω–∏–µ —Å–∞–º–æ–∏–Ω–¥—É–∫—Ü–∏–∏.
‚ö°Ô∏è–ó–Ω–∞—á–µ–Ω–∏–µ –æ—Ç–∫—Ä—ã—Ç–∏—è —è–≤–ª–µ–Ω–∏—è –º–∞–≥–Ω–∏—Ç–Ω–æ–π –∏–Ω–¥—É–∫—Ü–∏–∏ –∑–∞–∫–ª—é—á–∞–µ—Ç—Å—è –≤ —Ç–æ–º, —á—Ç–æ –≤ —ç—Ç–æ–º —è–≤–ª–µ–Ω–∏–∏ –Ω–∞–≥–ª—è–¥–Ω–æ –Ω–∞–±–ª—é–¥–∞–µ—Ç—Å—è —Å–≤—è–∑—å —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏—Ö –∏ –º–∞–≥–Ω–∏—Ç–Ω—ã—Ö —è–≤–ª–µ–Ω–∏–π,\
—ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–æ–≥–æ –∏ –º–∞–≥–Ω–∏—Ç–Ω–æ–≥–æ –ø–æ–ª–µ–π, —á—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –≥–æ–≤–æ—Ä–∏—Ç—å –æ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–∏ –µ–¥–∏–Ω–æ–≥–æ —ç–ª–µ–∫—Ç—Ä–æ–º–∞–≥–Ω–∏—Ç–Ω–æ–≥–æ –ø–æ–ª—è.
                         """, reply_markup=faradey)
        f = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/—Ñ–∞—Ä–∞–¥–µ–π.jpg", "rb")
        bot.send_photo(message.chat.id, f)


    def svet_evl(message):
        markup = types.ReplyKeyboardMarkup(row_width=1)
        item1 = types.KeyboardButton("–ó–∞–∫–æ–Ω –ø—Ä—è–º–æ–ª–∏–Ω–µ–π–Ω–æ–≥–æ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è —Å–≤–µ—Ç–∞")
        item2 = types.KeyboardButton("–ó–∞–∫–æ–Ω –æ—Ç—Ä–∞–∂–µ–Ω–∏—è —Å–≤–µ—Ç–∞")
        item3 = types.KeyboardButton("–ü–ª–æ—Å–∫–æ–µ –∑–µ—Ä–∫–∞–ª–æ")
        item4 = types.KeyboardButton("–ü—Ä–µ–ª–æ–º–ª–µ–Ω–∏–µ —Å–≤–µ—Ç–∞")
        item5 = types.KeyboardButton("–î–∏—Å–ø–µ—Ä—Å–∏—è —Å–≤–µ—Ç–∞")
        item6 = types.KeyboardButton("–õ–∏–Ω–∑—ã")
        item7 = types.KeyboardButton("–§–æ–∫—É—Å–Ω–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –ª–∏–Ω–∑—ã")
        item0 = types.KeyboardButton("‚¨ÖÔ∏è–í—ã—Ö–æ–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(item1, item2, item3, item4, item5, item6, item7, item0)

        # —Å–≤–µ—Ç–æ–≤—ã–µ —è–≤–ª–µ–Ω–∏—è
        svet = types.InlineKeyboardMarkup(row_width=1)
        item = types.InlineKeyboardButton(text="–°–≤–µ—Ç–æ–≤—ã–µ —è–≤–ª–µ–Ω–∏—è",
                                          url="https://www.evkova.org/svetovyie-yavleniya-v-fizike")
        svet.add(item)
        bot.send_message(message.chat.id,
                         "–ó–∞–º–µ—á–∞—Ç–µ–ª—å–Ω—ã–π —Å–∞–π—Ç, –∫–æ—Ç–æ—Ä—ã–π —Ä–∞—Å—Å–∫–∞–∂–µ—Ç –∏ –ø–æ–∫–∞–∂–µ—Ç –Ω–∞ —Ä–∏—Å—É–Ω–∫–∞—Ö –≤—Å—ë –æ —Å–≤–µ—Ç–æ–≤—ã—Ö —è–≤–ª–µ–Ω–∏—è—Ö –≤ —Ñ–∏–∑–∏–∫–µ –∏ –≤ –ø—Ä–∏—Ä–æ–¥–µ!",
                         reply_markup=svet)
        bot.send_message(message.chat.id, "–¢–µ–º—ã:", reply_markup=markup)


    def zakon_raspr_sveta(message):
        bot.send_message(message.chat.id,
                         """
üí°–ó–∞–∫–æ–Ω –ø—Ä—è–º–æ–ª–∏–Ω–µ–π–Ω–æ–≥–æ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è —Å–≤–µ—Ç–∞: –≤ –æ–¥–Ω–æ—Ä–æ–¥–Ω–æ–π —Å—Ä–µ–¥–µ —Å–≤–µ—Ç —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω—è–µ—Ç—Å—è –ø—Ä—è–º–æ–ª–∏–Ω–µ–π–Ω–æ.
üí°–¢–æ–µ—á–Ω—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ - —ç—Ç–æ —Ç–∞–∫–æ–π –∏—Å—Ç–æ—á–Ω–∏–∫, —Ä–∞–∑–º–µ—Ä—ã –∫–æ—Ç–æ—Ä–æ–≥–æ –º–∞–ª—ã –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ–º –æ—Ç –Ω–µ–≥–æ –¥–æ –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—è.
                         """)
        svet = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/–∑–∞–∫–æ–Ω –ø—Ä—è–º–æ–ª–∏–Ω–µ–π–Ω–æ–≥–æ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è —Å–≤–µ—Ç–∞.jpg", "rb")
        bot.send_photo(message.chat.id, svet)


    def zakon_otr_sveta(message):
        bot.send_message(message.chat.id,
                         """
1) –£–≥–æ–ª –æ—Ç—Ä–∞–∂–µ–Ω–∏—è —Å–≤–µ—Ç–∞ —Ä–∞–≤–µ–Ω —É–≥–ª—É –ø–∞–¥–µ–Ω–∏—è.
2) –õ—É–∏ –ø–∞–¥–∞—é—â–∏–π –∏ –æ—Ç—Ä–∞–∂—ë–Ω–Ω—ã–π, –∞ —Ç–∞–∫–∂–µ –ø–µ—Ä–ø–µ–Ω–¥–∏–∫—É–ª—è—Ä, –≤–æ—Å—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π –∫ –≥—Ä–∞–Ω–∏—Ü–µ —Ä–∞–∑–¥–µ–ª–∞ –¥–≤—É—Ö —Å—Ä–µ–¥, –ª–µ–∂–∞—Ç –≤ –æ–¥–Ω–æ–π –ø–ª–æ—Å–∫–æ—Å—Ç–∏.
                         """)
        s = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/–∑–∞–∫–æ–Ω –æ—Ç—Ä–∞–∂–µ–Ω–∏—è.jpg", "rb")
        bot.send_photo(message.chat.id, s)


    def ploskoe_zerkalo(message):
        bot.send_message(message.chat.id,
                         """
ü™û–ü–ª–æ—Å–∫–æ–µ –∑–µ—Ä–∫–∞–ª–æ –¥–∞—ë—Ç –ø—Ä—è–º–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞.
ü™û–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–º–µ–µ—Ç —Ç–µ –∂–µ —Ä–∞–∑–º–µ—Ä—ã, —á—Ç–æ –∏ –ø—Ä–µ–¥–º–µ—Ç.
ü™û–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –æ—Ç –ø—Ä–µ–¥–º–µ—Ç–∞ –¥–æ –∑–µ—Ä–∫–∞–ª–∞ —Ä–∞–≤–Ω–æ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—é –æ—Ç –∑–µ—Ä–∫–∞–ª–∞ –¥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è.
ü™û–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞ –≤ –ø–ª–æ—Å–∫–æ–º –∑–µ—Ä–∫–∞–ª–µ —è–≤–ª—è–µ—Ç—Å—è –º–Ω–∏–º—ã–º.
ü™û–ú–Ω–∏–º–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ - —ç—Ç–æ —Ç–∞–∫–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è –≥–ª–∞–∑–æ–º.
                         """)
        pl = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/–ø–ª–æ—Å–∫–æ–µ –∑–µ—Ä–∫–∞–ª–æ.jpg", "rb")
        bot.send_photo(message.chat.id, pl)


    def dispersia(message):
        bot.send_message(message.chat.id,
                         """
üåà–†–∞–∑–ª–æ–∂–µ–Ω–∏–µ —Å–≤–µ—Ç–∞ –≤ —Å–ø–µ–∫—Ç –æ–±—ä—è—Å–Ω—è–µ—Ç—Å—è —Ç–µ–º, —á—Ç–æ —Å–≤–µ—Ç–æ–≤—ã–µ –ø—É—á–∫–∏ –ø–æ-—Ä–∞–∑–Ω–æ–º—É –ø—Ä–µ–ª–æ–º–ª—è—é—Ç—Å—è –ø—Ä–∏–∑–º–æ–π: –ª—É—á–∏ –∫—Ä–∞—Å–Ω–æ–≥–æ —Ü–≤–µ—Ç–∞ –ø—Ä–µ–ª–æ–º–ª—è—é—Ç—Å—è —Å–ª–∞–±–µ–µ,\
–∞ –ª—É—á–∏ —Ñ–∏–æ–ª–µ—Ç–æ–≤–æ–≥–æ —Ü–≤–µ—Ç–∞ - —Å–∏–ª—å–Ω–µ–µ. –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç—å —É–≥–ª–∞ –ø—Ä–µ–ª–æ–º–ª–µ–Ω–∏—è —Å–≤–µ—Ç–∞ –≤ —Å—Ä–µ–¥–µ –æ—Ç —Ü–≤–µ—Ç–∞ —Å–≤–µ—Ç–∞ (–æ—Ç –¥–ª–∏–Ω—ã —Å–≤–µ—Ç–æ–≤–æ–π –≤–æ–ª–Ω—ã) –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –¥–∏—Å–ø–µ—Ä—Å–∏–µ–π —Å–≤–µ—Ç–∞.
üåà–†–∞–¥—É–≥–∞ - —ç—Ç–æ —Å–ø–µ–∫—Ç—Ä —Å–æ–ª–Ω–µ—á–Ω–æ–≥–æ —Å–≤–µ—Ç–∞. –û–Ω –æ–±—Ä–∞–∑—É–µ—Ç—Å—è —Ä–∏ —Ä–∞–∑–ª–æ–∂–µ–Ω–∏–∏ –±–µ–ª–æ–≥–æ —Å–≤–µ—Ç–∞ –≤ –∫–∞–ø–ª—è—Ö –¥–æ–∂–¥—è, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–≤–∞—Ç—å –∫–∞–∫ –ø—Ä–∏–∑–º—ã.
                         """)
        d = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/–¥–∏—Å–ø–µ—Ä—Å–∏—è.png", "rb")
        bot.send_photo(message.chat.id, d)


    def prelomlenie_sveta(message):
        bot.send_message(message.chat.id,
                         """
üí°–ò–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è —Å–≤–µ—Ç–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –≤ –¥—Ä—É–≥—É—é —Å—Ä–µ–¥—É –Ω–∞–∑—ã–≤–∞—é—Ç –ø—Ä–µ–ª–æ–º–ª–µ–Ω–∏–µ–º —Å–≤–µ—Ç–∞.
üí°–õ—É—á–∏ –ø–∞–¥–∞—é—â–∏–π –∏ –ø—Ä–µ–ª–æ–º–ª—ë–Ω–Ω—ã–π, –∞ —Ç–∞–∫–∂–µ –ø–µ—Ä–ø–µ–Ω–¥–∏–∫—É–ª—è—Ä, –≤–æ—Å—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π –∫ –≥—Ä–∞–Ω–∏—Ü–µ —Ä–∞–∑–¥–µ–ª–∞ –¥–≤—É—Ö —Å—Ä–µ–¥, –ª–µ–∂–∞—Ç –≤ –æ–¥–Ω–æ–π –ø–ª–æ—Å–∫–æ—Å—Ç–∏.
                         """)
        p = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/–ø—Ä–µ–ª–æ–º–ª–µ–Ω–∏–µ —Å–≤–µ—Ç–∞.jpg", "rb")
        bot.send_photo(message.chat.id, p)


    def linzs(message):
        bot.send_message(message.chat.id,
                         """
üìå–õ–∏–Ω–∑–æ–π –Ω–∞–∑—ã–≤–∞—é—Ç –ø—Ä–æ–∑—Ä–∞—á–Ω–æ–µ —Ç–µ–ª–æ, –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –¥–≤—É–º—è —Å—Ñ–µ—Ä–∏—á–µ—Å–∫–∏–º–∏ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç—è–º–∏.
üìå–õ–∏–Ω–∏—é, –ø—Ä–æ—Ö–æ–¥—è—â—É—é —á–µ—Ä–µ–∑ —Ü–µ–Ω—Ç—Ä—ã —Å—Ñ–µ—Ä–∏—á–µ—Å–∫–∏—Ö –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–µ–π, –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞—é—â–∏—Ö –ª–∏–Ω–∑—É, –Ω–∞–∑—ã–≤–∞—é—Ç –≥–ª–∞–≤–Ω–æ–π –æ–ø—Ç–∏—á–µ—Å–∫–æ–π –æ—Å—å—é.
                         """)
        l = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/–ª–∏–Ω–∑—ã.jpg", "rb")
        bot.send_photo(message.chat.id, l)


    def focus(message):
        bot.send_message(message.chat.id,
                         """
üëÄ–ì–ª–∞–≤–Ω—ã–π —Ñ–æ–∫—É—Å –ª–∏–Ω–∑—ã F - —ç—Ç–æ —Ç–æ—á–∫–∞, –≤ –∫–æ—Ç–æ—Ä–æ–π –ø–æ—Å–ª–µ –ø—Ä–µ–ª–º–ª–µ–Ω–∏—è —Å–æ–±–∏—Ä–∞—é—Ç—Å—è –ª—É—á–∏, –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–µ –≥–ª–∞–≤–Ω–æ–π –æ–ø—Ç–∏—á–µ—Å–∫–æ–π –æ—Å–∏.
üëÄ–†–∞—Å—Å—Ç–æ—è–Ω–∏–µ –æ—Ç –æ–ø—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ü–µ–Ω—Ç—Ä–∞ –ª–∏–Ω–∑—ã –¥–æ –µ—ë —Ñ–æ–∫—É—Å–∞ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è —Ñ–æ–∫—É—Å–Ω—ã–º —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ–º.
üëÄ–í–µ–ª–∏—á–∏–Ω—É, –æ–±—Ä–∞—Ç–Ω—É—é —Ñ–æ–∫—É—Å–Ω–æ–º—É —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—é (F), –Ω–∞–∑—ã–≤–∞—é—Ç –æ–ø—Ç–∏—á–µ—Å–∫–æ–π —Å–∏–ª–æ–π –ª–∏–Ω–∑—ã (D). –ï–¥–∏–Ω–∏—Ü–∞ –∏–∑–º–µ—Ä–µ–Ω–∏—è: 1 –¥–ø—Ç—Ä (–¥–∏–æ–ø—Ç—Ä–∏—è).
                         """)
        f = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/—Ñ–æ–∫—É—Å.jpg", "rb")
        bot.send_photo(message.chat.id, f)


    # –∫–≤–∞–Ω—Ç–æ–≤—ã–µ —è–≤–ª–µ–Ω–∏—è
    def quantum(message):
        markup = types.ReplyKeyboardMarkup(row_width=1)
        item1 = types.KeyboardButton("–†–∞–¥–∏–æ–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å")
        item2 = types.KeyboardButton("–í–∏–¥—ã –∏–∑–ª—É—á–µ–Ω–∏–π")
        item3 = types.KeyboardButton("–û–ø—ã—Ç—ã –†–µ–∑–µ—Ä—Ñ–æ—Ä–¥–∞")
        item4 = types.KeyboardButton("–ü–ª–∞–Ω–µ—Ç–∞—Ä–Ω–∞—è –º–æ–¥–µ–ª—å –∞—Ç–æ–º–∞")
        item5 = types.KeyboardButton("–°–æ—Å—Ç–∞–≤ –∞—Ç–æ–º–Ω–æ–≥–æ —è–¥—Ä–∞")
        item0 = types.KeyboardButton("‚¨ÖÔ∏è–í—ã—Ö–æ–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(item1, item2, item3, item4, item5, item0)
        bot.send_message(message.chat.id, "–¢–µ–º—ã:", reply_markup=markup)


    def radioactivnost(message):
        bot.send_message(message.chat.id,
                         """
‚ò¢Ô∏è–†–∞–¥–∏–æ–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å—é –Ω–∞–∑—ã–≤–∞—é—Ç —è–≤–ª–µ–Ω–∏–µ —Å–∞–º–æ–ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–≥–æ –∏–∑–ª—É—á–µ–Ω–∏—è –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Ö–∏–º–∏—á–µ—Å–∫–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤, –∞\
–≤–∏–¥ —ç—Ç–æ–≥–æ –∏–∑–ª—É—á–µ–Ω–∏—è –Ω–∞–∑—ã–≤–∞—é—Ç —Ä–∞–¥–∏–æ–∞–∫—Ç–∏–≤–Ω—ã–º –∏–∑–ª—É—á–µ–Ω–∏–µ–º.
‚ò¢Ô∏è–†–∞–¥–∏–æ–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å, –∫–æ—Ç–æ—Ä–æ–π –æ–±–ª–∞–¥–∞—é—Ç –≤–µ—â–µ—Å—Ç–≤–∞, —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –≤ –ø—Ä–∏—Ä–æ–¥–µ, –Ω–∞–∑—ã–≤–∞—é—Ç –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–π —Ä–∞–¥–∏–æ–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å—é.
                         """)
        r = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/–∞–Ω—Ä–∏ –±–µ–∫–∫–µ—Ä–µ–ª—å.jpg", "rb")
        bot.send_photo(message.chat.id, r)


    def kind_of_izl(message):
        vids = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/–≤–∏–¥—ã –∏–∑–ª—É—á–µ–Ω–∏–π.jpg", "rb")
        bot.send_photo(message.chat.id, vids)

        alpha = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/–∞–ª—å—Ñ–∞.jpg", "rb")
        bot.send_photo(message.chat.id, alpha)

        beta = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/–±–µ—Ç–∞.jpg", "rb")
        bot.send_photo(message.chat.id, beta)

        gamma = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/–≥–∞–º–º–∞.jpg", "rb")
        bot.send_photo(message.chat.id, gamma)


    def opt_rezerford(message):
        markup = types.InlineKeyboardMarkup(row_width=1)
        item0 = types.InlineKeyboardButton(text="–í–∏–¥–µ–æ –æ–ø—ã—Ç–∞ –†–µ–∑–µ—Ä—Ñ–æ—Ä–¥–∞",
                                           url="https://dzen.ru/video/watch/6301df6922706a1bfc2986c0?f=video")
        markup.add(item0)
        bot.send_message(message.chat.id,
                         """
–í —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–æ–≤ –†–µ–∑–µ—Ä—Ñ–æ—Ä–¥ –ø—Ä–µ–¥–ª–æ–∂–∏–ª –Ω–æ–≤—É—é –º–æ–¥–µ–ª—å —Å—Ç—Ä–æ–µ–Ω–∏—è –∞—Ç–æ–º–∞, –Ω–∞–∑–≤–∞–Ω–Ω—É—é –ø–ª–∞–Ω–µ—Ç–∞—Ä–Ω–æ–π –º–æ–¥–µ–ª—å—é. –û–Ω —Å–¥–µ–ª–∞–ª —Å–ª–µ–¥—É—é—â–∏–µ –≤—ã–≤–æ–¥—ã:

‚ò¢Ô∏è–í –∞—Ç–æ–º–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ –∑–∞—Ä—è–∂–µ–Ω–Ω–∞—è —á–∞—Å—Ç–∏—Ü–∞, –Ω–∞–∑–≤–∞–Ω–Ω–∞—è —è–¥—Ä–æ–º –∞—Ç–æ–º–∞, –∫–æ—Ç–æ—Ä–∞—è –æ—Ç—Ç–∞–ª–∫–∏–≤–∞–µ—Ç –∞–ª—å—Ñ–∞-—á–∞—Å—Ç–∏—Ü—ã.
‚ò¢Ô∏è–†–∞–∑–º–µ—Ä—ã —è–¥—Ä–∞ –º–∞–ª—ã –ø–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—é —Å —Ä–∞–∑–º–µ—Ä–∞–º–∏ –∞—Ç–æ–º–∞, –ø–æ—Å–∫–æ–ª—å–∫—É –æ—Ç—Ç–∞–ª–∫–∏–≤–∞–µ—Ç—Å—è –æ—á–µ–Ω—å –Ω–µ–±–æ–ª—å—à–æ–µ —á–∏—Å–ª–æ –∞–ª—å—Ñ–∞-—á–∞—Å—Ç–∏—Ü, –∞ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –∞–ª—å—Ñ–∞-—á–∞—Å—Ç–∏—Ü,\
—Å–≤–æ–±–æ–¥–Ω–æ –ø—Ä–æ—Ö–æ–¥–∏—Ç —á–µ—Ä–µ–∑ —Ñ–æ–ª—å–≥—É.
‚ò¢Ô∏è–ú–∞—Å—Å–∞ —è–¥—Ä–∞ —Å—Ä–∞–≤–Ω–∏–º–∞ —Å –º–∞—Å—Å–æ–π –±–µ—Ç–∞-—á–∞—Å—Ç–∏—Ü—ã, –ø–æ—Å–∫–æ–ª—å–∫—É –º–∞—Å—Å–∞ —ç–ª–µ–∫—Ç—Ä–æ–Ω–æ–≤ –≤ 8000 —Ä–∞–∑ –º–µ–Ω—å—à–µ –º–∞—Å—Å–∞ –∞–ª—å—Ñ–∞-—á–∞—Å—Ç–∏—Ü—ã –∏ —ç–ª–µ–∫—Ç—Ä–æ–Ω—ã –Ω–µ —Å–º–æ–≥–ª–∏ –±—ã\
–∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –µ—ë –¥–≤–∏–∂–µ–Ω–∏—è.
                         """, reply_markup=markup)
        rez = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/–æ–ø—ã—Ç —Ä–µ–∑–µ—Ä—Ñ–æ—Ä–¥–∞.jpg", "rb")
        bot.send_photo(message.chat.id, rez)


    def model_of_atoms(message):
        atom = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/–ø–ª–∞–Ω–µ—Ç–∞—Ä–Ω–∞—è –º–æ–¥–µ–ª—å –∞—Ç–æ–º–∞.jpg", "rb")
        bot.send_photo(message.chat.id, atom)


    def sostaf_of_atoms(message):
        bot.send_message(message.chat.id,
                         """
‚ò¢Ô∏è–†–∞–¥–∏–æ–∞–∫—Ç–∏–≤–Ω–æ–µ –ø—Ä–µ–≤—Ä–∞—â–µ–Ω–∏–µ —è–¥–µ—Ä –æ–¥–Ω–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ —è–¥—Ä–∞ –¥—Ä—É–≥–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞–∑—ã–≤–∞—é—Ç —Ä–∞–¥–∏–æ–∞–∫—Ç–∏–≤–Ω—ã–º —è–¥—Ä–æ–º.
‚ò¢Ô∏è–ü–µ—Ä–∏–æ–¥–æ–º –ø–æ–ª—É—Ä–∞—Å–ø–∞–¥–∞ T –Ω–∞–∑—ã–≤–∞—é—Ç –ø—Ä–æ–º–µ–∂—É—Ç–æ–∫ –≤—Ä–µ–º–µ–Ω–∏, –≤ —Ç–µ—á–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–≥–æ —Ä–∞—Å–ø–∞–¥–∞–µ—Ç—Å—è –ø–æ–ª–æ–≤–∏–Ω–∞ –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–æ —á–∏—Å–ª–∞ –∞—Ç–æ–º–æ–≤ —Ä–∞–¥–∏–æ–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –≤–µ—â–µ—Å—Ç–≤–∞.
‚ò¢Ô∏è–ü—Ä–µ–≤—Ä–∞—â–µ–Ω–∏–µ –∏—Å—Å—Ö–æ–¥–Ω–æ–≥–æ –∞—Ç–æ–º–Ω–æ–≥–æ —è–¥—Ä–∞ –ø—Ä–∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–∏ —Å –∫–∞–∫–æ–π-–ª–∏–±–æ —á–∞—Å—Ç–∏—Ü–µ–π –≤ –¥—Ä—É–≥–æ–µ —è–¥—Ä–æ, –æ—Ç–ª–∏—á–Ω–æ–µ –æ—Ç –∏—Å—Ö–æ–¥–Ω–æ–≥–æ, –Ω–∞–∑—ã–≤–∞—é—Ç —è–¥–µ—Ä–Ω–æ–π —Ä–µ–∞–∫—Ü–∏–µ–π.
‚ò¢Ô∏è–í—Å–µ —Ä–µ–∞–ª—å–Ω–æ –ø—Ä–æ–∏—Å—Ö–æ–¥—è—â–∏–µ —è–¥–µ—Ä–Ω—ã–µ —Ä–µ–∞–∫—Ü–∏–∏ –ø–æ–¥—á–∏–Ω—è—é—Ç—Å—è –∑–∞–∫–æ–Ω—É —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –º–∞—Å—Å–æ–≤–æ–≥–æ —á–∏—Å–ª–∞ –∏ –∑–∞–∫–æ–Ω—É —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞—Ä—è–¥–æ–≤–æ–≥–æ —á–∏—Å–ª–∞.
                         """)
        s1 = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/—Å–æ—Å—Ç–∞–≤ –∞—Ç–æ–º–Ω–æ–≥–æ —è–¥—Ä–∞.jpg", "rb")
        bot.send_photo(message.chat.id, s1)
        s2 = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/–æ–±–æ–∑–Ω–∞—á–µ–Ω–∏–µ —è–¥–µ—Ä —Ö–∏–º —ç–ª–µ–º.jpg", "rb")
        bot.send_photo(message.chat.id, s2)


    # —Å–ø—Ä–∞–≤–æ—á–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã
    def spravka(message):
        markup = types.ReplyKeyboardMarkup(row_width=1)
        item1 = types.KeyboardButton("–ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã")
        item2 = types.KeyboardButton("–î–µ—Å—è—Ç–∏—á–Ω—ã–µ –ø—Ä–∏—Å—Ç–∞–≤–∫–∏")
        item3 = types.KeyboardButton("–ü–ª–æ—Ç–Ω–æ—Å—Ç—å")
        item4 = types.KeyboardButton("–£–¥–µ–ª—å–Ω—ã–µ –≤–µ–ª–∏—á–∏–Ω—ã")
        item5 = types.KeyboardButton("–£–¥–µ–ª—å–Ω–æ–µ —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–æ–µ —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ")
        item6 = types.KeyboardButton("–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –ø–ª–∞–≤–ª–µ–Ω–∏—è –∏ –∫–∏–ø–µ–Ω–∏—è")
        item0 = types.KeyboardButton("‚¨ÖÔ∏è–í—ã—Ö–æ–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(item1, item2, item3, item4, item5, item6, item0)
        bot.send_message(message.chat.id, "–°–ø—Ä–∞–≤–æ—á–Ω—ã–π –º–∞—Ç–µ—Ä–∏–∞–ª:", reply_markup=markup)


    def const(message):
        c = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/–∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã.png", "rb")
        bot.send_photo(message.chat.id, c)


    def des_prist(message):
        p = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/–¥–µ—Å—è—Ç–∏—á–Ω—ã–µ –ø—Ä–∏—Å—Ç–∞–≤–∫–∏.png", "rb")
        bot.send_photo(message.chat.id, p)


    def ro(message):
        r = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/—Ä–æ.jpg", "rb")
        bot.send_photo(message.chat.id, r)


    def ydel_vel(message):
        y = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/—É–¥–µ–ª—å–Ω–∞—è.png", "rb")
        bot.send_photo(message.chat.id, y)


    def yd_el_soprot(message):
        el_sop = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/—É–¥–µ–ª—å–Ω–æ–µ —ç–ª —Å–ø–æ—Ä–æ—Ç.png", "rb")
        bot.send_photo(message.chat.id, el_sop)


    def temp_plav_kip(message):
        t = open("—Ñ–æ—Ç–æ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞/–∫–∏–ø–µ–Ω–∏–µ –∏ –ø–ª–∞–≤–ª–µ–Ω–∏–µ –≤–µ—â–µ—Å—Ç–≤.jpeg", "rb")
        bot.send_photo(message.chat.id, t)


    # —Ç–µ—Å—Ç—ã
    def tests(message):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        item1 = "–¢–µ—Å—Ç—ã –ø–æ –º–µ—Ö–∞–Ω–∏—á–µ—Å–∫–∏–º —è–≤–ª–µ–Ω–∏—è–º"
        item2 = "–¢–µ—Å—Ç—ã –ø–æ —Ç–µ–ø–ª–æ–≤—ã–º —è–≤–ª–µ–Ω–∏—è–º"
        item3 = "–¢–µ—Å—Ç—ã –ø–æ —ç–ª–µ–∫—Ç—Ä–æ–º–∞–≥–Ω–∏—Ç–Ω—ã–º —è–≤–ª–µ–Ω–∏—è–º"
        item4 = "–¢–µ—Å—Ç—ã –ø–æ –∫–≤–∞–Ω—Ç–æ–≤—ã–º —è–≤–ª–µ–Ω–∏—è–º"
        item0 = "‚¨ÖÔ∏è–í—ã—Ö–æ–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
        markup.add(item1, item2, item3, item4, item0)
        bot.send_message(message.chat.id, "–ï—Å–ª–∏ –≤—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Ä–µ—à–∏–ª–∏ —Ç–µ—Å—Ç, —Ç–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∑–Ω–∞—á–æ–∫ ‚úÖ –ø–æ—Å–ª–µ —Ç–µ—Å—Ç–∞!")
        bot.send_message(message.chat.id, text="–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–µ—Å—Ç—ã –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç:", reply_markup=markup)

        connect = sqlite3.connect('data_telegram.db')
        cursor = connect.cursor()
        people_id = message.chat.id
        cursor.execute(f"SELECT id FROM telegram_users WHERE id = {people_id}")
        data = cursor.fetchone()
        global n, k
        if data is None:
            # –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
            users = [message.chat.id, n, k]
            cursor.execute("INSERT INTO telegram_users VALUES(?,?,?);", users)
            connect.commit()


    def test_after_true_answer(message):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=1)
        item1 = "–¢–µ—Å—Ç—ã –ø–æ –º–µ—Ö–∞–Ω–∏—á–µ—Å–∫–∏–º —è–≤–ª–µ–Ω–∏—è–º"
        item2 = "–¢–µ—Å—Ç—ã –ø–æ —Ç–µ–ø–ª–æ–≤—ã–º —è–≤–ª–µ–Ω–∏—è–º"
        item3 = "–¢–µ—Å—Ç—ã –ø–æ —ç–ª–µ–∫—Ç—Ä–æ–º–∞–≥–Ω–∏—Ç–Ω—ã–º —è–≤–ª–µ–Ω–∏—è–º"
        item4 = "–¢–µ—Å—Ç—ã –ø–æ –∫–≤–∞–Ω—Ç–æ–≤—ã–º —è–≤–ª–µ–Ω–∏—è–º"
        item0 = "‚¨ÖÔ∏è–í—ã—Ö–æ–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
        markup.add(item1, item2, item3, item4, item0)
        bot.send_message(message.chat.id, "–û—Ç–≤–µ—Ç –∑–∞–ø–∏—Å–∞–Ω!", reply_markup=markup)


    @bot.message_handler(commands=['statistik'])
    def statistik(message):
        if message.chat.id == 847195722:
            connect = sqlite3.connect('data_telegram.db')
            cursor = connect.cursor()
            cursor.execute(f"""SELECT people_short_otzv_1 FROM short_otz""")
            data_people_short_otzv_1 = cursor.fetchall()
            cursor.execute(f"""SELECT people_short_otzv_2 FROM short_otz""")
            data_people_short_otzv_2 = cursor.fetchall()
            cursor.execute(f"""SELECT people_short_otzv_3 FROM short_otz""")
            data_people_short_otzv_3 = cursor.fetchall()
            cursor.execute(f"""SELECT people_short_otzv_4 FROM short_otz""")
            data_people_short_otzv_4 = cursor.fetchall()
            try:
                y1 = data_people_short_otzv_1[0]
                y2 = data_people_short_otzv_2[0]
                y3 = data_people_short_otzv_3[0]
                y4 = data_people_short_otzv_4[0]
                plt.bar(1, y1)
                plt.bar(2, y2)
                plt.bar(3, y3)
                plt.bar(4, y4)
                plt.show()
            except:
                pass
        else:
            bot.send_message(message.chat.id, "–¢—ã –Ω–µ –∞–¥–º–∏–Ω!")


    def test_of_mechine(message):
        c_id = message.chat.id
        num_question = 0
        connect = sqlite3.connect('data_telegram.db')
        cursor = connect.cursor()
        cursor.execute(f"""SELECT num_no_machine FROM tests_no_num WHERE id = {c_id}""")
        data_tuple_machine = cursor.fetchone()
        try:
            data_machine = str(data_tuple_machine[0])

            if ("1" in data_machine) and ("2" in data_machine) and ("3" in data_machine) and ("4" in data_machine) and (
                    "5" in data_machine) and ("6" in data_machine) and ("7" in data_machine) and ("8" in data_machine) and ("9" in data_machine):
                bot.send_message(message.chat.id, "–í—ã —Ä–µ—à–∏–ª–∏ –≤—Å–µ —Ç–µ—Å—Ç—ã –ø–æ –¥–∞–Ω–Ω–æ–π —Ç–µ–º–µ!")
            else:
                while num_question == 0:
                    num = rn.randint(1, 9)
                    if num < 10 and (str(num) not in data_machine):
                        connect = sqlite3.connect('data_telegram.db')
                        cursor = connect.cursor()
                        num_question = num
                        data_machine += str(num_question)
                        cursor.execute(f"""UPDATE tests_no_num set num_no_machine={data_machine} WHERE id = {c_id}""")
                        connect.commit()
        except:
            send_welcome(message)

        if num_question == 1:
            q1 = "–ß—Ç–æ –∏–∑—É—á–∞–µ—Ç –∫–∏–Ω–µ–º–∞—Ç–∏–∫–∞?"
            answers1 = ["–ò–∑—É—á–∞–µ—Ç —Å–ø–æ—Å–æ–±—ã –æ–ø–∏—Å–∞–Ω–∏—è –¥–≤–∏–∂–µ–Ω–∏–π",
                        "–ò–∑—É—á–∞–µ—Ç –ø—Ä–∏—á–∏–Ω—ã –¥–≤–∏–∂–µ–Ω–∏–π",
                        "–ù–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞"]
            markup = types.InlineKeyboardMarkup(row_width=1)
            true_item = types.InlineKeyboardButton("‚úÖ", callback_data="‚úÖ", one_time_keyboard=True)
            markup.add(true_item)
            bot.send_poll(chat_id=c_id, question=q1, options=answers1, type=Poll.QUIZ, correct_option_id=0,
                          reply_markup=markup)
            connect = sqlite3.connect('data_telegram.db')
            cursor = connect.cursor()
            people_user_id = message.chat.id
            cursor.execute(f"""SELECT n FROM telegram_users WHERE id = {people_user_id}""")
            n_data = cursor.fetchone()
            n = int(n_data[0]) + 1
            cursor.execute(f"""Update telegram_users set n = {n} where id = {people_user_id}""")
            connect.commit()


        elif num_question == 2:
            q2 = "–ß—Ç–æ –∏–∑—É—á–∞–µ—Ç –¥–∏–Ω–∞–º–∏–∫–∞?"
            answers2 = ["–ò–∑—É—á–∞–µ—Ç —Å–ø–æ—Å–æ–±—ã –æ–ø–∏—Å–∞–Ω–∏—è –¥–≤–∏–∂–µ–Ω–∏–π", "–ò–∑—É—á–∞–µ—Ç –ø—Ä–∏—á–∏–Ω—ã –¥–≤–∏–∂–µ–Ω–∏–π",
                        "–ù–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞"]
            markup = types.InlineKeyboardMarkup(row_width=1)
            true_item = types.InlineKeyboardButton("‚úÖ", callback_data="‚úÖ", one_time_keyboard=True)
            markup.add(true_item)
            bot.send_poll(chat_id=c_id, question=q2, options=answers2, type=Poll.QUIZ, correct_option_id=1,
                          reply_markup=markup)
            connect = sqlite3.connect('data_telegram.db')
            cursor = connect.cursor()
            people_user_id = message.chat.id
            cursor.execute(f"""SELECT n FROM telegram_users WHERE id = {people_user_id}""")
            n_data = cursor.fetchone()
            n = int(n_data[0]) + 1
            cursor.execute(f"""Update telegram_users set n = {n} where id = {people_user_id}""")
            connect.commit()

        elif num_question == 3:
            q3 = "–§–æ—Ä–º—É–ª–∞ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–π —ç–Ω–µ—Ä–≥–∏–∏?"
            answers3 = ["E=FS", "E=mgh", "E=mv^2/2", "–ù–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞"]
            markup = types.InlineKeyboardMarkup(row_width=1)
            true_item = types.InlineKeyboardButton("‚úÖ", callback_data="‚úÖ", one_time_keyboard=True)
            markup.add(true_item)
            bot.send_poll(chat_id=c_id, question=q3, options=answers3, type=Poll.QUIZ, correct_option_id=1,
                          reply_markup=markup)
            connect = sqlite3.connect('data_telegram.db')
            cursor = connect.cursor()
            people_user_id = message.chat.id
            cursor.execute(f"""SELECT n FROM telegram_users WHERE id = {people_user_id}""")
            n_data = cursor.fetchone()
            n = int(n_data[0]) + 1
            cursor.execute(f"""Update telegram_users set n = {n} where id = {people_user_id}""")
            connect.commit()

        elif num_question == 4:
            q4 = "–§–æ—Ä–º—É–ª–∞ –∫–∏–Ω–µ—Ç–∏—á–µ—Å–∫–æ–π —ç–Ω–µ—Ä–≥–∏–∏?"
            answers4 = ["E=mv^2/2", "E=mgh", "E=mv", "E=FS"]
            markup = types.InlineKeyboardMarkup(row_width=1)
            true_item = types.InlineKeyboardButton("‚úÖ", callback_data="‚úÖ", one_time_keyboard=True)
            markup.add(true_item)
            bot.send_poll(chat_id=c_id, question=q4, options=answers4, type=Poll.QUIZ, correct_option_id=0,
                          reply_markup=markup)
            connect = sqlite3.connect('data_telegram.db')
            cursor = connect.cursor()
            people_user_id = message.chat.id
            cursor.execute(f"""SELECT n FROM telegram_users WHERE id = {people_user_id}""")
            n_data = cursor.fetchone()
            n = int(n_data[0]) + 1
            cursor.execute(f"""Update telegram_users set n = {n} where id = {people_user_id}""")
            connect.commit()

        elif num_question == 5:
            q5 = "–ß—Ç–æ —Ç–∞–∫–æ–µ —É—Å–∫–æ—Ä–µ–Ω–∏–µ?"
            answers5 = ["–§–∏–∑–∏—á–µ—Å–∫–∞—è –≤–µ–ª–∏—á–∏–Ω–∞, —Ö–∞—Ä–∞–∫—Ç–µ—Ä–µ–∑—É—é—â–∞—è –±—ã—Å—Ç—Ä–æ—Ç—É –∏–∑–º–µ–Ω–µ–Ω–∏—è —ç–Ω–µ—Ä–≥–∏–∏",
                        "–§–∏–∑–∏—á–µ—Å–∫–∞—è –≤–µ–ª–∏—á–∏–Ω–∞, —Ö–∞—Ä–∞–∫—Ç–µ—Ä–µ–∑—É—é—â–∞—è –±—ã—Å—Ç—Ä–æ—Ç—É –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏",
                        "–§–∏–∑–∏—á–µ—Å–∫–∞—è –≤–µ–ª–∏—á–∏–Ω–∞, —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏–∑—É—é—â–∞—è –±—ã—Å—Ç—Ä–æ—Ç—É –∏–∑–º–µ–Ω–∏—è —Å–∫–æ—Ä–æ—Å—Ç–∏",
                        "–ù–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞"]
            markup = types.InlineKeyboardMarkup(row_width=1)
            true_item = types.InlineKeyboardButton("‚úÖ", callback_data="‚úÖ", one_time_keyboard=True)
            markup.add(true_item)
            bot.send_poll(chat_id=c_id, question=q5, options=answers5, type=Poll.QUIZ, correct_option_id=2,
                          reply_markup=markup)
            connect = sqlite3.connect('data_telegram.db')
            cursor = connect.cursor()
            people_user_id = message.chat.id
            cursor.execute(f"""SELECT n FROM telegram_users WHERE id = {people_user_id}""")
            n_data = cursor.fetchone()
            n = int(n_data[0]) + 1
            cursor.execute(f"""Update telegram_users set n = {n} where id = {people_user_id}""")
            connect.commit()

        elif num_question == 6:
            q6 = "–§–æ—Ä–º—É–ª–∞ —Ç—Ä–µ—Ç—å–µ–≥–æ –∑–∞–∫–æ–Ω–∞ –ù—å—é—Ç–æ–Ω–∞:"
            answers6 = ["F1= - F2", "F1=F2", "F1‚â†F2", "–ù–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞"]
            markup = types.InlineKeyboardMarkup(row_width=1)
            true_item = types.InlineKeyboardButton("‚úÖ", callback_data="‚úÖ", one_time_keyboard=True)
            markup.add(true_item)
            bot.send_poll(chat_id=c_id, question=q6, options=answers6, type=Poll.QUIZ, correct_option_id=0,
                          reply_markup=markup)
            connect = sqlite3.connect('data_telegram.db')
            cursor = connect.cursor()
            people_user_id = message.chat.id
            cursor.execute(f"""SELECT n FROM telegram_users WHERE id = {people_user_id}""")
            n_data = cursor.fetchone()
            n = int(n_data[0]) + 1
            cursor.execute(f"""Update telegram_users set n = {n} where id = {people_user_id}""")
            connect.commit()

        elif num_question == 7:
            q7 = "–§–æ—Ä–º—É–ª–∞ –≤—Ç–æ—Ä–æ–≥–æ –∑–∞–∫–æ–Ω–∞ –ù—å—é—Ç–æ–Ω–∞:"
            answers7 = ["F=mv", "F=gt", "F=mg", "F=ma"]
            markup = types.InlineKeyboardMarkup(row_width=1)
            true_item = types.InlineKeyboardButton("‚úÖ", callback_data="‚úÖ", one_time_keyboard=True)
            markup.add(true_item)
            bot.send_poll(chat_id=c_id, question=q7, options=answers7, type=Poll.QUIZ, correct_option_id=3,
                          reply_markup=markup)
            connect = sqlite3.connect('data_telegram.db')
            cursor = connect.cursor()
            people_user_id = message.chat.id
            cursor.execute(f"""SELECT n FROM telegram_users WHERE id = {people_user_id}""")
            n_data = cursor.fetchone()
            n = int(n_data[0]) + 1
            cursor.execute(f"""Update telegram_users set n = {n} where id = {people_user_id}""")
            connect.commit()

        elif num_question == 8:
            q8 = "–ß—Ç–æ —Ç–∞–∫–æ–µ –∏–º–ø—É–ª—å—Å?"
            answers8 = ["–í–µ–ª–∏—á–∏–Ω–∞, —Ä–∞–≤–Ω–∞—è –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—é —Å–∏–ª—ã, –¥–µ–π—Å—Ç–≤—É—é—â–µ–π –Ω–∞ —Ç–µ–ª–æ –∏ –µ–≥–æ —Å–∫–æ—Ä–æ—Å—Ç–∏",
                        "–í–µ–ª–∏—á–∏–Ω–∞, —Ä–∞–≤–Ω–∞—è –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—é –º–∞—Å—Å—ã —Ç–µ–ª–∞ –∏ –µ–≥–æ —Å–∫–æ—Ä–æ—Å—Ç–∏",
                        "–í–µ–ª–∏—á–∏–Ω–∞, —Ä–∞–≤–Ω–∞—è –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—é –º–∞—Å—Å—ã —Ç–µ–ª–∞ –∏ –µ–≥–æ —Å–∏–ª—ã, –¥–µ–π—Å—Ç–≤—É—é—â–µ–π –Ω–∞ —Ç–µ–ª–æ",
                        "–ù–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞"]
            markup = types.InlineKeyboardMarkup(row_width=1)
            true_item = types.InlineKeyboardButton("‚úÖ", callback_data="‚úÖ", one_time_keyboard=True)
            markup.add(true_item)
            bot.send_poll(chat_id=c_id, question=q8, options=answers8, type=Poll.QUIZ, correct_option_id=1,
                          reply_markup=markup)
            connect = sqlite3.connect('data_telegram.db')
            cursor = connect.cursor()
            people_user_id = message.chat.id
            cursor.execute(f"""SELECT n FROM telegram_users WHERE id = {people_user_id}""")
            n_data = cursor.fetchone()
            n = int(n_data[0]) + 1
            cursor.execute(f"""Update telegram_users set n = {n} where id = {people_user_id}""")
            connect.commit()

        elif num_question == 9:
            q9 = "–ö–∞–∫–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ –Ω–∞–∑—ã–≤–∞—é—Ç —Ä–∞–≤–Ω–æ–º–µ—Ä–Ω—ã–º?"
            answers9 = ["–î–≤–∏–∂–µ–Ω–∏–µ, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–º —Ç–µ–ª–æ –¥–≤–∏–∂–µ—Ç—Å—è –±–µ–∑ –æ—Å—Ç–∞–Ω–æ–≤–æ–∫",
                        "–î–≤–∏–∂–µ–Ω–∏–µ, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–º –∑–∞ —Ä–∞–≤–Ω—ã–µ –ø—Ä–æ–º–µ–∂—É—Ç–∫–∏ –≤—Ä–µ–º–µ–Ω–∏ —Ç–µ–ª–æ –ø—Ä–æ—Ö–æ–¥–∏—Ç —Ä–∞–≤–Ω—ã–µ –ø—É—Ç–∏",
                        "–î–≤–∏–∂–µ–Ω–∏–µ, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–º —Ç–µ–ª–æ –¥–≤–∏–∂–µ—Ç—Å—è –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –ø–æ –ø—Ä—è–º–æ–π —Ç—Ä–∞–∫—Ç–æ—Ä–∏–∏"]
            markup = types.InlineKeyboardMarkup(row_width=1)
            true_item = types.InlineKeyboardButton("‚úÖ", callback_data="‚úÖ", one_time_keyboard=True)
            markup.add(true_item)
            bot.send_poll(chat_id=c_id, question=q9, options=answers9, type=Poll.QUIZ, correct_option_id=1,
                          reply_markup=markup)
            connect = sqlite3.connect('data_telegram.db')
            cursor = connect.cursor()
            people_user_id = message.chat.id
            cursor.execute(f"""SELECT n FROM telegram_users WHERE id = {people_user_id}""")
            n_data = cursor.fetchone()
            n = int(n_data[0]) + 1
            cursor.execute(f"""Update telegram_users set n = {n} where id = {people_user_id}""")
            connect.commit()

        # –Ω–æ–≤—ã–µ —Ç–µ—Å—Ç—ã
        elif num_question == 10:
            q10 = "–ö–∞–∫ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è —è–≤–ª–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ñ–æ—Ä–º—ã –∏–ª–∏ –æ–±—ä—ë–º–∞ —Ç–µ–ª–∞?"
            answers10 = ["–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–∞–≤–∞ –≤–µ—â–µ—Å—Ç–≤–∞",
                         "–î–µ—Ñ–æ—Ä–º–∞—Ü–∏—è",
                         "–ò–∑–º–µ–Ω–µ–Ω–∏–µ –∞–≥—Ä–µ–≥–∞—Ç–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤–µ—â–µ—Å—Ç–≤–∞"]
            markup = types.InlineKeyboardMarkup(row_width=1)
            true_item = types.InlineKeyboardButton("‚úÖ", callback_data="‚úÖ", one_time_keyboard=True)
            markup.add(true_item)
            bot.send_poll(chat_id=c_id, question=q10, options=answers10, type=Poll.QUIZ, correct_option_id=1,
                          reply_markup=markup)
            connect = sqlite3.connect('data_telegram.db')
            cursor = connect.cursor()
            people_user_id = message.chat.id
            cursor.execute(f"""SELECT n FROM telegram_users WHERE id = {people_user_id}""")
            n_data = cursor.fetchone()
            n = int(n_data[0]) + 1
            cursor.execute(f"""Update telegram_users set n = {n} where id = {people_user_id}""")
            connect.commit()

        elif num_question == 11:
            q11 = "–ß—Ç–æ —Ç–∞–∫–æ–µ –ö–ü–î?"
            answers11 = [
                "–≠—Ç–æ –≤–µ–∫—Ç–æ—Ä–Ω–∞—è —Ñ–∏–∑–∏—á–µ—Å–∫–∞—è –≤–µ–ª–∏—á–∏–Ω–∞, —á–∏—Å–ª–µ–Ω–Ω–æ —Ä–∞–≤–Ω–∞—è –æ—Ç–Ω–æ—à–µ–Ω–∏—é –ø–æ–ª–µ–∑–Ω–æ–π —Ä–∞–±–æ—Ç—ã –∫ –∑–∞—Ç—Ä–∞—á–µ–Ω–Ω–æ–π –≤ —Å–∏—Å—Ç–µ–º–µ",
                "–≠—Ç–æ —Å–∫–∞–ª—è—Ä–Ω–∞—è —Ñ–∏–∑–∏—á–µ—Å–∫–∞—è –≤–µ–ª–∏—á–∏–Ω–∞, —á–∏—Å–ª–µ–Ω–Ω–æ —Ä–∞–≤–Ω–∞—è –æ—Ç–Ω–æ—à–µ–Ω–∏—é –∑–∞—Ç—Ä–∞—á–µ–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã –∫ –ø–æ–ª–µ–∑–Ω–æ–π –≤ —Å–∏—Å—Ç–µ–º–µ",
                "–≠—Ç–æ —Å–∫–∞–ª—è—Ä–Ω–∞—è —Ñ–∏–∑–∏—á–µ—Å–∫–∞—è –≤–µ–ª–∏—á–∏–Ω–∞, —á–∏—Å–ª–µ–Ω–Ω–æ —Ä–∞–≤–Ω–∞—è –æ—Ç–Ω–æ—à–µ–Ω–∏—é –ø–æ–ª–µ–∑–Ω–æ–π —Ä–∞–±–æ—Ç—ã –∫ –∑–∞—Ç—Ä–∞—á–µ–Ω–Ω–æ–π –≤ —Å–∏—Å—Ç–µ–º–µ"]
            markup = types.InlineKeyboardMarkup(row_width=1)
            true_item = types.InlineKeyboardButton("‚úÖ", callback_data="‚úÖ", one_time_keyboard=True)
            markup.add(true_item)
            bot.send_poll(chat_id=c_id, question=q11, options=answers11, type=Poll.QUIZ, correct_option_id=2,
                          reply_markup=markup)
            connect = sqlite3.connect('data_telegram.db')
            cursor = connect.cursor()
            people_user_id = message.chat.id
            cursor.execute(f"""SELECT n FROM telegram_users WHERE id = {people_user_id}""")
            n_data = cursor.fetchone()
            n = int(n_data[0]) + 1
            cursor.execute(f"""Update telegram_users set n = {n} where id = {people_user_id}""")
            connect.commit()

        elif num_question == 12:
            q12 = "–ß—Ç–æ —Ç–∞–∫–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ?"
            answers12 = ["–≠—Ç–æ —Ñ–∏–∑–∏—á–µ—Å–∫–∞—è –≤–µ–ª–∏—á–∏–Ω–∞, —Ä–∞–≤–Ω–∞—è –æ—Ç–Ω–æ—à–µ–Ω–∏—é —Å–∏–ª—ã –¥–∞–≤–ª–µ–Ω–∏—è F –∫ –ø–ª–æ—â–∞–¥–∏ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏ S",
                         "–≠—Ç–æ —Ñ–∏–∑–∏—á–µ—Å–∞—è –≤–µ–ª–∏—á–∏–Ω–∞, —Ä–∞–≤–Ω–∞—è –æ—Ç–Ω–æ—à–µ–Ω–∏—é –ø–ª–æ—â–∞–¥–∏ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏ S –∫ —Å–∏–ª–µ –¥–∞–≤–ª–µ–Ω–∏—è F",
                         "–ù–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞"]
            markup = types.InlineKeyboardMarkup(row_width=1)
            true_item = types.InlineKeyboardButton("‚úÖ", callback_data="‚úÖ", one_time_keyboard=True)
            markup.add(true_item)
            bot.send_poll(chat_id=c_id, question=q12, options=answers12, type=Poll.QUIZ, correct_option_id=0,
                          reply_markup=markup)
            connect = sqlite3.connect('data_telegram.db')
            cursor = connect.cursor()
            people_user_id = message.chat.id
            cursor.execute(f"""SELECT n FROM telegram_users WHERE id = {people_user_id}""")
            n_data = cursor.fetchone()
            n = int(n_data[0]) + 1
            cursor.execute(f"""Update telegram_users set n = {n} where id = {people_user_id}""")
            connect.commit()

        elif num_question == 13:
            q13 = "–ß—Ç–æ —Ç–∞–∫–æ–µ —Å–∏–ª–∞ –ê—Ä—Ö–∏–º–µ–¥–∞?"
            answers13 = ["–≠—Ç–æ —Å–∏–ª–∞, —Å—Ç—Ä–µ–º—è—â–µ–µ—Å—è –≤—Ç—è–Ω—É—Ç—å —Ç–µ–ª–æ –≤ –≤–æ–¥—É",
                         "–≠—Ç–æ —Å–∏–ª–∞, —Å—Ç—Ä–µ–º—è—â–µ–µ—Å—è –≤—ã—Ç—è–Ω—É—Ç—å —Ç–µ–ª–æ –∏–∑ –≤–æ–¥—ã",
                         "–≠—Ç–æ —Å–∏–ª–∞, —Å—Ç—Ä–µ–º—è—â–µ–µ—Å—è —Ä–∞—Å—Ç—è–Ω—É—Ç—å —Ç–µ–ª–æ –ø–æ –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏ –≤–æ–¥—ã",
                         "–ù–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞"]
            markup = types.InlineKeyboardMarkup(row_width=1)
            true_item = types.InlineKeyboardButton("‚úÖ", callback_data="‚úÖ", one_time_keyboard=True)
            markup.add(true_item)
            bot.send_poll(chat_id=c_id, question=q13, options=answers13, type=Poll.QUIZ, correct_option_id=1,
                          reply_markup=markup)
            connect = sqlite3.connect('data_telegram.db')
            cursor = connect.cursor()
            people_user_id = message.chat.id
            cursor.execute(f"""SELECT n FROM telegram_users WHERE id = {people_user_id}""")
            n_data = cursor.fetchone()
            n = int(n_data[0]) + 1
            cursor.execute(f"""Update telegram_users set n = {n} where id = {people_user_id}""")
            connect.commit()

        elif num_question == 14:
            q14 = "–í –∫–∞–∫–∏—Ö –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è—Ö –ø–µ—Ä–µ–¥–∞—ë—Ç—Å—è –¥–∞–≤–ª–µ–Ω–∏–µ –ø–æ–∫–æ—è—â–µ–π—Å—è –∂–∏–¥–∫–æ—Å—Ç–∏?"
            answers14 = ["–í–æ –≤—Å–µ—Ö",
                         "–ü–æ –Ω–∞–ø—Ä–∞–≤–µ–Ω–∏—é –∫ —Ü–µ–Ω—Ç—Ä—É",
                         "–ü–æ –∫–∞—Å–∞—Ç–µ–ª—å–Ω–æ–π –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –º–æ–ª–µ–∫—É–ª—ã",
                         "–í –∫–∞–∫–æ–º-—Ç–æ —Ö–∞–æ—Ç–∏—á–µ—Å–∫–æ–º –æ–¥–Ω–æ–º",
                         "–ù–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞"]
            markup = types.InlineKeyboardMarkup(row_width=1)
            true_item = types.InlineKeyboardButton("‚úÖ", callback_data="‚úÖ", one_time_keyboard=True)
            markup.add(true_item)
            bot.send_poll(chat_id=c_id, question=q14, options=answers14, type=Poll.QUIZ, correct_option_id=0,
                          reply_markup=markup)
            connect = sqlite3.connect('data_telegram.db')
            cursor = connect.cursor()
            people_user_id = message.chat.id
            cursor.execute(f"""SELECT n FROM telegram_users WHERE id = {people_user_id}""")
            n_data = cursor.fetchone()
            n = int(n_data[0]) + 1
            cursor.execute(f"""Update telegram_users set n = {n} where id = {people_user_id}""")
            connect.commit()


    def test_of_tepl(message):
        c_id = message.chat.id
        num_question = 0
        connect = sqlite3.connect('data_telegram.db')
        cursor = connect.cursor()
        cursor.execute(f"""SELECT num_no_tepl FROM tests_no_num WHERE id = {c_id}""")
        data_tuple_tepl = cursor.fetchone()
        try:
            data_tepl = str(data_tuple_tepl[0])

            if ("1" in data_tepl) and ("2" in data_tepl) and ("3" in data_tepl) and ("4" in data_tepl) and ("5" in data_tepl) and (
                    "6" in data_tepl) and ("7" in data_tepl) and ("8" in data_tepl) and ("9" in data_tepl):
                bot.send_message(message.chat.id, "–í—ã —Ä–µ—à–∏–ª–∏ –≤—Å–µ —Ç–µ—Å—Ç—ã –ø–æ –¥–∞–Ω–Ω–æ–π —Ç–µ–º–µ!")
            else:
                while num_question == 0:
                    num = rn.randint(1, 9)
                    if num < 10 and (str(num) not in data_tepl):
                        connect = sqlite3.connect('data_telegram.db')
                        cursor = connect.cursor()
                        num_question = num
                        data_tepl += str(num_question)
                        cursor.execute(f"""UPDATE tests_no_num set num_no_tepl={data_tepl} WHERE id = {c_id}""")
                        connect.commit()
        except:
            send_welcome(message)

        if num_question == 1:
            q1 = "–ö–∞–∫ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–æ—Ü–µ—Å—Å –ø–µ—Ä–µ–¥–∞—á–∏ —ç–Ω–µ—Ä–≥–∏–∏ –æ—Ç –æ–¥–Ω–æ–≥–æ —Ç–µ–ª–∞ –∫ –¥—Ä—É–≥–æ–º—É –∏–ª–∏ –æ—Ç –æ–¥–Ω–æ–π —á–∞—Å—Ç–∏ —Ç–µ–ª–∞ –∫ –¥—Ä—É–≥–æ–π –±–ª–∞–≥–æ–¥–∞—Ä—è —Ç–µ–ø–ª–æ–≤–æ–º—É –¥–≤–∏–∂–µ–Ω–∏—é —á–∞—Å—Ç–∏—Ü?"
            answers1 = ["–¢–µ–ø–ª–æ–æ—Ç–¥–∞—á–∞",
                        "–¢–µ–ø–ª–æ–ø—Ä–æ–≤–æ–¥–Ω–æ—Å—Ç—å",
                        "–¢–µ–ø–ª–æ–æ–±–º–µ–Ω"]
            markup = types.InlineKeyboardMarkup(row_width=1)
            true_item = types.InlineKeyboardButton("‚úÖ", callback_data="‚úÖ", one_time_keyboard=True)
            markup.add(true_item)
            bot.send_poll(chat_id=c_id, question=q1, options=answers1, type=Poll.QUIZ, correct_option_id=1,
                          reply_markup=markup)
            connect = sqlite3.connect('data_telegram.db')
            cursor = connect.cursor()
            people_user_id = message.chat.id
            cursor.execute(f"""SELECT n FROM telegram_users WHERE id = {people_user_id}""")
            n_data = cursor.fetchone()
            n = int(n_data[0]) + 1
            cursor.execute(f"""Update telegram_users set n = {n} where id = {people_user_id}""")
            connect.commit()


        elif num_question == 2:
            q2 = "–ö–∞–∫ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –≤–∏–¥ —Ç–µ–ø–ª–æ–ø–µ—Ä–µ–¥–∞—á–∏, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–º —ç–Ω–µ—Ä–≥–∏—è –ø–µ—Ä–µ–¥–∞—ë—Ç—Å—è —Å–ª–æ—è–º–∏ –∂–∏–¥–∫–æ—Å—Ç–∏ –∏–ª–∏ –≥–∞–∑–∞?"
            answers2 = ["–¢–µ–ø–ª–æ–æ–±–º–µ–Ω",
                        "–ò–∑–ª—É—á–µ–Ω–∏–µ",
                        "–ö–æ–Ω–≤–µ–∫—Ü–∏—è"]
            markup = types.InlineKeyboardMarkup(row_width=1)
            true_item = types.InlineKeyboardButton("‚úÖ", callback_data="‚úÖ", one_time_keyboard=True)
            markup.add(true_item)
            bot.send_poll(chat_id=c_id, question=q2, options=answers2, type=Poll.QUIZ, correct_option_id=2,
                          reply_markup=markup)
            connect = sqlite3.connect('data_telegram.db')
            cursor = connect.cursor()
            people_user_id = message.chat.id
            cursor.execute(f"""SELECT n FROM telegram_users WHERE id = {people_user_id}""")
            n_data = cursor.fetchone()
            n = int(n_data[0]) + 1
            cursor.execute(f"""Update telegram_users set n = {n} where id = {people_user_id}""")
            connect.commit()

        elif num_question == 3:
            q3 = "–ö–∞–∫ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –≤–∏–¥ —Ç–µ–ø–ª–æ–ø–µ—Ä–µ–¥–∞—á–∏, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–º –∏—Å–ø—É—Å–∫–∞–Ω–∏–µ –∏ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ —ç–Ω–µ—Ä–≥–∏–∏ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø—Ä–∏ –ø–æ–º–æ—â–∏ —ç–ª–µ–∫—Ç—Ä–æ–º–∞–≥–Ω–∏—Ç–Ω—ã—Ö –≤–æ–ª–Ω –∏ —ç–ª–µ–º–µ–Ω—Ç–∞—Ä–Ω—ã—Ö —á–∞—Å—Ç–∏—Ü?"
            answers3 = ["–ò–∑–ª—É—á–µ–Ω–∏–µ",
                        "–ö–æ–Ω–≤–µ–∫—Ü–∏—è",
                        "–¢–µ–ø–ª–æ–æ–±–º–µ–Ω"]
            markup = types.InlineKeyboardMarkup(row_width=1)
            true_item = types.InlineKeyboardButton("‚úÖ", callback_data="‚úÖ", one_time_keyboard=True)
            markup.add(true_item)
            bot.send_poll(chat_id=c_id, question=q3, options=answers3, type=Poll.QUIZ, correct_option_id=0,
                          reply_markup=markup)
            connect = sqlite3.connect('data_telegram.db')
            cursor = connect.cursor()
            people_user_id = message.chat.id
            cursor.execute(f"""SELECT n FROM telegram_users WHERE id = {people_user_id}""")
            n_data = cursor.fetchone()
            n = int(n_data[0]) + 1
            cursor.execute(f"""Update telegram_users set n = {n} where id = {people_user_id}""")
            connect.commit()

        elif num_question == 4:
            q = "–ü—Ä–∏—Ç—è–∂–µ–Ω–∏–µ –º–µ–∂–¥—É —á–∞—Å—Ç–∏—Ü–∞–º–∏ —Ç–≤—ë—Ä–¥–æ–≥–æ —Ç–µ–ª–∞?"
            answers = ["–°–∏–ª—å–Ω–æ–µ",
                       "–£–º–µ—Ä–µ–Ω–Ω–æ–µ",
                       "–°–ª–∞–±–æ–µ"]
            markup = types.InlineKeyboardMarkup(row_width=1)
            true_item = types.InlineKeyboardButton("‚úÖ", callback_data="‚úÖ", one_time_keyboard=True)
            markup.add(true_item)
            bot.send_poll(chat_id=c_id, question=q, options=answers, type=Poll.QUIZ, correct_option_id=0,
                          reply_markup=markup)
            connect = sqlite3.connect('data_telegram.db')
            cursor = connect.cursor()
            people_user_id = message.chat.id
            cursor.execute(f"""SELECT n FROM telegram_users WHERE id = {people_user_id}""")
            n_data = cursor.fetchone()
            n = int(n_data[0]) + 1
            cursor.execute(f"""Update telegram_users set n = {n} where id = {people_user_id}""")
            connect.commit()

        elif num_question == 5:
            q = "–ü—Ä–∏—Ç—è–∂–µ–Ω–∏–µ –º–µ–∂–¥—É —á–∞—Å—Ç–∏—Ü–∞–º–∏ –∂–∏–¥–∫–æ—Å—Ç–∏?"
            answers = ["–°–∏–ª—å–Ω–æ–µ",
                       "–£–º–µ—Ä–µ–Ω–Ω–æ–µ",
                       "–°–ª–∞–±–æ–µ"]
            markup = types.InlineKeyboardMarkup(row_width=1)
            true_item = types.InlineKeyboardButton("‚úÖ", callback_data="‚úÖ", one_time_keyboard=True)
            markup.add(true_item)
            bot.send_poll(chat_id=c_id, question=q, options=answers, type=Poll.QUIZ, correct_option_id=1,
                          reply_markup=markup)
            connect = sqlite3.connect('data_telegram.db')
            cursor = connect.cursor()
            people_user_id = message.chat.id
            cursor.execute(f"""SELECT n FROM telegram_users WHERE id = {people_user_id}""")
            n_data = cursor.fetchone()
            n = int(n_data[0]) + 1
            cursor.execute(f"""Update telegram_users set n = {n} where id = {people_user_id}""")
            connect.commit()

        elif num_question == 6:
            q = "–ü—Ä–∏—Ç—è–∂–µ–Ω–∏–µ –º–µ–∂–¥—É —á–∞—Å—Ç–∏—Ü–∞–º–∏ –≥–∞–∑–∞?"
            answers = ["–°–∏–ª—å–Ω–æ–µ",
                       "–£–º–µ—Ä–µ–Ω–Ω–æ–µ",
                       "–°–ª–∞–±–æ–µ"]
            markup = types.InlineKeyboardMarkup(row_width=1)
            true_item = types.InlineKeyboardButton("‚úÖ", callback_data="‚úÖ", one_time_keyboard=True)
            markup.add(true_item)
            bot.send_poll(chat_id=c_id, question=q, options=answers, type=Poll.QUIZ, correct_option_id=2,
                          reply_markup=markup)
            connect = sqlite3.connect('data_telegram.db')
            cursor = connect.cursor()
            people_user_id = message.chat.id
            cursor.execute(f"""SELECT n FROM telegram_users WHERE id = {people_user_id}""")
            n_data = cursor.fetchone()
            n = int(n_data[0]) + 1
            cursor.execute(f"""Update telegram_users set n = {n} where id = {people_user_id}""")
            connect.commit()

        elif num_question == 7:
            q = "–ß—Ç–æ —Ç–∞–∫–æ–µ –¥–∏—Ñ—É–∑–∏—è?"
            answers = ["–Ø–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è –º–æ–ª–µ–∫—É–ª –æ–¥–Ω–æ–≥–æ –≤–µ—â–µ—Å—Ç–≤–∞ –≤ –ø—Ä–æ–º–µ–∂—É—Ç–∫–∏ –º–µ–∂–¥—É –º–æ–ª–µ–∫—É–ª–∞–º–∏ –¥—Ä—É–≥–æ–≥–æ –≤–µ—â–µ—Å—Ç–≤–∞",
                       "–Ø–≤–ª–µ–Ω–∏–µ –Ω–µ–ø—Ä–æ–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è –º–æ–ª–µ–∫—É–ª –æ–¥–Ω–æ–≥–æ –≤–µ—â–µ—Å—Ç–≤–∞ –≤ –ø—Ä–æ–º–µ–∂—É—Ç–∫–∏ –º–µ–∂–¥—É –º–æ–ª–µ–∫—É–ª–∞–º–∏ –¥—Ä—É–≥–æ–≥–æ –≤–µ—â–µ—Å—Ç–≤–∞",
                       "–°–≤–æ–π—Å—Ç–≤–æ –º–æ–ª–µ–∫—É–ª –æ–¥–Ω–æ–≥–æ –≤–µ—â–µ—Å—Ç–≤–∞ –ø—Ä–æ–Ω–∏–∫–∞—Ç—å –≤ –º–æ–ª–µ–∫—É–ª—ã –¥—Ä—É–≥–æ–≥–æ –≤–µ—â–µ—Å—Ç–≤–∞"]
            markup = types.InlineKeyboardMarkup(row_width=1)
            true_item = types.InlineKeyboardButton("‚úÖ", callback_data="‚úÖ", one_time_keyboard=True)
            markup.add(true_item)
            bot.send_poll(chat_id=c_id, question=q, options=answers, type=Poll.QUIZ, correct_option_id=0,
                          reply_markup=markup)
            connect = sqlite3.connect('data_telegram.db')
            cursor = connect.cursor()
            people_user_id = message.chat.id
            cursor.execute(f"""SELECT n FROM telegram_users WHERE id = {people_user_id}""")
            n_data = cursor.fetchone()
            n = int(n_data[0]) + 1
            cursor.execute(f"""Update telegram_users set n = {n} where id = {people_user_id}""")
            connect.commit()

        elif num_question == 8:
            q = "–§–æ—Ä–º—É–ª–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–µ–ø–ª–æ—Ç—ã:"
            answers = ["Q = Lm",
                       "Q = qm",
                       "Q = cm(t2-t1)",
                       "Q = qm(t2-t1)",
                       "Q = cm",
                       "–ù–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞"]
            markup = types.InlineKeyboardMarkup(row_width=1)
            true_item = types.InlineKeyboardButton("‚úÖ", callback_data="‚úÖ", one_time_keyboard=True)
            markup.add(true_item)
            bot.send_poll(chat_id=c_id, question=q, options=answers, type=Poll.QUIZ, correct_option_id=2,
                          reply_markup=markup)
            connect = sqlite3.connect('data_telegram.db')
            cursor = connect.cursor()
            people_user_id = message.chat.id
            cursor.execute(f"""SELECT n FROM telegram_users WHERE id = {people_user_id}""")
            n_data = cursor.fetchone()
            n = int(n_data[0]) + 1
            cursor.execute(f"""Update telegram_users set n = {n} where id = {people_user_id}""")
            connect.commit()

        elif num_question == 9:
            q = "–ß—Ç–æ —Ç–∞–∫–æ–µ —Ç–µ–ø–ª–æ–≤—ã–µ –¥–≤–∏–≥–∞—Ç–µ–ª–∏?"
            answers = ["–£—Å—Ç—Ä–æ–π—Å—Ç–≤–∞, —É–≤–µ–ª–∏—á–∏–≤–∞—é—â–∏–µ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—é—é —ç–Ω–µ—Ä–≥–∏—é –∑–∞ —Å—á—ë—Ç —Å–æ–≤–µ—Ä—à–µ–Ω–∏—è –º–µ—Ö–∞–Ω–∏—á–µ—Å–∫–æ–π —Ä–∞–±–æ—Ç—ã",
                       "–£—Å—Ç—Ä–æ–π—Å—Ç–≤–∞, –ö–ü–î –∫–æ—Ç–æ—Ä—ã—Ö —Ä–∞–≤–µ–Ω 80%",
                       "–£—Å—Ç—Ä–æ–π—Å—Ç–≤–∞, —Å–æ–≤–µ—Ä—à–∞—é—â–∏–µ –º–µ—Ö–∞–Ω–∏—á–µ—Å–∫—É—é —Ä–∞–±–æ—Ç—É –∑–∞ —Å—á—ë—Ç –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π —ç–Ω–µ—Ä–≥–∏–∏ —Ç–æ–ø–ª–∏–≤–∞"]
            markup = types.InlineKeyboardMarkup(row_width=1)
            true_item = types.InlineKeyboardButton("‚úÖ", callback_data="‚úÖ", one_time_keyboard=True)
            markup.add(true_item)
            bot.send_poll(chat_id=c_id, question=q, options=answers, type=Poll.QUIZ, correct_option_id=2,
                          reply_markup=markup)
            connect = sqlite3.connect('data_telegram.db')
            cursor = connect.cursor()
            people_user_id = message.chat.id
            cursor.execute(f"""SELECT n FROM telegram_users WHERE id = {people_user_id}""")
            n_data = cursor.fetchone()
            n = int(n_data[0]) + 1
            cursor.execute(f"""Update telegram_users set n = {n} where id = {people_user_id}""")
            connect.commit()

        # –Ω–æ–≤—ã–µ —Ç–µ—Å—Ç—ã
        elif num_question == 10:
            q = "–§–æ—Ä–º—É–ª–∞ –¥–ª—è –∏—Å–ø–∞—Ä–µ–Ω–∏—è –∏ –∫–æ–Ω–¥–µ–Ω—Å–∞—Ü–∏–∏:"
            answers = ["Q = Lm",
                       "Q = qm",
                       "Q = cm(t2-t1)",
                       "Q = qm(t2-t1)",
                       "Q = cm",
                       "–ù–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞"]
            markup = types.InlineKeyboardMarkup(row_width=1)
            true_item = types.InlineKeyboardButton("‚úÖ", callback_data="‚úÖ", one_time_keyboard=True)
            markup.add(true_item)
            bot.send_poll(chat_id=c_id, question=q, options=answers, type=Poll.QUIZ, correct_option_id=0,
                          reply_markup=markup)
            connect = sqlite3.connect('data_telegram.db')
            cursor = connect.cursor()
            people_user_id = message.chat.id
            cursor.execute(f"""SELECT n FROM telegram_users WHERE id = {people_user_id}""")
            n_data = cursor.fetchone()
            n = int(n_data[0]) + 1
            cursor.execute(f"""Update telegram_users set n = {n} where id = {people_user_id}""")
            connect.commit()

        elif num_question == 11:
            q = "–§–æ—Ä–º—É–ª–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–µ–ø–ª–æ—Ç—ã, –≤—ã–¥–µ–ª—è–µ–º–æ–µ –ø—Ä–∏ —Å–≥–æ—Ä–∞–Ω–∏–∏ —Ç–æ–ø–ª–∏–≤–∞:"
            answers = ["Q = Lm",
                       "Q = qm",
                       "Q = cm(t2-t1)",
                       "Q = qm(t2-t1)",
                       "Q = cm",
                       "–ù–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞"]
            markup = types.InlineKeyboardMarkup(row_width=1)
            true_item = types.InlineKeyboardButton("‚úÖ", callback_data="‚úÖ", one_time_keyboard=True)
            markup.add(true_item)
            bot.send_poll(chat_id=c_id, question=q, options=answers, type=Poll.QUIZ, correct_option_id=1,
                          reply_markup=markup)
            connect = sqlite3.connect('data_telegram.db')
            cursor = connect.cursor()
            people_user_id = message.chat.id
            cursor.execute(f"""SELECT n FROM telegram_users WHERE id = {people_user_id}""")
            n_data = cursor.fetchone()
            n = int(n_data[0]) + 1
            cursor.execute(f"""Update telegram_users set n = {n} where id = {people_user_id}""")
            connect.commit()


    def test_of_elctr(message):
        c_id = message.chat.id
        num_question = 0
        connect = sqlite3.connect('data_telegram.db')
        cursor = connect.cursor()
        cursor.execute(f"""SELECT num_no_el FROM tests_no_num WHERE id = {c_id}""")
        data_tuple_el = cursor.fetchone()
        try:
            data_el = str(data_tuple_el[0])

            if ("1" in data_el) and ("2" in data_el) and ("3" in data_el) and ("4" in data_el) and ("5" in data_el) and ("6" in data_el) and (
                    "7" in data_el) and ("8" in data_el) and ("9" in data_el):
                bot.send_message(message.chat.id, "–í—ã —Ä–µ—à–∏–ª–∏ –≤—Å–µ —Ç–µ—Å—Ç—ã –ø–æ –¥–∞–Ω–Ω–æ–π —Ç–µ–º–µ!")
            else:
                while num_question == 0:
                    num = rn.randint(1, 9)
                    if num < 10 and (str(num) not in data_el):
                        connect = sqlite3.connect('data_telegram.db')
                        cursor = connect.cursor()
                        num_question = num
                        data_el += str(num_question)
                        cursor.execute(f"""UPDATE tests_no_num set num_no_el = {data_el} WHERE id = {c_id}""")
                        connect.commit()
        except:
            send_welcome(message)


        if num_question == 1:
            q = "–ü—Ä–æ–≤–æ–¥–Ω–∏–∫–∏:"
            answers = ["–°–æ—Å—Ç–æ—è—Ç –∏–∑ –Ω–µ—Ç—Ä–∞–ª—å–Ω—ã—Ö –≤ —Ü–µ–ª–æ–º –∞—Ç–æ–º–æ–≤ –∏–ª–∏ –º–æ–ª–µ–∫—É–ª",
                       "–í—Å–µ –º–µ—Ç–∞–ª–ª—ã",
                       "–ù–µ –∏–º–µ—é—Ç –∑–∞—Ä—è–∂–µ–Ω–Ω—ã—Ö —á–∞—Å—Ç–∏—Ü"]
            markup = types.InlineKeyboardMarkup(row_width=1)
            true_item = types.InlineKeyboardButton("‚úÖ", callback_data="‚úÖ", one_time_keyboard=True)
            markup.add(true_item)
            bot.send_poll(chat_id=c_id, question=q, options=answers, type=Poll.QUIZ, correct_option_id=1,
                          reply_markup=markup)
            connect = sqlite3.connect('data_telegram.db')
            cursor = connect.cursor()
            people_user_id = message.chat.id
            cursor.execute(f"""SELECT n FROM telegram_users WHERE id = {people_user_id}""")
            n_data = cursor.fetchone()
            n = int(n_data[0]) + 1
            cursor.execute(f"""Update telegram_users set n = {n} where id = {people_user_id}""")
            connect.commit()

        elif num_question == 2:
            q = "–î–∏—ç–ª–µ–∫—Ç—Ä–∏–∫–∏:"
            answers = ["–í—Å–µ –º–µ—Ç–∞–ª–ª—ã",
                       "–ù–µ –∏–º–µ—é—Ç –∑–∞—Ä—è–∂–µ–Ω–Ω—ã—Ö —á–∞—Å—Ç–∏—Ü",
                       "–°–æ—Å—Ç–æ—è—Ç –∏–∑ –Ω–µ—Ç—Ä–∞–ª—å–Ω—ã—Ö –≤ —Ü–µ–ª–æ–º –∞—Ç–æ–º–æ–≤ –∏–ª–∏ –º–æ–ª–µ–∫—É–ª"]
            markup = types.InlineKeyboardMarkup(row_width=1)
            true_item = types.InlineKeyboardButton("‚úÖ", callback_data="‚úÖ", one_time_keyboard=True)
            markup.add(true_item)
            bot.send_poll(chat_id=c_id, question=q, options=answers, type=Poll.QUIZ, correct_option_id=2,
                          reply_markup=markup)
            connect = sqlite3.connect('data_telegram.db')
            cursor = connect.cursor()
            people_user_id = message.chat.id
            cursor.execute(f"""SELECT n FROM telegram_users WHERE id = {people_user_id}""")
            n_data = cursor.fetchone()
            n = int(n_data[0]) + 1
            cursor.execute(f"""Update telegram_users set n = {n} where id = {people_user_id}""")
            connect.commit()

        elif num_question == 3:
            q = "–ß—Ç–æ –Ω–∞–∑—ã–≤–∞—é—Ç –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–º —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏–º —Ç–æ–∫–æ–º?"
            answers = ["–•–∞–æ—Ç–∏—á–Ω–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ –∑–∞—Ä—è–∂–µ–Ω–Ω—ã—Ö —á–∞—Å—Ç–∏—Ü",
                       "–£–ø–æ—Ä—è–¥–æ—á–µ–Ω–Ω–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ –Ω–µ–∑–∞—Ä—è–∂–µ–Ω–Ω—ã—Ö —á–∞—Å—Ç–∏—Ü",
                       "–£–ø–æ—Ä—è–¥–æ—á–µ–Ω–Ω–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ –∑–∞—Ä—è–∂–µ–Ω–Ω—ã—Ö —á–∞—Å—Ç–∏—Ü",
                       "–ù–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞ –æ—Ç–≤–µ—Ç–∞"]
            markup = types.InlineKeyboardMarkup(row_width=1)
            true_item = types.InlineKeyboardButton("‚úÖ", callback_data="‚úÖ", one_time_keyboard=True)
            markup.add(true_item)
            bot.send_poll(chat_id=c_id, question=q, options=answers, type=Poll.QUIZ, correct_option_id=2,
                          reply_markup=markup)
            connect = sqlite3.connect('data_telegram.db')
            cursor = connect.cursor()
            people_user_id = message.chat.id
            cursor.execute(f"""SELECT n FROM telegram_users WHERE id = {people_user_id}""")
            n_data = cursor.fetchone()
            n = int(n_data[0]) + 1
            cursor.execute(f"""Update telegram_users set n = {n} where id = {people_user_id}""")
            connect.commit()

        elif num_question == 4:
            q = "–ö–∞–∫–∞—è –∏–∑ –∫–∞—Ä—Ç–∏–Ω–æ–∫(—Ñ–æ—Ä–º—É–ª) —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ñ–æ—Ä–º—É–ª–µ —Å–∏–ª—ã —Ç–æ–∫–∞?"
            a1 = open("—Ñ–æ—Ç–æ –¥–ª—è —Ç–µ—Å—Ç–∞/1.jpeg", "rb")
            bot.send_photo(message.chat.id, a1)
            a2 = open("—Ñ–æ—Ç–æ –¥–ª—è —Ç–µ—Å—Ç–∞/2.jpg", "rb")
            bot.send_photo(message.chat.id, a2)
            a3 = open("—Ñ–æ—Ç–æ –¥–ª—è —Ç–µ—Å—Ç–∞/3.jpg", "rb")
            bot.send_photo(message.chat.id, a3)
            answers = ["1",
                       "2",
                       "3",
                       "–ù–∏ –æ–¥–Ω–∞ –∏–∑ –Ω–∏–∂–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö"]
            markup = types.InlineKeyboardMarkup(row_width=1)
            true_item = types.InlineKeyboardButton("‚úÖ", callback_data="‚úÖ", one_time_keyboard=True)
            markup.add(true_item)
            bot.send_poll(chat_id=c_id, question=q, options=answers, type=Poll.QUIZ, correct_option_id=0,
                          reply_markup=markup)
            connect = sqlite3.connect('data_telegram.db')
            cursor = connect.cursor()
            people_user_id = message.chat.id
            cursor.execute(f"""SELECT n FROM telegram_users WHERE id = {people_user_id}""")
            n_data = cursor.fetchone()
            n = int(n_data[0]) + 1
            cursor.execute(f"""Update telegram_users set n = {n} where id = {people_user_id}""")
            connect.commit()

        elif num_question == 5:
            q = "–ö–∞–∫–∞—è –∏–∑ –∫–∞—Ä—Ç–∏–Ω–æ–∫(—Ñ–æ—Ä–º—É–ª) —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ñ–æ—Ä–º—É–ª–µ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è?"
            a1 = open("—Ñ–æ—Ç–æ –¥–ª—è —Ç–µ—Å—Ç–∞/1.jpeg", "rb")
            bot.send_photo(message.chat.id, a1)
            a2 = open("—Ñ–æ—Ç–æ –¥–ª—è —Ç–µ—Å—Ç–∞/2.jpg", "rb")
            bot.send_photo(message.chat.id, a2)
            a3 = open("—Ñ–æ—Ç–æ –¥–ª—è —Ç–µ—Å—Ç–∞/3.jpg", "rb")
            bot.send_photo(message.chat.id, a3)
            answers = ["1",
                       "2",
                       "3",
                       "–ù–∏ –æ–¥–Ω–∞ –∏–∑ –Ω–∏–∂–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö"]
            markup = types.InlineKeyboardMarkup(row_width=1)
            true_item = types.InlineKeyboardButton("‚úÖ", callback_data="‚úÖ", one_time_keyboard=True)
            markup.add(true_item)
            bot.send_poll(chat_id=c_id, question=q, options=answers, type=Poll.QUIZ, correct_option_id=1,
                          reply_markup=markup)
            connect = sqlite3.connect('data_telegram.db')
            cursor = connect.cursor()
            people_user_id = message.chat.id
            cursor.execute(f"""SELECT n FROM telegram_users WHERE id = {people_user_id}""")
            n_data = cursor.fetchone()
            n = int(n_data[0]) + 1
            cursor.execute(f"""Update telegram_users set n = {n} where id = {people_user_id}""")
            connect.commit()

        elif num_question == 6:
            q = "–ö–∞–∫–∞—è –∏–∑ –∫–∞—Ä—Ç–∏–Ω–æ–∫(—Ñ–æ—Ä–º—É–ª) —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ñ–æ—Ä–º—É–ª–µ —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏—è?"
            a1 = open("—Ñ–æ—Ç–æ –¥–ª—è —Ç–µ—Å—Ç–∞/1.jpeg", "rb")
            bot.send_photo(message.chat.id, a1)
            a2 = open("—Ñ–æ—Ç–æ –¥–ª—è —Ç–µ—Å—Ç–∞/2.jpg", "rb")
            bot.send_photo(message.chat.id, a2)
            a3 = open("—Ñ–æ—Ç–æ –¥–ª—è —Ç–µ—Å—Ç–∞/3.jpg", "rb")
            bot.send_photo(message.chat.id, a3)
            answers = ["1",
                       "2",
                       "3",
                       "–ù–∏ –æ–¥–Ω–∞ –∏–∑ –Ω–∏–∂–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö"]
            markup = types.InlineKeyboardMarkup(row_width=1)
            true_item = types.InlineKeyboardButton("‚úÖ", callback_data="‚úÖ", one_time_keyboard=True)
            markup.add(true_item)
            bot.send_poll(chat_id=c_id, question=q, options=answers, type=Poll.QUIZ, correct_option_id=2,
                          reply_markup=markup)
            connect = sqlite3.connect('data_telegram.db')
            cursor = connect.cursor()
            people_user_id = message.chat.id
            cursor.execute(f"""SELECT n FROM telegram_users WHERE id = {people_user_id}""")
            n_data = cursor.fetchone()
            n = int(n_data[0]) + 1
            cursor.execute(f"""Update telegram_users set n = {n} where id = {people_user_id}""")
            connect.commit()

        elif num_question == 7:
            q = "–ö–∞–∫–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–æ –Ω–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏?"
            a = open("—Ñ–æ—Ç–æ –¥–ª—è —Ç–µ—Å—Ç–∞/–ø–∞—Ä–∞–ª–ª.jpg", "rb")
            bot.send_photo(message.chat.id, a)
            answers = ["–ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–µ",
                       "–ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–µ",
                       "–ü—Ä—è–º–æ—É–≥–æ–ª—å–Ω–æ–µ"]
            markup = types.InlineKeyboardMarkup(row_width=1)
            true_item = types.InlineKeyboardButton("‚úÖ", callback_data="‚úÖ", one_time_keyboard=True)
            markup.add(true_item)
            bot.send_poll(chat_id=c_id, question=q, options=answers, type=Poll.QUIZ, correct_option_id=0,
                          reply_markup=markup)
            connect = sqlite3.connect('data_telegram.db')
            cursor = connect.cursor()
            people_user_id = message.chat.id
            cursor.execute(f"""SELECT n FROM telegram_users WHERE id = {people_user_id}""")
            n_data = cursor.fetchone()
            n = int(n_data[0]) + 1
            cursor.execute(f"""Update telegram_users set n = {n} where id = {people_user_id}""")
            connect.commit()

        elif num_question == 8:
            q = "–ö–∞–∫–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–æ –Ω–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏?"
            a = open("—Ñ–æ—Ç–æ –¥–ª—è —Ç–µ—Å—Ç–∞/–ø–æ—Å–ª–µ–¥.jpg", "rb")
            bot.send_photo(message.chat.id, a)
            answers = ["–ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–µ",
                       "–ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–µ",
                       "–ü—Ä—è–º–æ—É–≥–æ–ª—å–Ω–æ–µ"]
            markup = types.InlineKeyboardMarkup(row_width=1)
            true_item = types.InlineKeyboardButton("‚úÖ", callback_data="‚úÖ", one_time_keyboard=True)
            markup.add(true_item)
            bot.send_poll(chat_id=c_id, question=q, options=answers, type=Poll.QUIZ, correct_option_id=1,
                          reply_markup=markup)
            connect = sqlite3.connect('data_telegram.db')
            cursor = connect.cursor()
            people_user_id = message.chat.id
            cursor.execute(f"""SELECT n FROM telegram_users WHERE id = {people_user_id}""")
            n_data = cursor.fetchone()
            n = int(n_data[0]) + 1
            cursor.execute(f"""Update telegram_users set n = {n} where id = {people_user_id}""")
            connect.commit()

        elif num_question == 9:
            q = "–ö–∞–∫–∞—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ñ–æ—Ä–º—É–ª–µ —Ä–∞–±–æ—Ç—ã —Ç–æ–∫–∞?"
            a1 = open("—Ñ–æ—Ç–æ –¥–ª—è —Ç–µ—Å—Ç–∞/–¥–∂–æ—É–ª—å-–ª–µ–Ω—Ü.jpg", "rb")
            bot.send_photo(message.chat.id, a1)
            a2 = open("—Ñ–æ—Ç–æ –¥–ª—è —Ç–µ—Å—Ç–∞/—Ä–∞–±–æ—Ç–∞ —Ç–æ–∫–∞.jpeg", "rb")
            bot.send_photo(message.chat.id, a2)
            a3 = open("—Ñ–æ—Ç–æ –¥–ª—è —Ç–µ—Å—Ç–∞/–º–æ—â–Ω–æ—Å—Ç—å.jpeg", "rb")
            bot.send_photo(message.chat.id, a3)
            answers = ["1",
                       "2",
                       "3",
                       "–ù–∏ –æ–¥–Ω–∞"]
            markup = types.InlineKeyboardMarkup(row_width=1)
            true_item = types.InlineKeyboardButton("‚úÖ", callback_data="‚úÖ", one_time_keyboard=True)
            markup.add(true_item)
            bot.send_poll(chat_id=c_id, question=q, options=answers, type=Poll.QUIZ, correct_option_id=1,
                          reply_markup=markup)
            connect = sqlite3.connect('data_telegram.db')
            cursor = connect.cursor()
            people_user_id = message.chat.id
            cursor.execute(f"""SELECT n FROM telegram_users WHERE id = {people_user_id}""")
            n_data = cursor.fetchone()
            n = int(n_data[0]) + 1
            cursor.execute(f"""Update telegram_users set n = {n} where id = {people_user_id}""")
            connect.commit()

        # –Ω–æ–≤—ã–µ —Ç–µ—Å—Ç—ã
        elif num_question == 10:
            q = "–ö–∞–∫–∞—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ñ–æ—Ä–º—É–ª–µ –º–æ—â–Ω–æ—Å—Ç–∏ —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–æ–≥–æ —Ç–æ–∫–∞?"
            a1 = open("—Ñ–æ—Ç–æ –¥–ª—è —Ç–µ—Å—Ç–∞/–¥–∂–æ—É–ª—å-–ª–µ–Ω—Ü.jpg", "rb")
            bot.send_photo(message.chat.id, a1)
            a2 = open("—Ñ–æ—Ç–æ –¥–ª—è —Ç–µ—Å—Ç–∞/—Ä–∞–±–æ—Ç–∞ —Ç–æ–∫–∞.jpeg", "rb")
            bot.send_photo(message.chat.id, a2)
            a3 = open("—Ñ–æ—Ç–æ –¥–ª—è —Ç–µ—Å—Ç–∞/–º–æ—â–Ω–æ—Å—Ç—å.jpeg", "rb")
            bot.send_photo(message.chat.id, a3)
            answers = ["1",
                       "2",
                       "3",
                       "–ù–∏ –æ–¥–Ω–∞"]
            markup = types.InlineKeyboardMarkup(row_width=1)
            true_item = types.InlineKeyboardButton("‚úÖ", callback_data="‚úÖ", one_time_keyboard=True)
            markup.add(true_item)
            bot.send_poll(chat_id=c_id, question=q, options=answers, type=Poll.QUIZ, correct_option_id=2,
                          reply_markup=markup)
            connect = sqlite3.connect('data_telegram.db')
            cursor = connect.cursor()
            people_user_id = message.chat.id
            cursor.execute(f"""SELECT n FROM telegram_users WHERE id = {people_user_id}""")
            n_data = cursor.fetchone()
            n = int(n_data[0]) + 1
            cursor.execute(f"""Update telegram_users set n = {n} where id = {people_user_id}""")
            connect.commit()

        elif num_question == 11:
            q = "–ö–∞–∫–∞—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ñ–æ—Ä–º—É–ª–µ –∑–∞–∫–æ–Ω–∞ –î–∂–æ—É–ª—è-–õ–µ–Ω—Ü–∞?"
            a1 = open("—Ñ–æ—Ç–æ –¥–ª—è —Ç–µ—Å—Ç–∞/–¥–∂–æ—É–ª—å-–ª–µ–Ω—Ü.jpg", "rb")
            bot.send_photo(message.chat.id, a1)
            a2 = open("—Ñ–æ—Ç–æ –¥–ª—è —Ç–µ—Å—Ç–∞/—Ä–∞–±–æ—Ç–∞ —Ç–æ–∫–∞.jpeg", "rb")
            bot.send_photo(message.chat.id, a2)
            a3 = open("—Ñ–æ—Ç–æ –¥–ª—è —Ç–µ—Å—Ç–∞/–º–æ—â–Ω–æ—Å—Ç—å.jpeg", "rb")
            bot.send_photo(message.chat.id, a3)
            answers = ["1",
                       "2",
                       "3",
                       "–ù–∏ –æ–¥–Ω–∞"]
            markup = types.InlineKeyboardMarkup(row_width=1)
            true_item = types.InlineKeyboardButton("‚úÖ", callback_data="‚úÖ", one_time_keyboard=True)
            markup.add(true_item)
            bot.send_poll(chat_id=c_id, question=q, options=answers, type=Poll.QUIZ, correct_option_id=0,
                          reply_markup=markup)
            connect = sqlite3.connect('data_telegram.db')
            cursor = connect.cursor()
            people_user_id = message.chat.id
            cursor.execute(f"""SELECT n FROM telegram_users WHERE id = {people_user_id}""")
            n_data = cursor.fetchone()
            n = int(n_data[0]) + 1
            cursor.execute(f"""Update telegram_users set n = {n} where id = {people_user_id}""")
            connect.commit()


    def tests_of_kvant(message):
        c_id = message.chat.id
        num_question = 0
        connect = sqlite3.connect('data_telegram.db')
        cursor = connect.cursor()
        cursor.execute(f"""SELECT num_no_kvants FROM tests_no_num WHERE id = {c_id}""")
        data_tuple_kvants = cursor.fetchone()
        try:
            data_kvants = str(data_tuple_kvants[0])

            if ("1" in data_kvants) and ("2" in data_kvants) and ("3" in data_kvants) and ("4" in data_kvants):
                bot.send_message(message.chat.id, "–í—ã —Ä–µ—à–∏–ª–∏ –≤—Å–µ —Ç–µ—Å—Ç—ã –ø–æ –¥–∞–Ω–Ω–æ–π —Ç–µ–º–µ!")
            else:
                while num_question == 0:
                    num = rn.randint(1, 4)
                    if num < 5 and (str(num) not in data_kvants):
                        connect = sqlite3.connect('data_telegram.db')
                        cursor = connect.cursor()
                        num_question = num
                        data_kvants += str(num_question)
                        cursor.execute(f"""UPDATE tests_no_num set num_no_kvants={data_kvants} WHERE id = {c_id}""")
                        connect.commit()
            #print(data_kvants)
        except:
            send_welcome(message)

        if num_question == 1:
            q = "–ö–∞–∫–æ–π —É—á—ë–Ω—ã–π –æ–±–Ω–∞—Ä—É–∂–∏–ª —è–≤–ª–µ–Ω–∏–µ —Ä–∞–¥–∏–æ–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏?"
            answers = ["–ò—Å–∞–∞–∫ –ù—å—é—Ç–æ–Ω",
                       "–ú–∞–π–∫–ª –§–∞—Ä–∞–¥–µ–π",
                       "–ê–Ω—Ä–∏ –ë–µ–∫–∫–µ—Ä–µ–ª—å",
                       "–≠—Ä–Ω–µ—Å—Ç –†–µ–∑–µ—Ä—Ñ–æ—Ä–¥"]
            markup = types.InlineKeyboardMarkup(row_width=1)
            true_item = types.InlineKeyboardButton("‚úÖ", callback_data="‚úÖ", one_time_keyboard=True)
            markup.add(true_item)
            bot.send_poll(chat_id=c_id, question=q, options=answers, type=Poll.QUIZ, correct_option_id=2,
                          reply_markup=markup)
            connect = sqlite3.connect('data_telegram.db')
            cursor = connect.cursor()
            people_user_id = message.chat.id
            cursor.execute(f"""SELECT n FROM telegram_users WHERE id = {people_user_id}""")
            n_data = cursor.fetchone()
            n = int(n_data[0]) + 1
            cursor.execute(f"""Update telegram_users set n = {n} where id = {people_user_id}""")
            connect.commit()

        elif num_question == 2:
            q = "–ù–∞ –∫–∞–∫–æ–π –∏–∑ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –∏–∑–æ–±—Ä–∞–∂–µ–Ω–æ –∞–ª—å—Ñ–∞-–∏–∑–ª—É—á–µ–Ω–∏–µ?"
            a1 = open("—Ñ–æ—Ç–æ –¥–ª—è —Ç–µ—Å—Ç–∞/–∞–ª—å—Ñ–∞.jpg", "rb")
            bot.send_photo(message.chat.id, a1)
            a2 = open("—Ñ–æ—Ç–æ –¥–ª—è —Ç–µ—Å—Ç–∞/–±–µ—Ç–∞.jpg", "rb")
            bot.send_photo(message.chat.id, a2)
            a3 = open("—Ñ–æ—Ç–æ –¥–ª—è —Ç–µ—Å—Ç–∞/–≥–∞–º–º–∞.jpg", "rb")
            bot.send_photo(message.chat.id, a3)
            answers = ["1",
                       "2",
                       "3",
                       "–ù–∏ –Ω–∞ –æ–¥–Ω–æ–π"]
            markup = types.InlineKeyboardMarkup(row_width=1)
            true_item = types.InlineKeyboardButton("‚úÖ", callback_data="‚úÖ", one_time_keyboard=True)
            markup.add(true_item)
            bot.send_poll(chat_id=c_id, question=q, options=answers, type=Poll.QUIZ, correct_option_id=0,
                          reply_markup=markup)
            connect = sqlite3.connect('data_telegram.db')
            cursor = connect.cursor()
            people_user_id = message.chat.id
            cursor.execute(f"""SELECT n FROM telegram_users WHERE id = {people_user_id}""")
            n_data = cursor.fetchone()
            n = int(n_data[0]) + 1
            cursor.execute(f"""Update telegram_users set n = {n} where id = {people_user_id}""")
            connect.commit()

        elif num_question == 3:
            q = "–ù–∞ –∫–∞–∫–æ–π –∏–∑ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –∏–∑–æ–±—Ä–∞–∂–µ–Ω–æ –±–µ—Ç–∞-–∏–∑–ª—É—á–µ–Ω–∏–µ?"
            a1 = open("—Ñ–æ—Ç–æ –¥–ª—è —Ç–µ—Å—Ç–∞/–∞–ª—å—Ñ–∞.jpg", "rb")
            bot.send_photo(message.chat.id, a1)
            a2 = open("—Ñ–æ—Ç–æ –¥–ª—è —Ç–µ—Å—Ç–∞/–±–µ—Ç–∞.jpg", "rb")
            bot.send_photo(message.chat.id, a2)
            a3 = open("—Ñ–æ—Ç–æ –¥–ª—è —Ç–µ—Å—Ç–∞/–≥–∞–º–º–∞.jpg", "rb")
            bot.send_photo(message.chat.id, a3)
            answers = ["1",
                       "2",
                       "3",
                       "–ù–∏ –Ω–∞ –æ–¥–Ω–æ–π"]
            markup = types.InlineKeyboardMarkup(row_width=1)
            true_item = types.InlineKeyboardButton("‚úÖ", callback_data="‚úÖ", one_time_keyboard=True)
            markup.add(true_item)
            bot.send_poll(chat_id=c_id, question=q, options=answers, type=Poll.QUIZ, correct_option_id=1,
                          reply_markup=markup)
            connect = sqlite3.connect('data_telegram.db')
            cursor = connect.cursor()
            people_user_id = message.chat.id
            cursor.execute(f"""SELECT n FROM telegram_users WHERE id = {people_user_id}""")
            n_data = cursor.fetchone()
            n = int(n_data[0]) + 1
            cursor.execute(f"""Update telegram_users set n = {n} where id = {people_user_id}""")
            connect.commit()

        elif num_question == 4:
            q = "–ù–∞ –∫–∞–∫–æ–π –∏–∑ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –∏–∑–æ–±—Ä–∞–∂–µ–Ω–æ –≥–∞–º–º–∞-–∏–∑–ª—É—á–µ–Ω–∏–µ?"
            a1 = open("—Ñ–æ—Ç–æ –¥–ª—è —Ç–µ—Å—Ç–∞/–∞–ª—å—Ñ–∞.jpg", "rb")
            bot.send_photo(message.chat.id, a1)
            a2 = open("—Ñ–æ—Ç–æ –¥–ª—è —Ç–µ—Å—Ç–∞/–±–µ—Ç–∞.jpg", "rb")
            bot.send_photo(message.chat.id, a2)
            a3 = open("—Ñ–æ—Ç–æ –¥–ª—è —Ç–µ—Å—Ç–∞/–≥–∞–º–º–∞.jpg", "rb")
            bot.send_photo(message.chat.id, a3)
            answers = ["1",
                       "2",
                       "3",
                       "–ù–∏ –Ω–∞ –æ–¥–Ω–æ–π"]
            markup = types.InlineKeyboardMarkup(row_width=1)
            true_item = types.InlineKeyboardButton("‚úÖ", callback_data="‚úÖ", one_time_keyboard=True)
            markup.add(true_item)
            bot.send_poll(chat_id=c_id, question=q, options=answers, type=Poll.QUIZ, correct_option_id=2,
                          reply_markup=markup)
            connect = sqlite3.connect('data_telegram.db')
            cursor = connect.cursor()
            people_user_id = message.chat.id
            cursor.execute(f"""SELECT n FROM telegram_users WHERE id = {people_user_id}""")
            n_data = cursor.fetchone()
            n = int(n_data[0]) + 1
            cursor.execute(f"""Update telegram_users set n = {n} where id = {people_user_id}""")
            connect.commit()


    def otzv(message):
        bot.send_message(message.chat.id, """
–î–ª—è –∫–æ—Ä–æ—Ç–∫–æ–≥–æ –æ—Ç–∑—ã–≤–∞ –Ω–∞–∂–º–∏—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–Ω–æ–ø–æ–∫ –Ω–∏–∂–µ‚¨áÔ∏è:
–ß—Ç–æ–±—ã –Ω–∞–ø–∏—Å–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω—ã–π –æ—Ç–∑—ã–≤ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π: /write

–í–∞–∂–Ω–æ‚ùóÔ∏è 
–ß—Ç–æ–±—ã –æ—Ç–∑—ã–≤ –±—ã–ª –æ—Ñ–æ—Ä–º–ª–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ, —Ç–æ –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã /write –Ω–∞–∂–º–∏—Ç–µ Ctrl+Enter, –µ—Å–ª–∏ –≤—ã –Ω–∞ –ü–ö, –∏ enter, –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ (return - –Ω–∞ iphone)

üìç–ü—Ä–∏–º–µ—Ä: /write 
                      hello world!                                  
                                          """)
        markup = types.ReplyKeyboardMarkup(row_width=1)
        item1 = types.KeyboardButton("–ë–æ–ª—å—à–µ —Ç–µ—Å—Ç–æ–≤")
        item2 = types.KeyboardButton("–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Ç–µ–º")
        item3 = types.KeyboardButton("–ë–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω—ã–π –º–∞—Ç–µ—Ä–∏–∞–ª –≤ —Ç–µ–º–∞—Ö")
        item4 = types.KeyboardButton("–î—Ä—É–≥–æ–µ..")
        markup.add(item1, item2, item3, item4)
        bot.send_message(message.chat.id, "–ß—Ç–æ –±—ã –≤—ã —Ö–æ—Ç–µ–ª–∏ –≤–∏–¥–µ—Ç—å –Ω–æ–≤–æ–≥–æ –≤ –±–æ—Ç–µ?", reply_markup=markup)


    # —á—Ç–µ–Ω–∏–µ n –∏ k + –≤—ã—á–∏—Å–ª–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ–Ω—Ç—Ä–∞ –ø—Ä–æ–π–¥–µ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤ –∫ —á–∏—Å–ª—É –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö
    @bot.message_handler(commands=['results'])
    def users_statictik(message):
        global k
        global n
        connect = sqlite3.connect('data_telegram.db')
        cursor = connect.cursor()

        people_user_id = message.chat.id

        cursor.execute(f"""SELECT n FROM telegram_users WHERE id = {people_user_id}""")
        n_data = cursor.fetchone()
        cursor.execute(f"""SELECT k FROM telegram_users WHERE id = {people_user_id}""")
        k_data = cursor.fetchone()
        try:
            if int(n_data[0]) != 0:
                results = round((int(k_data[0])) / (int(n_data[0])) * 100)
                bot.send_message(message.chat.id, f"""–ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤: {results}%\
                                                    –í—Å–µ–≥–æ –ø—Ä–æ–π–¥–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤: {int(n_data[0])}   
–î–∞–Ω–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤: {int(k_data[0])}    """)
                if results > 101 or int(k_data[0]) > int(n_data[0]):
                    bot.send_message(message.chat.id, "–í—ã –æ–±–º–∞–Ω—ã–≤–∞–µ—Ç–µ! –í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç –æ–±–Ω—É–ª—è–µ—Ç—Å—è!")
                    people_id = message.chat.id
                    cursor.execute(f"DELETE FROM telegram_users WHERE id={people_id}")
                    connect.commit()
            else:
                markup = types.InlineKeyboardMarkup(row_width=1)
                item = types.InlineKeyboardButton("–†–µ—à–∞—Ç—å —Ç–µ—Å—Ç—ã!", callback_data="—Ç–µ—Å—Ç—ã")
                markup.add(item)
                bot.send_message(message.chat.id, "–í—ã –µ—â—ë –Ω–µ —Ä–µ—à–∏–ª–∏ –Ω–∏ –æ–¥–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞!", reply_markup=markup)
        except:
            markup = types.InlineKeyboardMarkup(row_width=1)
            item = types.InlineKeyboardButton("–†–µ—à–∞—Ç—å —Ç–µ—Å—Ç—ã!", callback_data="—Ç–µ—Å—Ç—ã")
            markup.add(item)
            bot.send_message(message.chat.id, "–í—ã –µ—â—ë –Ω–µ —Ä–µ—à–∏–ª–∏ –Ω–∏ –æ–¥–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞!", reply_markup=markup)


    @bot.message_handler(commands=['write'])
    def writer(message):
        try:
            global podr_otz
            people = list(map(str, message.text.split("\n")))
            print(people[1:])
            for i in people[1:]:
                if len(i) > 2 and i in people[1:] is not None:
                    bot.send_message(message.chat.id, "–°–ø–∞—Å–∏–±–æ! –í–∞—à –æ—Ç–∑—ã–≤ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ!")
                    podr_otz.append(people[1:])

                    # —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è –æ—Ç–∑—ã–≤–æ–≤
                    connect = sqlite3.connect('data_telegram.db')
                    cursor = connect.cursor()
                    cursor.execute("""CREATE TABLE IF NOT EXISTS podr_otz(
                                        otz TEXT
                                    )""")
                    connect.commit()
                    people_otz = people[1:]
                    cursor.execute("INSERT INTO podr_otz VALUES(?);", people_otz)
                    connect.commit()

                    print(podr_otz)
                else:
                    bot.send_message(message.chat.id, "–ü—É—Å—Ç–æ–π –æ—Ç–∑—ã–≤! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–æ –Ω–∞–ø–∏—Å–∞–Ω–∏—è –æ—Ç–∑—ã–≤–∞.")
        except:
            pass

    # –∞–¥–º–∏–Ω , –¥–ª—è —á—Ç–µ–Ω–∏—è –ø–æ–¥—Ä–æ–±–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤
    @bot.message_handler(commands=['read'])
    def reader(message):
        if message.chat.id == 847195722:
            connect = sqlite3.connect('data_telegram.db')
            cursor = connect.cursor()
            cursor.execute("""SELECT otz FROM podr_otz""")
            data_otz= cursor.fetchall()
            for line_data in data_otz:
                bot.send_message(message.chat.id, line_data)
        else:
            bot.send_message(message.cgat.id, "–í—ã –Ω–µ –∞–¥–º–∏–Ω!")

    # –æ—Ç–≤–µ—Ç –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–æ–∫
    @bot.message_handler(func=lambda m: True)
    def echo_all(message):
        global people_short_otzv_1, people_short_otzv_2, people_short_otzv_3, people_short_otzv_4, kol_opr
        # –¥–∏–Ω–∞–º–∏–∫–∞
        if message.text.upper() == "–í–¢–û–†–û–ô –ó–ê–ö–û–ù –ù–¨–Æ–¢–û–ù–ê":
            second_zakon_nutona(message)

        elif message.text.upper() == "–ü–ï–†–í–´–ô –ó–ê–ö–û–ù –ù–¨–Æ–¢–û–ù–ê":
            first_zakon_nutona(message)

        elif message.text.upper() == "–¢–†–ï–¢–ò–ô –ó–ê–ö–û–ù –ù–¨–Æ–¢–û–ù–ê":
            third_zakon_nutona(message)

        elif message.text.lower() == "—Å–∏–ª—ã –≤ –ø—Ä–∏—Ä–æ–¥–µ":
            force_in_wild(message)

        elif message.text.lower() == "–¥–µ—Ñ–æ—Ä–º–∞—Ü–∏—è –∏ —Å–∏–ª–∞ —É–ø—Ä—É–≥–æ—Å—Ç–∏":
            deformation_and_force_uprugosti(message)

        elif message.text.lower() == "–∑–∞–∫–æ–Ω –≥—É–∫–∞":
            zakon_Guka(message)

        elif message.text.upper() == "–î–ò–ù–ê–ú–ò–ö–ê":
            dinamika(message)

        elif message.text.lower() == "–∑–∞–∫–æ–Ω –≤—Å–µ–º–∏—Ä–Ω–æ–≥–æ —Ç—è–≥–æ—Ç–µ–Ω–∏—è":
            zakon_world_mg(message)

        elif message.text.lower() == "–∏–º–ø—É–ª—å—Å —Ç–µ–ª–∞":
            mv(message)

        elif message.text.lower() == "–∑–∞–∫–æ–Ω —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–º–ø—É–ª—å—Å–∞":
            zakon_save_mv(message)

        elif message.text.lower() == "–º–µ—Ö–∞–Ω–∏—á–µ—Å–∫–∞—è —Ä–∞–±–æ—Ç–∞ –∏ –º–æ—â–Ω–æ—Å—Ç—å":
            mechine_A_N(message)

        elif message.text.lower() == "–∫–ø–¥":
            KPD(message)

        elif message.text.lower() == "–¥–∞–≤–ª–µ–Ω–∏–µ":
            pressure(message)

        elif message.text.lower() == "–∑–∞–∫–æ–Ω –ø–∞—Å–∫–∞–ª—è":
            pascal(message)

        elif message.text.lower() == "–∑–∞–∫–æ–Ω –∞—Ä—Ö–∏–º–µ–¥–∞":
            archimed(message)

        elif message.text.lower() == "–º–µ—Ö–∞–Ω–∏—á–µ—Å–∫–∏–µ –∫–æ–ª–µ–±–∞–Ω–∏—è –∏ –≤–æ–ª–Ω—ã":
            kolebania_and_volns(message)

        # –≤—ã—Ö–æ–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        elif message.text.lower() == "‚¨ÖÔ∏è–≤—ã—Ö–æ–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
            exit_to_menu(message)

        # –∫–∏–Ω–µ–º–∞—Ç–∏–∫–∞
        elif message.text.upper() == "–ö–ò–ù–ï–ú–ê–¢–ò–ö–ê":
            kinematka(message)

        elif message.text.upper() == "–†–ê–í–ù–û–ú–ï–†–ù–û–ï –î–í–ò–ñ–ï–ù–ò–ï":
            ravnomernoe_dvj(message)

        elif message.text.upper() == "–†–ê–í–ù–û–£–°–ö–û–†–ï–ù–ù–û–ï/–†–ê–í–ù–û–ó–ê–ú–ï–î–õ–ï–ù–ù–û–ï –î–í–ò–ñ–ï–ù–ò–ï":
            ravn_uscor_and_zamedl_dvj(message)

        elif message.text.upper() == "–ü–û–°–¢–£–ü–ê–¢–ï–õ–¨–ù–û–ï –î–í–ò–ñ–ï–ù–ò–ï":
            postupatelnoe_dvj(message)

        elif message.text.upper() == "–í–†–ê–©–ê–¢–ï–õ–¨–ù–û–ï –î–í–ò–ñ–ï–ù–ò–ï":
            rotational_motion(message)

        elif message.text.lower() == "–¥–≤–∏–∂–µ–Ω–∏–µ —Å –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–º —É—Å–∫–æ—Ä–µ–Ω–∏–µ–º —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –ø–∞–¥–µ–Ω–∏—è":
            svobodnoe_padenie(message)

        elif message.text.lower() == "–º–≥–Ω–æ–≤–µ–Ω–Ω–∞—è –∏ —Å—Ä–µ–¥–Ω—è—è —Å–∫–æ—Ä–æ—Å—Ç–∏":
            mgn_and_sr_scorosti(message)

        elif message.text.lower() == "—Å–ª–æ–∂–µ–Ω–∏–µ —Å–∫–æ—Ä–æ—Å—Ç–µ–π":
            slojenie_scorostey(message)

        elif message.text.lower() == "—É—Å–∫–æ—Ä–µ–Ω–∏–µ":
            a(message)

        # —ç–Ω–µ—Ä–≥–∏—è
        elif message.text.lower() == "–º–µ—Ö–∞–Ω–∏—á–µ—Å–∫–∞—è —ç–Ω–µ—Ä–≥–∏—è":
            energy(message)

        elif message.text.lower() == "–ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è —ç–Ω–µ—Ä–≥–∏—è":
            poten_energy(message)

        elif message.text.lower() == "–∫–∏–Ω–µ—Ç–∏—á–µ—Å–∫–∞—è —ç–Ω–µ—Ä–≥–∏—è":
            kinet_energy(message)

        elif message.text.lower() == "—Ç–µ–æ—Ä–µ–º–∞ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–π —ç–Ω–µ—Ä–≥–∏–∏":
            teorema_poten_energy(message)

        elif message.text.lower() == "—Ç–µ–æ—Ä–µ–º–∞ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∫–∏–Ω–µ—Ç–∏—á–µ—Å–∫–æ–π —ç–Ω–µ—Ä–≥–∏–∏":
            teorema_kinet_energy(message)

        elif message.text.lower() == "–∑–∞–∫–æ–Ω —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –º–µ—Ö–∞–Ω–∏—á–µ—Å–∫–æ–π —ç–Ω–µ—Ä–≥–∏–∏":
            zakon_save_energy(message)

        # –º–µ—Ö–∞–Ω–∏–∫–∞
        elif message.text.lower() == "‚öôÔ∏è–º–µ—Ö–∞–Ω–∏—á–µ—Å–∫–∏–µ —è–≤–ª–µ–Ω–∏—è‚öôÔ∏è":
            machine(message)

        # —Ç–µ–ø–ª–æ–≤—ã–µ —è–≤–ª–µ–Ω–∏—è
        elif message.text.lower() == "üå°—Ç–µ–ø–ª–æ–≤—ã–µ —è–≤–ª–µ–Ω–∏—èüå°":
            teplo(message)

        elif message.text.lower() == "—Å—Ç—Ä–æ–µ–Ω–∏–µ –≤–µ—â–µ—Å—Ç–≤–∞":
            stroenie_substance(message)

        elif message.text.lower() == "–≤–∏–¥—ã —Ç–µ–ø–ª–æ–ø–µ—Ä–µ–¥–∞—á–∏":
            teploperedachi(message)

        elif message.text.lower() == "—Ç–µ–ø–ª–æ–≤–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ –∞—Ç–æ–º–æ–≤ –∏ –º–æ–ª–µ–∫—É–ª":
            tepl_dv_atoms_and_mol(message)

        elif message.text.lower() == "–≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è —ç–Ω–µ—Ä–≥–∏—è":
            vn_energy(message)

        elif message.text.lower() == "–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–µ–ø–ª–æ—Ç—ã":
            coll_teplots(message)

        elif message.text.lower() == "—Ç–µ–ø–ª–æ–≤—ã–µ –¥–≤–∏–≥–∞—Ç–µ–ª–∏":
            tepl_dvigatel(message)

        elif message.text.lower() == "–∏—Å–ø–∞—Ä–µ–Ω–∏–µ –∏ –∫–æ–Ω–¥–µ–Ω—Å–∞—Ü–∏—è":
            evaporation_condensation(message)

        elif message.text.lower() == "–ø–ª–∞–≤–ª–µ–Ω–∏–µ –∏ –∫—Ä–∏—Å—Ç–∞–ª–ª–∏–∑–∞—Ü–∏—è":
            melting_crystallization(message)

        # —ç–ª–µ–∫—Ç—Ä–æ–º–∞–≥–Ω–∏—Ç–Ω—ã–µ —è–≤–ª–µ–Ω–∏—è
        elif message.text.lower() == "‚ö°Ô∏è—ç–ª–µ–∫—Ç—Ä–æ–º–∞–≥–Ω–∏—Ç–Ω—ã–µ —è–≤–ª–µ–Ω–∏—è‚ö°Ô∏è":
            electromagnitizm(message)

        elif message.text.lower() == "—ç–ª–µ–∫—Ç—Ä–∏–∑–∞—Ü–∏—è —Ç–µ–ª":
            el_tel(message)

        elif message.text.lower() == "—ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–æ–µ –ø–æ–ª–µ":
            el_pole(message)

        elif message.text.lower() == "–ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏–π —Ç–æ–∫":
            poston_tok(message)

        elif message.text.lower() == "–∑–∞–∫–æ–Ω –æ–º–∞":
            zakon_oma(message)

        elif message.text.lower() == "–ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–µ –∏ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –ø—Ä–æ–≤–æ–¥–Ω–∏–∫–æ–≤":
            connection(message)

        elif message.text.lower() == "—Ä–∞–±–æ—Ç–∞ –∏ –º–æ—â–Ω–æ—Å—Ç—å —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–æ–≥–æ —Ç–æ–∫–∞":
            A_and_N_el_toka(message)

        elif message.text.lower() == "–∑–∞–∫–æ–Ω –¥–∂–æ—É–ª—è-–ª–µ–Ω—Ü–∞":
            zakon_Djol_lenz(message)

        elif message.text.lower() == "–æ–ø—ã—Ç —ç—Ä—Å—Ç–µ–¥–∞. –º–∞–≥–Ω–∏—Ç–Ω–æ–µ –ø–æ–ª–µ —Ç–æ–∫–∞":
            opt_ersteda(message)

        elif message.text.lower() == "—ç–ª–µ–∫—Ç—Ä–æ–º–∞–≥–Ω–∏—Ç–Ω–∞—è –∏–Ω–¥—É–∫—Ü–∏—è":
            el_induction(message)

        # —Å–≤–µ—Ç–æ–≤—ã–µ —è–≤–ª–µ–Ω–∏—è
        elif message.text.lower() == "üí°—Å–≤–µ—Ç–æ–≤—ã–µ —è–≤–ª–µ–Ω–∏—èüí°":
            svet_evl(message)

        elif message.text.lower() == "–∑–∞–∫–æ–Ω –ø—Ä—è–º–æ–ª–∏–Ω–µ–π–Ω–æ–≥–æ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è —Å–≤–µ—Ç–∞":
            zakon_raspr_sveta(message)

        elif message.text.lower() == "–∑–∞–∫–æ–Ω –æ—Ç—Ä–∞–∂–µ–Ω–∏—è —Å–≤–µ—Ç–∞":
            zakon_otr_sveta(message)

        elif message.text.lower() == "–ø–ª–æ—Å–∫–æ–µ –∑–µ—Ä–∫–∞–ª–æ":
            ploskoe_zerkalo(message)

        elif message.text.lower() == "–ø—Ä–µ–ª–æ–º–ª–µ–Ω–∏–µ —Å–≤–µ—Ç–∞":
            prelomlenie_sveta(message)

        elif message.text.lower() == "–¥–∏—Å–ø–µ—Ä—Å–∏—è —Å–≤–µ—Ç–∞":
            dispersia(message)

        elif message.text.lower() == "–ª–∏–Ω–∑—ã":
            linzs(message)

        elif message.text.lower() == "—Ñ–æ–∫—É—Å–Ω–æ–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –ª–∏–Ω–∑—ã":
            focus(message)

        # –∫–≤–∞–Ω—Ç–æ–≤—ã–µ —è–≤–ª–µ–Ω–∏—è
        elif message.text.lower() == "‚ò¢Ô∏è–∫–≤–∞–Ω—Ç–æ–≤—ã–µ —è–≤–ª–µ–Ω–∏—è‚ò¢Ô∏è":
            quantum(message)

        elif message.text.lower() == "—Ä–∞–¥–∏–æ–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å":
            radioactivnost(message)

        elif message.text.lower() == "–≤–∏–¥—ã –∏–∑–ª—É—á–µ–Ω–∏–π":
            kind_of_izl(message)

        elif message.text.lower() == "–æ–ø—ã—Ç—ã —Ä–µ–∑–µ—Ä—Ñ–æ—Ä–¥–∞":
            opt_rezerford(message)

        elif message.text.lower() == "–ø–ª–∞–Ω–µ—Ç–∞—Ä–Ω–∞—è –º–æ–¥–µ–ª—å –∞—Ç–æ–º–∞":
            model_of_atoms(message)

        elif message.text.lower() == "—Å–æ—Å—Ç–∞–≤ –∞—Ç–æ–º–Ω–æ–≥–æ —è–¥—Ä–∞":
            sostaf_of_atoms(message)

        # —Å–ø—Ä–∞–≤–æ—á–Ω—ã–π –º–∞—Ç–µ—Ä–∏–∞–ª
        elif message.text.lower() == "üìú—Å–ø—Ä–∞–≤–æ—á–Ω—ã–π –º–∞—Ç–µ—Ä–∏–∞–ªüìú":
            spravka(message)

        elif message.text.lower() == "–∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã":
            const(message)

        elif message.text.lower() == "–¥–µ—Å—è—Ç–∏—á–Ω—ã–µ –ø—Ä–∏—Å—Ç–∞–≤–∫–∏":
            des_prist(message)

        elif message.text.lower() == "–ø–ª–æ—Ç–Ω–æ—Å—Ç—å":
            ro(message)

        elif message.text.lower() == "—É–¥–µ–ª—å–Ω—ã–µ –≤–µ–ª–∏—á–∏–Ω—ã":
            ydel_vel(message)

        elif message.text.lower() == "—É–¥–µ–ª—å–Ω–æ–µ —ç–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–æ–µ —Å–æ–ø—Ä–æ—Ç–∏–≤–ª–µ–Ω–∏–µ":
            yd_el_soprot(message)

        elif message.text.lower() == "—Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –ø–ª–∞–≤–ª–µ–Ω–∏—è –∏ –∫–∏–ø–µ–Ω–∏—è":
            temp_plav_kip(message)

        # –æ—Ç–∑—ã–≤—ã
        elif message.text.lower() == "üóÇ–æ—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤üóÇ":
            otzv(message)

        elif message.text.lower() == "–±–æ–ª—å—à–µ —Ç–µ—Å—Ç–æ–≤":
            connect = sqlite3.connect('data_telegram.db')
            cursor = connect.cursor()
            people_id = message.chat.id
            try:
                cursor.execute(f"""SELECT people_short_otzv_1 FROM short_otz WHERE id = {people_id}""")
                data_people_short_otzv_1 = cursor.fetchone()
                cursor.execute(f"""SELECT people_short_otzv_2 FROM short_otz WHERE id = {people_id}""")
                data_people_short_otzv_2 = cursor.fetchone()
                cursor.execute(f"""SELECT people_short_otzv_3 FROM short_otz WHERE id = {people_id}""")
                data_people_short_otzv_3 = cursor.fetchone()
                cursor.execute(f"""SELECT people_short_otzv_4 FROM short_otz WHERE id = {people_id}""")
                data_people_short_otzv_4 = cursor.fetchone()
                if int(data_people_short_otzv_1[0]) == 1 or int(data_people_short_otzv_2[0]) == 1 or int(data_people_short_otzv_3[0]) == 1 or int(data_people_short_otzv_4[0]) == 1:
                    bot.send_message(message.chat.id, "–í—ã —É–∂–µ –æ—Å—Ç–∞–≤–ª—è–ª–∏ –æ—Ç–∑—ã–≤!")
                    exit_to_menu(message)
                else:
                    people_short_otzv_1 += 1
                    bot.send_message(message.chat.id, "–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–∑—ã–≤!")
                    cursor.execute(f"""Update short_otz set people_short_otzv_1 = {people_short_otzv_1} where id = {people_id}""")
                    connect.commit()
                    exit_to_menu(message)
            except:
                send_welcome(message)

        elif message.text.lower() == "—Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Ç–µ–º":
            connect = sqlite3.connect('data_telegram.db')
            cursor = connect.cursor()
            people_id = message.chat.id
            try:
                cursor.execute(f"""SELECT people_short_otzv_1 FROM short_otz WHERE id = {people_id}""")
                data_people_short_otzv_1 = cursor.fetchone()
                cursor.execute(f"""SELECT people_short_otzv_2 FROM short_otz WHERE id = {people_id}""")
                data_people_short_otzv_2 = cursor.fetchone()
                cursor.execute(f"""SELECT people_short_otzv_3 FROM short_otz WHERE id = {people_id}""")
                data_people_short_otzv_3 = cursor.fetchone()
                cursor.execute(f"""SELECT people_short_otzv_4 FROM short_otz WHERE id = {people_id}""")
                data_people_short_otzv_4 = cursor.fetchone()
                if int(data_people_short_otzv_1[0]) == 1 or int(data_people_short_otzv_2[0]) == 1 or int(data_people_short_otzv_3[0]) == 1 or int(data_people_short_otzv_4[0]) == 1:
                    bot.send_message(message.chat.id, "–í—ã —É–∂–µ –æ—Å—Ç–∞–≤–ª—è–ª–∏ –æ—Ç–∑—ã–≤!")
                    exit_to_menu(message)
                else:
                    people_short_otzv_2 += 1
                    bot.send_message(message.chat.id, "–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–∑—ã–≤!")
                    cursor.execute(f"""Update short_otz set people_short_otzv_2 = {people_short_otzv_2} where id = {people_id}""")
                    connect.commit()
                    exit_to_menu(message)
            except:
                send_welcome(message)

        elif message.text.lower() == "–±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω—ã–π –º–∞—Ç–µ—Ä–∏–∞–ª –≤ —Ç–µ–º–∞—Ö":
            connect = sqlite3.connect('data_telegram.db')
            cursor = connect.cursor()
            people_id = message.chat.id
            try:
                cursor.execute(f"""SELECT people_short_otzv_1 FROM short_otz WHERE id = {people_id}""")
                data_people_short_otzv_1 = cursor.fetchone()
                cursor.execute(f"""SELECT people_short_otzv_2 FROM short_otz WHERE id = {people_id}""")
                data_people_short_otzv_2 = cursor.fetchone()
                cursor.execute(f"""SELECT people_short_otzv_3 FROM short_otz WHERE id = {people_id}""")
                data_people_short_otzv_3 = cursor.fetchone()
                cursor.execute(f"""SELECT people_short_otzv_4 FROM short_otz WHERE id = {people_id}""")
                data_people_short_otzv_4 = cursor.fetchone()
                if int(data_people_short_otzv_1[0]) == 1 or int(data_people_short_otzv_2[0]) == 1 or int(data_people_short_otzv_3[0]) == 1 or int(data_people_short_otzv_4[0]) == 1:
                    bot.send_message(message.chat.id, "–í—ã —É–∂–µ –æ—Å—Ç–∞–≤–ª—è–ª–∏ –æ—Ç–∑—ã–≤!")
                    exit_to_menu(message)
                else:
                    people_short_otzv_3 += 1
                    bot.send_message(message.chat.id, "–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–∑—ã–≤!")
                    cursor.execute(f"""Update short_otz set people_short_otzv_3 = {people_short_otzv_3} where id = {people_id}""")
                    connect.commit()
                    exit_to_menu(message)
            except:
                send_welcome(message)

        elif message.text.lower() == "–¥—Ä—É–≥–æ–µ..":
            connect = sqlite3.connect('data_telegram.db')
            cursor = connect.cursor()
            people_id = message.chat.id
            try:
                cursor.execute(f"""SELECT people_short_otzv_1 FROM short_otz WHERE id = {people_id}""")
                data_people_short_otzv_1 = cursor.fetchone()
                cursor.execute(f"""SELECT people_short_otzv_2 FROM short_otz WHERE id = {people_id}""")
                data_people_short_otzv_2 = cursor.fetchone()
                cursor.execute(f"""SELECT people_short_otzv_3 FROM short_otz WHERE id = {people_id}""")
                data_people_short_otzv_3 = cursor.fetchone()
                cursor.execute(f"""SELECT people_short_otzv_4 FROM short_otz WHERE id = {people_id}""")
                data_people_short_otzv_4 = cursor.fetchone()
                if int(data_people_short_otzv_1[0]) == 1 or int(data_people_short_otzv_2[0]) == 1 or int(data_people_short_otzv_3[0]) == 1 or int(data_people_short_otzv_4[0]) == 1:
                    bot.send_message(message.chat.id, "–í—ã —É–∂–µ –æ—Å—Ç–∞–≤–ª—è–ª–∏ –æ—Ç–∑—ã–≤!")
                    exit_to_menu(message)
                else:
                    bot.send_message(message.chat.id, "–°–ø–∞—Å–∏–±–æ –∑–∞ –æ—Ç–∑—ã–≤!")
                    people_short_otzv_4 += 1
                    cursor.execute(f"""Update short_otz set people_short_otzv_4 = {people_short_otzv_4} where id = {people_id}""")
                    connect.commit()
                    exit_to_menu(message)
            except:
                send_welcome(message)

        # —Ç–µ—Å—Ç—ã
        elif message.text.lower() == "üìù—Ç–µ—Å—Ç—ãüìù":
            tests(message)

        elif message.text.lower() == "—Ç–µ—Å—Ç—ã –ø–æ –º–µ—Ö–∞–Ω–∏—á–µ—Å–∫–∏–º —è–≤–ª–µ–Ω–∏—è–º":
            test_of_mechine(message)

        elif message.text.lower() == "—Ç–µ—Å—Ç—ã –ø–æ —Ç–µ–ø–ª–æ–≤—ã–º —è–≤–ª–µ–Ω–∏—è–º":
            test_of_tepl(message)

        elif message.text.lower() == "—Ç–µ—Å—Ç—ã –ø–æ —ç–ª–µ–∫—Ç—Ä–æ–º–∞–≥–Ω–∏—Ç–Ω—ã–º —è–≤–ª–µ–Ω–∏—è–º":
            test_of_elctr(message)

        elif message.text.lower() == "—Ç–µ—Å—Ç—ã –ø–æ –∫–≤–∞–Ω—Ç–æ–≤—ã–º —è–≤–ª–µ–Ω–∏—è–º":
            tests_of_kvant(message)

        else:
            bot.reply_to(message, "–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é –≤–∞—à –≤–≤–æ–¥ =(")
except:
    time.sleep(1)

if __name__ == '__main__':
    bot.polling(none_stop=True, interval=0)
